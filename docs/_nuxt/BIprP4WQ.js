import{a5 as iw,_ as kg,N as Cg,K as Ng,r as re,u as Ig,O as Ch,o as Nh,g as ue,Q as Vn,y as Dt,C as vt,B as ct,z as Tt,x as Zt,S as Ys,T as Js,R as de,A as an,D as Ce,a6 as lw,L as gf,a7 as cw,M as uw,a8 as hw,a3 as dw,k as ru,s as pw,e as fw,P as Ns,a9 as mw,aa as gw,J as yw}from"./0Eq_O3Zc.js";import{R as Is,I as bw,C as xw}from"./DPDT5bJw.js";const ww=iw("/images/bellring.png"),vw={class:"mt-3"},$w={style:{"font-size":"1.6em"}},kw={key:0,style:{"font-size":"1.3em","font-style":"italic"},class:"ml-4"},Cw={__name:"TimerDialog",emits:["result"],setup(n,{emit:t}){Cg();const e=Ng();re(e.authInfo);const s=t;Ig(),Ch().params.userId;const o=re(!1),a=re(null),i=re(null),l=re(!1),c=re([]);let u=null;Nh(async()=>{s("result",async p=>(c.value=p,l.value=!1,u=new Audio("/audio/alert.mp3"),u.loop=!0,u.play(),setTimeout(()=>{h()},1e4),o.value=!0,new Promise((f,m)=>{a.value=f,i.value=m})))});function h(){u&&(u.pause(),u.currentTime=0,l.value=!0)}function d(){h(),o.value=!1,a.value(!1)}return(p,f)=>{const m=ue("v-card-title"),g=ue("v-divider"),y=ue("v-card-text"),b=ue("v-btn"),$=ue("v-card-actions"),x=ue("v-card"),w=ue("v-dialog");return Dt(),Vn(w,{"max-width":"600",persistent:"",modelValue:o.value,"onUpdate:modelValue":f[0]||(f[0]=C=>o.value=C)},{default:vt(()=>[ct(x,{style:{"background-color":"#fcfaf7"},class:"pa-4"},{default:vt(()=>[ct(m,null,{default:vt(()=>[...f[1]||(f[1]=[Tt("h2",null,"Zeit abgelaufen!",-1)])]),_:1}),ct(y,null,{default:vt(()=>[f[3]||(f[3]=Tt("div",{style:{width:"100%"},class:"text-center"},[Tt("div",{class:"vibrate"},[Tt("img",{alt:"bellring",src:ww,style:{width:"300px",height:"300px"},class:"mt-2"})])],-1)),ct(g),Tt("div",vw,[f[2]||(f[2]=Tt("h3",null,"Folgende Timer sind abgelaufen:",-1)),(Dt(!0),Zt(Ys,null,Js(c.value,C=>(Dt(),Zt("div",{key:C.id},[Tt("span",$w,"- "+an(C.title),1),C.descriptionTextAfter?(Dt(),Zt("div",kw,an(C.descriptionTextAfter),1)):de("",!0)]))),128))])]),_:1}),ct($,null,{default:vt(()=>[ct(b,{onClick:h,rounded:"",variant:"outlined",disabled:l.value},{default:vt(()=>[...f[4]||(f[4]=[Ce(" Wecker stoppen ",-1)])]),_:1},8,["disabled"]),ct(b,{onClick:d,rounded:"",variant:"outlined",color:"red"},{default:vt(()=>[...f[5]||(f[5]=[Ce(" Schließen ",-1)])]),_:1})]),_:1})]),_:1})]),_:1},8,["modelValue"])}}},Nw=kg(Cw,[["__scopeId","data-v-38b0a021"]]),yf={},ou={},bf={debounceTime(n,t,e){clearTimeout(yf[n]),yf[n]=setTimeout(()=>{t.apply(this)},e)},reduceExecutions(n,t,e){ou[n]||(ou[n]=!0,setTimeout(()=>{ou[n]=!1},e),t.apply(this))}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Iw=1e-7,Sw=1e-4;class Sg{constructor(t,e){this.backend=t,this.dataMover=e,this.data=new WeakMap,this.dataIdsCount=0}get(t){return this.data.has(t)||this.dataMover.moveData(this.backend,t),this.data.get(t)}set(t,e){this.dataIdsCount++,this.data.set(t,e)}has(t){return this.data.has(t)}delete(t){return this.dataIdsCount--,this.data.delete(t)}numDataIds(){return this.dataIdsCount}}class Ih{refCount(t){return kn("refCount")}incRef(t){return kn("incRef")}timerAvailable(){return!0}time(t){return kn("time")}read(t){return kn("read")}readSync(t){return kn("readSync")}numDataIds(){return kn("numDataIds")}disposeData(t,e){return kn("disposeData")}write(t,e,s){return kn("write")}move(t,e,s,r,o){return kn("move")}memory(){return kn("memory")}floatPrecision(){return kn("floatPrecision")}epsilon(){return this.floatPrecision()===32?Iw:Sw}dispose(){return kn("dispose")}}function kn(n){throw new Error(`'${n}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tw(n){let t=n.length,e=0,s=0;for(;t>0;)s=Math.random()*t|0,t--,e=n[t],n[t]=n[s],n[s]=e}function cr(n,t,e){return Math.max(n,Math.min(t,e))}function Tg(n){return n%2===0?n:n+1}function Ew(n){let t=0;for(let e=0;e<n.length;e++)t+=n[e];return t}function N(n,t){if(!n)throw new Error(typeof t=="string"?t:t())}function bl(n,t,e=""){N(Gt(n,t),()=>e+` Shapes ${n} and ${t} must match`)}function Sh(n){N(n!=null,()=>"The input to the tensor constructor must be a non-null value.")}function Mr(n,t=[],e=!1){if(t==null&&(t=[]),Array.isArray(n)||os(n)&&!e)for(let s=0;s<n.length;++s)Mr(n[s],t,e);else t.push(n);return t}function H(n){if(n.length===0)return 1;let t=n[0];for(let e=1;e<n.length;e++)t*=n[e];return t}function Gt(n,t){if(n===t)return!0;if(n==null||t==null||n.length!==t.length)return!1;for(let e=0;e<n.length;e++)if(n[e]!==t[e])return!1;return!0}function Le(n){return n%1===0}function Eu(n){const t=Math.ceil(Math.sqrt(n));return[t,Math.ceil(n/t)]}function _r(n,t){return t<=n.length?n:n+" ".repeat(t-n.length)}function xf(n,t=s=>0,e){return new Promise((s,r)=>{let o=0;const a=()=>{if(n()){s();return}o++;const i=t(o);setTimeout(a,i)};a()})}function Eg(n,t){let e=1,s=-1;for(let o=0;o<n.length;++o)if(n[o]>=0)e*=n[o];else if(n[o]===-1){if(s!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${s} and dim ${o}`);s=o}else if(n[o]<0)throw Error(`Shapes can not be < 0. Found ${n[o]} at dim ${o}`);if(s===-1){if(t>0&&t!==e)throw Error(`Size(${t}) must match the product of shape ${n}`);return n}if(e===0)throw Error(`Cannot infer the missing size in [${n}] when there are 0 elements`);if(t%e!==0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${e}`);const r=n.slice();return r[s]=t/e,r}function Et(n,t){const e=t.length;return n=n==null?t.map((s,r)=>r):[].concat(n),N(n.every(s=>s>=-e&&s<e),()=>`All values in axis param must be in range [-${e}, ${e}) but got axis ${n}`),N(n.every(s=>Le(s)),()=>`All values in axis param must be integers but got axis ${n}`),n.map(s=>s<0?e+s:s)}function yr(n,t){const e=[],s=[],r=t!=null&&Array.isArray(t)&&t.length===0,o=t==null||r?null:Et(t,n).sort();let a=0;for(let i=0;i<n.length;++i){if(o!=null){if(o[a]===i&&n[i]!==1)throw new Error(`Can't squeeze axis ${i} since its dim '${n[i]}' is not 1`);(o[a]==null||o[a]>i)&&n[i]===1&&(e.push(n[i]),s.push(i)),o[a]<=i&&a++}n[i]!==1&&(e.push(n[i]),s.push(i))}return{newShape:e,keptDims:s}}function Ge(n,t){let e=null;if(n==null||n==="float32")e=new Float32Array(t);else if(n==="int32")e=new Int32Array(t);else if(n==="bool")e=new Uint8Array(t);else throw new Error(`Unknown data type ${n}`);return e}function Jr(n,t){let e=null;if(n==null||n==="float32")e=new Float32Array(t);else if(n==="int32")e=new Int32Array(t);else if(n==="bool")e=new Uint8Array(t);else if(n==="string")e=new Array(t);else throw new Error(`Unknown data type ${n}`);return e}function Aw(n,t){for(let e=0;e<n.length;e++){const s=n[e];if(isNaN(s)||!isFinite(s))throw Error(`A tensor of type ${t} being uploaded contains ${s}.`)}}function Dw(n){return n==="bool"||n==="complex64"||n==="float32"||n==="int32"||n==="string"}function Ag(n,t){return!(t==="complex64"||t==="float32"&&n!=="complex64"||t==="int32"&&n!=="float32"&&n!=="complex64"||t==="bool"&&n==="bool")}function os(n){return n instanceof Float32Array||n instanceof Int32Array||n instanceof Uint8Array}function Au(n){if(n==="float32"||n==="int32")return 4;if(n==="complex64")return 8;if(n==="bool")return 1;throw new Error(`Unknown dtype ${n}`)}function Rw(n){if(n==null)return 0;let t=0;return n.forEach(e=>t+=e.length),t}function Lo(n){return typeof n=="string"||n instanceof String}function Fw(n){return typeof n=="boolean"}function Du(n){return typeof n=="number"}function Po(n){return Array.isArray(n)?Po(n[0]):n instanceof Float32Array?"float32":n instanceof Int32Array||n instanceof Uint8Array?"int32":Du(n)?"float32":Lo(n)?"string":Fw(n)?"bool":"float32"}function Ru(n){return!!(n&&n.constructor&&n.call&&n.apply)}function Fu(n,t){for(let e=t;e<n;++e)if(n%e===0)return e;return n}function ft(n){const t=n.length;if(t<2)return[];const e=new Array(t-1);e[t-2]=n[t-1];for(let s=t-3;s>=0;--s)e[s]=e[s+1]*n[s+1];return e}function Dg(n,t,e){const s=new Array;if(t.length===1){const r=t[0];for(let o=0;o<r;o++)s[o]=e[n+o]}else{const r=t[0],o=t.slice(1),a=o.reduce((i,l)=>i*l);for(let i=0;i<r;i++)s[i]=Dg(n+i*a,o,e)}return s}function Dn(n,t){if(n.length===0)return t[0];const e=n.reduce((s,r)=>s*r);if(e===0)return[];if(e!==t.length)throw new Error(`[${n}] does not match the input size ${t.length}.`);return Dg(0,n,t)}function Rg(n,t){const e=Ke(n,t);for(let s=0;s<e.length;s++)e[s]=1;return e}function Ke(n,t){if(t==null||t==="float32"||t==="complex64")return new Float32Array(n);if(t==="int32")return new Int32Array(n);if(t==="bool")return new Uint8Array(n);throw new Error(`Unknown data type ${t}`)}function Fg(n,t){const e=n.reduce((s,r)=>s*r,1);if(t==null||t==="float32")return Dn(n,new Float32Array(e));if(t==="int32")return Dn(n,new Int32Array(e));if(t==="bool")return Dn(n,new Uint8Array(e));throw new Error(`Unknown data type ${t}`)}function Og(n){n.forEach(t=>{N(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${n}].`)})}function ss(n,t,e){if(t===0)return 0;if(t===1)return n[0];let s=n[n.length-1];for(let r=0;r<n.length-1;++r)s+=e[r]*n[r];return s}function zo(n,t,e){if(t===0)return[];if(t===1)return[n];const s=new Array(t);for(let r=0;r<s.length-1;++r)s[r]=Math.floor(n/e[r]),n-=s[r]*e[r];return s[s.length-1]=n,s}function No(n){return n&&n.then&&typeof n.then=="function"}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wf="tfjsflags";class Ow{constructor(t){this.global=t,this.flags={},this.flagRegistry={},this.urlFlags={},this.populateURLFlags()}setPlatform(t,e){this.platform!=null&&console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`),this.platformName=t,this.platform=e}registerFlag(t,e,s){if(this.flagRegistry[t]={evaluationFn:e,setHook:s},this.urlFlags[t]!=null){const r=this.urlFlags[t];console.warn(`Setting feature override from URL ${t}: ${r}.`),this.set(t,r)}}async getAsync(t){return t in this.flags?this.flags[t]:(this.flags[t]=await this.evaluateFlag(t),this.flags[t])}get(t){if(t in this.flags)return this.flags[t];const e=this.evaluateFlag(t);if(No(e))throw new Error(`Flag ${t} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[t]=e,this.flags[t]}getNumber(t){return this.get(t)}getBool(t){return this.get(t)}getFlags(){return this.flags}get features(){return this.flags}set(t,e){if(this.flagRegistry[t]==null)throw new Error(`Cannot set flag ${t} as it has not been registered.`);this.flags[t]=e,this.flagRegistry[t].setHook!=null&&this.flagRegistry[t].setHook(e)}evaluateFlag(t){if(this.flagRegistry[t]==null)throw new Error(`Cannot evaluate flag '${t}': no evaluation function found.`);return this.flagRegistry[t].evaluationFn()}setFlags(t){this.flags=Object.assign({},t)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global>"u"||typeof this.global.location>"u"||typeof this.global.location.search>"u")return;const t=_w(this.global.location.search);wf in t&&t[wf].split(",").forEach(s=>{const[r,o]=s.split(":");this.urlFlags[r]=Pw(r,o)})}}function _w(n){const t={};return n.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(e,...s)=>(Lw(t,s[0],s[1]),s.join("="))),t}function Lw(n,t,e){n[decodeURIComponent(t)]=decodeURIComponent(e||"")}function Pw(n,t){if(t=t.toLowerCase(),t==="true"||t==="false")return t==="true";if(`${+t}`===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${n}.`)}function X(){return _g}let _g=null;function zw(n){_g=n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let au;function Lg(){if(au==null){let n;if(typeof window<"u")n=window;else if(typeof global<"u")n=global;else if(typeof process<"u")n=process;else if(typeof self<"u")n=self;else throw new Error("Could not find a global object");au=n}return au}function Bw(){const n=Lg();return n._tfGlobals==null&&(n._tfGlobals=new Map),n._tfGlobals}function Th(n,t){const e=Bw();if(e.has(n))return e.get(n);{const s=t();return e.set(n,s),e.get(n)}}const xl="Abs",Bo="Acos",Mo="Acosh",Zr="Add",wl="AddN",Eh="All",Ah="Any",vl="ArgMax",$l="ArgMin",Vo="Asin",Wo="Asinh",Uo="Atan",Go="Atanh",Ho="Atan2",kl="AvgPool",Dh="AvgPoolGrad",Cl="AvgPool3D",Rh="AvgPool3DGrad",Nl="BatchMatMul",Il="BatchToSpaceND",Fh="Bincount",Mw="BroadcastTo",jo="Cast",qo="Ceil",Ko="ClipByValue",Oh="Complex",Sl="ComplexAbs",Tl="Concat",El="Conv2D",_h="Conv2DBackpropFilter",Al="Conv2DBackpropInput",Dl="Conv3D",Lh="Conv3DBackpropFilterV2",Ph="Conv3DBackpropInputV2",Xo="Cos",Yo="Cosh",Rl="Cumsum",zh="CropAndResize",Bh="DenseBincount",Mh="DepthToSpace",Fl="DepthwiseConv2dNative",Vh="DepthwiseConv2dNativeBackpropFilter",Wh="DepthwiseConv2dNativeBackpropInput",Pg="Diag",Ol="Dilation2D",Ou="Dilation2DBackpropInput",_u="Dilation2DBackpropFilter",Jo="RealDiv",Zo="Elu",Uh="EluGrad",Qo="Erf",_l="Equal",ta="Exp",Ll="ExpandDims",ea="Expm1",Gh="FFT",Hh="Fill",jh="FlipLeftRight",na="Floor",sa="FloorDiv",Pl="FusedBatchNorm",zl="GatherV2",qh="GatherNd",Bl="Greater",ra="GreaterEqual",oa="Identity",Kh="IFFT",Xh="Imag",aa="IsFinite",ia="IsInf",la="IsNan",Ml="LeakyRelu",Vl="Less",Wl="LessEqual",Yh="LinSpace",ca="Log",ua="Log1p",Ul="LogicalAnd",Gl="LogicalNot",Hl="LogicalOr",Vw="LogSoftmax",jl="LRN",Jh="LRNGrad",ql="Max",ha="Maximum",Kl="MaxPool",Zh="MaxPoolGrad",Xl="MaxPool3D",Qh="MaxPool3DGrad",td="MaxPoolWithArgmax",Yl="Mean",Jl="Min",da="Minimum",Zl="MirrorPad",pa="Mod",ed="Multinomial",fa="Multiply",Ql="Neg",tc="NotEqual",nd="NonMaxSuppressionV3",sd="NonMaxSuppressionV4",rd="NonMaxSuppressionV5",ec="OnesLike",nc="OneHot",sc="Pack",rc="PadV2",ma="Pow",oc="Prelu",od="Prod",ad="Range",id="Real",ga="Reciprocal",ya="Relu",ac="Reshape",ic="ResizeNearestNeighbor",ld="ResizeNearestNeighborGrad",lc="ResizeBilinear",cd="ResizeBilinearGrad",ba="Relu6",cc="Reverse",xa="Round",wa="Rsqrt",ud="ScatterNd",uc="Select",va="Selu",hc="Slice",$a="Sin",ka="Sinh",Ca="Sign",Na="Sigmoid",Ia="Softplus",Sa="Sqrt",dc="Sum",pc="SpaceToBatchND",fc="SplitV",mc="Softmax",Ta="SquaredDifference",hd="Square",Ea="Sub",dd="SparseToDense",pd="StridedSlice",Aa="Tan",Da="Tanh",Ra="Tile",fd="TopK",md="Transform",gc="Transpose",gd="Unique",yc="Unpack",bc="UnsortedSegmentSum",xc="ZerosLike",Fa="Step",Lu="FromPixels",yd="RotateWithOffset",Gi="_FusedMatMul",Hi="FusedConv2D",ji="FusedDepthwiseConv2D";/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qi=Th("kernelRegistry",()=>new Map),Pu=Th("gradRegistry",()=>new Map);function zu(n,t){const e=Bg(n,t);return qi.get(e)}function vf(n){return Pu.get(n)}function $f(n){const t=qi.entries(),e=[];for(;;){const{done:s,value:r}=t.next();if(s)break;const[o,a]=r,[i]=o.split("_");i===n&&e.push(a)}return e}function zg(n){const{kernelName:t,backendName:e}=n,s=Bg(t,e);qi.has(s)&&console.warn(`The kernel '${t}' for backend '${e}' is already registered`),qi.set(s,n)}function Ww(n){const{kernelName:t}=n;Pu.has(t)&&X().getBool("DEBUG")&&console.warn(`Overriding the gradient for '${t}'`),Pu.set(t,n)}function Bg(n,t){return`${t}_${n}`}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ws(n,t){return t==="string"?Oa(n):br([n],t)}function Uw(n,t){return n instanceof Float32Array&&t==="float32"||n instanceof Int32Array&&t==="int32"||n instanceof Uint8Array&&t==="bool"}function br(n,t){if(t==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(n)&&(n=Mr(n)),X().getBool("DEBUG")&&Aw(n,t),Uw(n,t))return n;if(t==null||t==="float32"||t==="complex64")return new Float32Array(n);if(t==="int32")return new Int32Array(n);if(t==="bool"){const e=new Uint8Array(n.length);for(let s=0;s<e.length;++s)Math.round(n[s])!==0&&(e[s]=1);return e}else throw new Error(`Unknown data type ${t}`)}function nn(){return X().platform.now()}function Oa(n,t="utf-8"){return t=t||"utf-8",X().platform.encode(n,t)}function Vr(n,t="utf-8"){return t=t||"utf-8",X().platform.decode(n,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Gw{constructor(t,e){this.backendTimer=t,this.logger=e,e==null&&(this.logger=new jw)}profileKernel(t,e,s){let r;const o=()=>{r=s()};let a;const i=nn();if(this.backendTimer.timerAvailable())a=this.backendTimer.time(o);else{o();for(const c of r)c.dataSync();a=Promise.resolve({kernelMs:nn()-i})}if(X().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let c=0;c<r.length;c++){const u=r[c];u.data().then(h=>{Hw(h,u.dtype,t)})}return{kernelName:t,outputs:r,inputs:e,timeMs:a.then(c=>c.kernelMs),extraInfo:a.then(c=>c.getExtraProfileInfo!=null?c.getExtraProfileInfo():"")}}logKernelProfile(t){const{kernelName:e,outputs:s,timeMs:r,inputs:o,extraInfo:a}=t;s.forEach(i=>{Promise.all([i.data(),r,a]).then(l=>{this.logger.logKernelProfile(e,i,l[0],l[1],o,l[2])})})}}function Hw(n,t,e){if(t!=="float32")return!1;for(let s=0;s<n.length;s++){const r=n[s];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${e}'`),!0}return!1}class jw{logKernelProfile(t,e,s,r,o,a){const i=typeof r=="number"?_r(`${r}ms`,9):r.error,l=_r(t,25),c=e.rank,u=e.size,h=_r(e.shape.toString(),14);let d="";for(const p in o){const f=o[p];if(f!=null){const m=f.shape||e.shape,g=m.length;d+=`${p}: ${g}D ${g>0?m:""} `}}console.log(`%c${l}	%c${i}	%c${c}D ${h}	%c${u}	%c${d}	%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qw(n,t,e){const s={},r={};for(let l=0;l<t.length;l++)s[t[l].id]=!0;for(let l=0;l<n.length;l++){const c=n[l],u=c.inputs;for(const h in u){const d=u[h];let p=!1;for(let f=0;f<t.length;f++)if(s[d.id]){c.outputs.forEach(m=>s[m.id]=!0),p=!0,r[c.id]=!0;break}if(p)break}}const o={};o[e.id]=!0;const a={};for(let l=n.length-1;l>=0;l--){const c=n[l],u=c.inputs;for(let h=0;h<c.outputs.length;h++)if(o[c.outputs[h].id]){for(const d in u)o[u[d].id]=!0,a[c.id]=!0;break}}const i=[];for(let l=0;l<n.length;l++){const c=n[l];if(r[c.id]&&a[c.id]){const u={};for(const d in c.inputs){const p=c.inputs[d];s[p.id]&&(u[d]=p)}const h=Object.assign({},c);h.inputs=u,h.outputs=c.outputs,i.push(h)}}return i}function Kw(n,t,e,s){for(let r=t.length-1;r>=0;r--){const o=t[r],a=[];if(o.outputs.forEach(l=>{const c=n[l.id];c!=null?a.push(c):a.push(null)}),o.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${o.kernelName}.`);const i=o.gradient(a);for(const l in o.inputs){if(!(l in i))throw new Error(`Cannot backprop through input ${l}. Available gradients found: ${Object.keys(i)}.`);const c=e(()=>i[l]());if(c.dtype!=="float32")throw new Error(`Error in gradient for op ${o.kernelName}. The gradient of input ${l} must have 'float32' dtype, but has '${c.dtype}'`);const u=o.inputs[l];if(!Gt(c.shape,u.shape))throw new Error(`Error in gradient for op ${o.kernelName}. The gradient of input '${l}' has shape '${c.shape}', which does not match the shape of the input '${u.shape}'`);if(n[u.id]==null)n[u.id]=c;else{const h=n[u.id];n[u.id]=s(h,c),h.dispose()}}}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kf=20,mo=3,iu=7;function Xw(n,t,e,s){const r=ft(t),o=Yw(n,t,e,r),a=t.length,i=vi(n,t,e,r,o),l=["Tensor"];return s&&(l.push(`  dtype: ${e}`),l.push(`  rank: ${a}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(i.map(c=>"    "+c).join(`
`)),l.join(`
`)}function Yw(n,t,e,s){const r=H(t),o=s[s.length-1],a=new Array(o).fill(0),i=t.length,l=e==="complex64"?xo(n):n;if(i>1)for(let c=0;c<r/o;c++){const u=c*o;for(let h=0;h<o;h++)a[h]=Math.max(a[h],bo(l[u+h],0,e).length)}return a}function bo(n,t,e){let s;return Array.isArray(n)?s=`${parseFloat(n[0].toFixed(iu))} + ${parseFloat(n[1].toFixed(iu))}j`:Lo(n)?s=`'${n}'`:e==="bool"?s=Mg(n):s=parseFloat(n.toFixed(iu)).toString(),_r(s,t)}function Mg(n){return n===0?"false":"true"}function vi(n,t,e,s,r,o=!0){const a=e==="complex64"?2:1,i=t[0],l=t.length;if(l===0){if(e==="complex64"){const m=xo(n);return[bo(m[0],0,e)]}return e==="bool"?[Mg(n[0])]:[n[0].toString()]}if(l===1){if(i>kf){const g=mo*a;let y=Array.from(n.slice(0,g)),b=Array.from(n.slice((i-mo)*a,i*a));return e==="complex64"&&(y=xo(y),b=xo(b)),["["+y.map(($,x)=>bo($,r[x],e)).join(", ")+", ..., "+b.map(($,x)=>bo($,r[i-mo+x],e)).join(", ")+"]"]}return["["+(e==="complex64"?xo(n):Array.from(n)).map((g,y)=>bo(g,r[y],e)).join(", ")+"]"]}const c=t.slice(1),u=s.slice(1),h=s[0]*a,d=[];if(i>kf){for(let m=0;m<mo;m++){const g=m*h,y=g+h;d.push(...vi(n.slice(g,y),c,e,u,r,!1))}d.push("...");for(let m=i-mo;m<i;m++){const g=m*h,y=g+h;d.push(...vi(n.slice(g,y),c,e,u,r,m===i-1))}}else for(let m=0;m<i;m++){const g=m*h,y=g+h;d.push(...vi(n.slice(g,y),c,e,u,r,m===i-1))}const p=l===2?",":"";d[0]="["+d[0]+p;for(let m=1;m<d.length-1;m++)d[m]=" "+d[m]+p;let f=`,
`;for(let m=2;m<l;m++)f+=`
`;return d[d.length-1]=" "+d[d.length-1]+"]"+(o?"":f),d}function xo(n){const t=[];for(let e=0;e<n.length;e+=2)t.push([n[e],n[e+1]]);return t}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _e{constructor(t,e,s){if(this.dtype=e,this.shape=t.slice(),this.size=H(t),s!=null){const r=s.length;N(r===this.size,()=>`Length of values '${r}' does not match the size inferred by the shape '${this.size}'.`)}if(e==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=s||Jr(e,this.size),this.strides=ft(t)}set(t,...e){e.length===0&&(e=[0]),N(e.length===this.rank,()=>`The number of provided coordinates (${e.length}) must match the rank (${this.rank})`);const s=this.locToIndex(e);this.values[s]=t}get(...t){t.length===0&&(t=[0]);let e=0;for(const r of t){if(r<0||r>=this.shape[e]){const o=`Requested out of range element at ${t}.   Buffer shape=${this.shape}`;throw new Error(o)}e++}let s=t[t.length-1];for(let r=0;r<t.length-1;++r)s+=this.strides[r]*t[r];return this.values[s]}locToIndex(t){if(this.rank===0)return 0;if(this.rank===1)return t[0];let e=t[t.length-1];for(let s=0;s<t.length-1;++s)e+=this.strides[s]*t[s];return e}indexToLoc(t){if(this.rank===0)return[];if(this.rank===1)return[t];const e=new Array(this.shape.length);for(let s=0;s<e.length-1;++s)e[s]=Math.floor(t/this.strides[s]),t-=e[s]*this.strides[s];return e[e.length-1]=t,e}get rank(){return this.shape.length}toTensor(){return es().makeTensor(this.values,this.shape,this.dtype)}}let es=null,Rr=null;function Jw(n){es=n}function Zw(n){Rr=n}class pe{constructor(t,e,s,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=t.slice(),this.dtype=e||"float32",this.size=H(t),this.strides=ft(t),this.dataId=s,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const t=await this.data();return Rr.buffer(this.shape,this.dtype,t)}bufferSync(){return Rr.buffer(this.shape,this.dtype,this.dataSync())}async array(){const t=await this.data();return Dn(this.shape,t)}arraySync(){return Dn(this.shape,this.dataSync())}async data(){this.throwIfDisposed();const t=es().read(this.dataId);if(this.dtype==="string"){const e=await t;try{return e.map(s=>Vr(s))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return t}dataSync(){this.throwIfDisposed();const t=es().readSync(this.dataId);if(this.dtype==="string")try{return t.map(e=>Vr(e))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return t}async bytes(){this.throwIfDisposed();const t=await es().read(this.dataId);return this.dtype==="string"?t:new Uint8Array(t.buffer)}dispose(){this.isDisposed||(es().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(t=!1){return Rr.print(this,t)}clone(){return this.throwIfDisposed(),Rr.clone(this)}toString(t=!1){const e=this.dataSync();return Xw(e,this.shape,this.dtype,t)}cast(t){return this.throwIfDisposed(),Rr.cast(this,t)}variable(t=!0,e,s){return this.throwIfDisposed(),es().makeVariable(this,t,e,s)}}Object.defineProperty(pe,Symbol.hasInstance,{value:n=>!!n&&n.data!=null&&n.dataSync!=null&&n.throwIfDisposed!=null});function U(){return Th("Tensor",()=>pe)}U();class Ki extends pe{constructor(t,e,s,r){super(t.shape,t.dtype,t.dataId,r),this.trainable=e,this.name=s}assign(t){if(t.dtype!==this.dtype)throw new Error(`dtype of the new value (${t.dtype}) and previous value (${this.dtype}) must match`);if(!Gt(t.shape,this.shape))throw new Error(`shape of the new value (${t.shape}) and previous value (${this.shape}) must match`);es().disposeTensor(this),this.dataId=t.dataId,es().incRef(this,null)}dispose(){es().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(Ki,Symbol.hasInstance,{value:n=>n instanceof pe&&n.assign!=null&&n.assign instanceof Function});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Cf;(function(n){n.R0="R0",n.R1="R1",n.R2="R2",n.R3="R3",n.R4="R4",n.R5="R5",n.R6="R6"})(Cf||(Cf={}));var Bu;(function(n){n.float32="float32",n.int32="int32",n.bool="int32",n.complex64="complex64"})(Bu||(Bu={}));var Mu;(function(n){n.float32="float32",n.int32="int32",n.bool="bool",n.complex64="complex64"})(Mu||(Mu={}));var Vu;(function(n){n.float32="float32",n.int32="float32",n.bool="float32",n.complex64="complex64"})(Vu||(Vu={}));var Wu;(function(n){n.float32="complex64",n.int32="complex64",n.bool="complex64",n.complex64="complex64"})(Wu||(Wu={}));const Qw={float32:Vu,int32:Bu,bool:Mu,complex64:Wu};function yn(n,t){if(n==="string"||t==="string"){if(n==="string"&&t==="string")return"string";throw new Error(`Can not upcast ${n} with ${t}`)}return Qw[n][t]}function bd(n){return yn(n,"int32")}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fe(n,t){if(n.dtype===t.dtype)return[n,t];const e=yn(n.dtype,t.dtype);return[n.cast(e),t.cast(e)]}function Vg(n){const t=[];return Wg(n,t,new Set),t}function Wg(n,t,e){if(n==null)return;if(n instanceof pe){t.push(n);return}if(!tv(n))return;const s=n;for(const r in s){const o=s[r];e.has(o)||(e.add(o),Wg(o,t,e))}}function tv(n){return Array.isArray(n)||typeof n=="object"}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lu(n){return n.kernelName!=null}class Nf{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(t=>t.name)))}}}dispose(){for(const t in this.registeredVariables)this.registeredVariables[t].dispose()}}class Wr{constructor(t){this.ENV=t,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Nf}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const s=t[e];if(await this.initializeBackend(s).success){await this.setBackend(s);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){const{name:t,asyncInit:e}=this.initializeBackendsAndReturnBest();if(e)throw new Error(`The highest priority backend '${t}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(t)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(t){if(!(t in this.registry))if(t in this.registryFactory){const{asyncInit:e}=this.initializeBackend(t);if(e)return null}else return null;return this.registry[t]}findBackendFactory(t){return t in this.registryFactory?this.registryFactory[t].factory:null}registerBackend(t,e,s=1){return t in this.registryFactory?(console.warn(`${t} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[t]={factory:e,priority:s},!0)}async setBackend(t){if(this.registryFactory[t]==null)throw new Error(`Backend name '${t}' not found in registry`);if(this.backendName=t,this.registry[t]==null){this.backendInstance=null;const{success:e,asyncInit:s}=this.initializeBackend(t);if(!(s?await e:e))return!1}return this.backendInstance=this.registry[t],this.setupRegisteredKernels(),this.profiler=new Gw(this.backendInstance),!0}setupRegisteredKernels(){$f(this.backendName).forEach(e=>{e.setupFunc!=null&&e.setupFunc(this.backendInstance)})}disposeRegisteredKernels(t){$f(t).forEach(s=>{s.disposeFunc!=null&&s.disposeFunc(this.registry[t])})}initializeBackend(t){const e=this.registryFactory[t];if(e==null)throw new Error(`Cannot initialize backend ${t}, no registration found.`);try{const s=e.factory();if(s&&!(s instanceof Ih)&&typeof s.then=="function"){const r=++this.pendingBackendInitId,o=s.then(a=>r<this.pendingBackendInitId?!1:(this.registry[t]=a,this.pendingBackendInit=null,!0)).catch(a=>(r<this.pendingBackendInitId||(this.pendingBackendInit=null,console.warn(`Initialization of backend ${t} failed`),console.warn(a.stack||a.message)),!1));return this.pendingBackendInit=o,{success:o,asyncInit:!0}}else return this.registry[t]=s,{success:!0,asyncInit:!1}}catch(s){return console.warn(`Initialization of backend ${t} failed`),console.warn(s.stack||s.message),{success:!1,asyncInit:!1}}}removeBackend(t){if(!(t in this.registryFactory))throw new Error(`${t} backend not found in registry`);this.backendName===t&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,t in this.registry&&(this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t]),delete this.registryFactory[t],this.backendName===t&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((t,e)=>this.registryFactory[e].priority-this.registryFactory[t].priority)}initializeBackendsAndReturnBest(){const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const s=t[e],{success:r,asyncInit:o}=this.initializeBackend(s);if(o||r)return{name:s,asyncInit:o}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(t,e){const s=this.state.tensorInfo.get(e),r=s.backend,o=this.readSync(e),a=r.refCount(e);r.disposeData(e,!0),s.backend=t,t.move(e,o,s.shape,s.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(t,e){let s=null;if(e==null){if(typeof t!="function")throw new Error("Please provide a function to tidy()");e=t}else{if(typeof t!="string"&&!(t instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof e!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");s=t}let r;return this.scopedRun(()=>this.startScope(s),()=>this.endScope(r),()=>(r=e(),r instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),r))}scopedRun(t,e,s){t();try{const r=s();return e(),r}catch(r){throw e(),r}}nextTensorId(){return Wr.nextTensorId++}nextVariableId(){return Wr.nextVariableId++}clone(t){const e=A.runKernel(oa,{x:t}),s={x:t},r=a=>({x:()=>{const i="float32",l={x:a},c={dtype:i};return A.runKernel(jo,l,c)}}),o=[];return this.addTapeNode(this.state.activeScope.name,s,[e],r,o,{}),e}runKernel(t,e,s){if(!(zu(t,this.backendName)!=null))throw new Error(`Kernel '${t}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:t,inputs:e,attrs:s})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(t,e,s){const r=this.backend.numDataIds();let o=0;s.forEach(l=>{o+=l.dtype==="complex64"?3:1});const a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=r-e-o-a;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${t}'`)}runKernelFunc(t){let e,s=[];const r=this.isTapeOn(),o=this.state.numBytes,a=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let i;this.backendName==null&&this.backend;let l;const c=lu(t)?t.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(lu(t)){const{kernelName:f,inputs:m,attrs:g}=t;this.backendName==null&&this.backend;const y=zu(f,this.backendName);N(y!=null,()=>`Cannot find registered kernel '${f}' for backend '${this.backendName}'`),i=()=>{const b=this.backend.numDataIds();l=y.kernelFunc({inputs:m,attrs:g,backend:this.backend});const $=Array.isArray(l)?l:[l];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(f,b,$);const x=$.map(w=>{if(w.rank!=null)return w;const{dataId:C,shape:k,dtype:I}=w;return this.makeTensorFromDataId(C,k,I)});if(r){const w=this.getTensorsForGradient(f,m,x);s=this.saveTensorsForBackwardMode(w)}return x}}else{const{forwardFunc:f}=t,m=g=>{r&&(s=g.map(y=>this.keep(this.clone(y))))};i=()=>{const g=this.backend.numDataIds();l=this.tidy(()=>f(this.backend,m));const y=Array.isArray(l)?l:[l];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(c,g,y),y}}const{inputs:u,attrs:h}=t,d=lu(t)?null:t.backwardsFunc;let p;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?e=i():(p=this.profiler.profileKernel(c,u,()=>i()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(p),e=p.outputs)}),r&&this.addTapeNode(c,u,e,d,s,h),this.state.profiling&&this.state.activeProfile.kernels.push({name:c,bytesAdded:this.state.numBytes-o,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(u).map(f=>u[f]!=null?u[f].shape:null),outputShapes:e.map(f=>f.shape),kernelTimeMs:p.timeMs,extraInfo:p.extraInfo}),Array.isArray(l)?e:e[0]}saveTensorsForBackwardMode(t){return t.map(s=>this.keep(this.clone(s)))}getTensorsForGradient(t,e,s){const r=vf(t);if(r!=null){const o=r.inputsToSave||[],a=r.outputsToSave||[];let i;r.saveAllInputs?(N(Array.isArray(e),()=>"saveAllInputs is true, expected inputs to be an array."),i=Object.keys(e).map(c=>e[c])):i=o.map(c=>e[c]);const l=s.filter((c,u)=>a[u]);return i.concat(l)}return[]}makeTensor(t,e,s,r){if(t==null)throw new Error("Values passed to engine.makeTensor() are null");s=s||"float32",r=r||this.backend;let o=t;s==="string"&&Lo(t[0])&&(o=t.map(l=>Oa(l)));const a=r.write(o,e,s),i=new pe(e,s,a,this.nextTensorId());if(this.trackTensor(i,r),s==="string"){const l=this.state.tensorInfo.get(a),c=Rw(o);this.state.numBytes+=c-l.bytes,l.bytes=c}return i}makeTensorFromDataId(t,e,s,r){s=s||"float32";const o=new pe(e,s,t,this.nextTensorId());return this.trackTensor(o,r),o}makeVariable(t,e=!0,s,r){s=s||this.nextVariableId().toString(),r!=null&&r!==t.dtype&&(t=t.cast(r));const o=new Ki(t,e,s,this.nextTensorId());if(this.state.registeredVariables[o.name]!=null)throw new Error(`Variable with name ${o.name} was already registered`);return this.state.registeredVariables[o.name]=o,this.incRef(o,this.backend),o}trackTensor(t,e){this.state.numTensors++,t.dtype==="string"&&this.state.numStringTensors++;let s=0;t.dtype!=="complex64"&&t.dtype!=="string"&&(s=t.size*Au(t.dtype)),this.state.numBytes+=s,this.state.tensorInfo.has(t.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(t.dataId,{backend:e||this.backend,dtype:t.dtype,shape:t.shape,bytes:s})),t instanceof Ki||this.track(t)}incRef(t,e){this.trackTensor(t,e),this.backend.incRef(t.dataId)}removeDataId(t,e){this.state.tensorInfo.has(t)&&this.state.tensorInfo.get(t).backend===e&&(this.state.tensorInfo.delete(t),this.state.numDataBuffers--)}disposeTensor(t){if(!this.state.tensorInfo.has(t.dataId))return;const e=this.state.tensorInfo.get(t.dataId);if(this.state.numTensors--,t.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=e.bytes),t.dtype!=="complex64"&&t.dtype!=="string"){const s=t.size*Au(t.dtype);this.state.numBytes-=s}e.backend.disposeData(t.dataId)&&this.removeDataId(t.dataId,e.backend)}disposeVariables(){for(const t in this.state.registeredVariables){const e=this.state.registeredVariables[t];this.disposeVariable(e)}}disposeVariable(t){this.disposeTensor(t),this.state.registeredVariables[t.name]!=null&&delete this.state.registeredVariables[t.name]}memory(){const t=this.backend.memory();return t.numTensors=this.state.numTensors,t.numDataBuffers=this.state.numDataBuffers,t.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(t.unreliable=!0,t.reasons==null&&(t.reasons=[]),t.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),t}async profile(t){this.state.profiling=!0;const e=this.state.numBytes,s=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await t(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(r=>r.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-e,this.state.activeProfile.newTensors=this.state.numTensors-s;for(const r of this.state.activeProfile.kernels)r.kernelTimeMs=await r.kernelTimeMs,r.extraInfo=await r.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(t,e,s,r,o,a){const i={id:this.state.nextTapeNodeId++,kernelName:t,inputs:e,outputs:s,saved:o},l=vf(t);l!=null&&(r=l.gradFunc),r!=null&&(i.gradient=c=>(c=c.map((u,h)=>{if(u==null){const d=s[h],p=Ke(d.size,d.dtype);return this.makeTensor(p,d.shape,d.dtype)}return u}),r(c.length>1?c:c[0],o,a))),this.state.activeTape.push(i)}keep(t){return t.kept=!0,t}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(t){const e={track:[],name:"unnamed scope",id:this.state.nextScopeId++};t&&(e.name=t),this.state.scopeStack.push(e),this.state.activeScope=e}endScope(t){const e=Vg(t),s=new Set(e.map(o=>o.id));for(let o=0;o<this.state.activeScope.track.length;o++){const a=this.state.activeScope.track[o];!a.kept&&!s.has(a.id)&&a.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],e.forEach(o=>{!o.kept&&o.scopeId===r.id&&this.track(o)})}gradients(t,e,s,r=!1){if(N(e.length>0,()=>"gradients() received an empty list of xs."),s!=null&&s.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${s.dtype}'`);const o=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",t));N(o instanceof pe,()=>"The result y returned by f() must be a tensor.");const a=qw(this.state.activeTape,e,o);if(!r&&a.length===0&&e.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const i={};i[o.id]=s??ev(o.shape),Kw(i,a,c=>this.tidy(c),nv);const l=e.map(c=>i[c.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(c=>{for(const u of c.saved)u.dispose()}),this.state.activeTape=null),{value:o,grads:l}})}customGrad(t){return N(Ru(t),()=>"The f passed in customGrad(f) must be a function."),(...e)=>{N(e.every(i=>i instanceof pe),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let s;const r={};e.forEach((i,l)=>{r[l]=i});const o=(i,l)=>(s=t(...e,l),N(s.value instanceof pe,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),N(Ru(s.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),s.value),a=(i,l)=>{const c=s.gradFunc(i,l),u=Array.isArray(c)?c:[c];N(u.length===e.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),N(u.every(d=>d instanceof pe),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const h={};return u.forEach((d,p)=>{h[p]=()=>d}),h};return this.runKernelFunc({forwardFunc:o,backwardsFunc:a,inputs:r})}}readSync(t){return this.state.tensorInfo.get(t).backend.readSync(t)}read(t){return this.state.tensorInfo.get(t).backend.read(t)}async time(t){const e=nn(),s=await this.backend.time(t);return s.wallMs=nn()-e,s}track(t){return this.state.activeScope!=null&&(t.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(t)),t}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Nf;for(const t in this.registry)this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}Wr.nextTensorId=0;Wr.nextVariableId=0;function ev(n){const t=Rg(H(n),"float32");return A.makeTensor(t,n,"float32")}function Ug(){const n=Lg();if(n._tfengine==null){const t=new Ow(n);n._tfengine=new Wr(t)}return zw(n._tfengine.ENV),Jw(()=>n._tfengine),n._tfengine}const A=Ug();function nv(n,t){const e={a:n,b:t};return A.runKernel(Zr,e)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sv(){return typeof navigator<"u"&&navigator!=null}function Gg(){if(sv()){const n=navigator.userAgent||navigator.vendor||window.opera;return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(n)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(n.substr(0,4))}return!1}function Hg(){return typeof window<"u"&&window.document!=null||typeof WorkerGlobalScope<"u"}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hn=X();Hn.registerFlag("DEBUG",()=>!1,n=>{n&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});Hn.registerFlag("IS_BROWSER",()=>Hg());Hn.registerFlag("IS_NODE",()=>typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u");Hn.registerFlag("IS_CHROME",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));Hn.registerFlag("PROD",()=>!1);Hn.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>Hn.getBool("DEBUG"));Hn.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);Hn.registerFlag("IS_TEST",()=>!1);Hn.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>!0);Hn.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _a(n,t){let e=n;if(os(n))return t==="string"?[]:[n.length];if(!Array.isArray(n))return[];const s=[];for(;Array.isArray(e)||os(e)&&t!=="string";)s.push(e.length),e=e[0];return Array.isArray(n)&&X().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&jg(n,s,[]),s}function jg(n,t,e){if(e=e||[],!Array.isArray(n)&&!os(n)){N(t.length===0,()=>`Element arr[${e.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`);return}N(t.length>0,()=>`Element arr[${e.join("][")}] should be a primitive, but is an array of ${n.length} elements`),N(n.length===t[0],()=>`Element arr[${e.join("][")}] should have ${t[0]} elements, but has ${n.length} elements`);const s=t.slice(1);for(let r=0;r<n.length;++r)jg(n[r],s,e.concat(r))}function If(n,t,e,s){if(n!=="string_or_numeric"){if(n==null)throw new Error("Expected dtype cannot be null.");if(n!=="numeric"&&n!==t||n==="numeric"&&t==="string")throw new Error(`Argument '${e}' passed to '${s}' must be ${n} tensor, but got ${t} tensor`)}}function T(n,t,e,s="numeric"){if(n instanceof pe)return If(s,n.dtype,t,e),n;let r=Po(n);if(r!=="string"&&["bool","int32","float32"].indexOf(s)>=0&&(r=s),If(s,r,t,e),n==null||!os(n)&&!Array.isArray(n)&&typeof n!="number"&&typeof n!="boolean"&&typeof n!="string"){const l=n==null?"null":n.constructor.name;throw new Error(`Argument '${t}' passed to '${e}' must be a Tensor or TensorLike, but got '${l}'`)}const o=_a(n,r);!os(n)&&!Array.isArray(n)&&(n=[n]);const i=r!=="string"?br(n,r):Mr(n,[],!0);return A.makeTensor(i,o,r)}function qg(n,t,e,s="numeric"){if(!Array.isArray(n))throw new Error(`Argument ${t} passed to ${e} must be a \`Tensor[]\` or \`TensorLike[]\``);return n.map((o,a)=>T(o,`${t}[${a}]`,e,s))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rv="__op";function F(n){const t=Object.keys(n);if(t.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let e=t[0];const s=n[e];e.endsWith("_")&&(e=e.substring(0,e.length-1)),e=e+rv;const r=(...o)=>{A.startScope(e);try{const a=s(...o);return No(a)&&console.error("Cannot return a Promise inside of tidy."),A.endScope(a),a}catch(a){throw A.endScope(null),a}};return Object.defineProperty(r,"name",{value:e,configurable:!0}),r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ov(n,t){const e=T(n,"real","complex"),s=T(t,"imag","complex");bl(e.shape,s.shape,`real and imag shapes, ${e.shape} and ${s.shape}, must match in call to tf.complex().`);const r={real:e,imag:s};return A.runKernel(Oh,r)}const ur=F({complex_:ov});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function La(n,t,e,s){if(s==null&&(s=Po(n)),s==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!os(n)&&!Array.isArray(n)&&typeof n!="number"&&typeof n!="boolean"&&typeof n!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(t!=null){Og(t);const r=H(t),o=H(e);N(r===o,()=>`Based on the provided shape, [${t}], the tensor should have ${r} values but has ${o}`);for(let a=0;a<e.length;++a){const i=e[a],l=a===e.length-1?i!==H(t.slice(a)):!0;N(e[a]===t[a]||!l,()=>`Error creating a new Tensor. Inferred shape (${e}) does not match the provided shape (${t}). `)}}return!os(n)&&!Array.isArray(n)&&(n=[n]),t=t||e,n=s!=="string"?br(n,s):Mr(n,[],!0),A.makeTensor(n,t,s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nr(n,t,e){const s=_a(n,e);return La(n,t,s,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sf={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xi=4;async function Tf(n,t){const e=[],s=[],r=Array.isArray(n)?n.map(a=>a.name):Object.keys(n);for(let a=0;a<r.length;++a){const i=r[a],l=Array.isArray(n)?n[a].tensor:n[i];if(l.dtype!=="float32"&&l.dtype!=="int32"&&l.dtype!=="bool"&&l.dtype!=="string"&&l.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${i}': ${l.dtype}`);const c={name:i,shape:l.shape,dtype:l.dtype};if(l.dtype==="string"){const u=new Promise(async h=>{const d=await l.bytes(),p=d.reduce((g,y)=>g+y.length,0)+Xi*d.length,f=new Uint8Array(p);let m=0;for(let g=0;g<d.length;g++){const y=d[g],b=new Uint8Array(new Uint32Array([y.length]).buffer);f.set(b,m),m+=Xi,f.set(y,m),m+=y.length}h(f)});s.push(u)}else s.push(l.data());t!=null&&(c.group=t),e.push(c)}const o=await Promise.all(s);return{data:iv(o),specs:e}}function av(n,t){const e={};let s,r=0;for(const o of t){const a=o.name,i=o.dtype,l=o.shape,c=H(l);let u;if("quantization"in o){const h=o.quantization;if(h.dtype==="uint8"||h.dtype==="uint16"){if(!("min"in h&&"scale"in h))throw new Error(`Weight ${o.name} with quantization ${h.dtype} doesn't have corresponding metadata min and scale.`)}else if(h.dtype==="float16"){if(i!=="float32")throw new Error(`Weight ${o.name} is quantized with ${h.dtype} which only supports weights of type float32 not ${i}.`)}else throw new Error(`Weight ${o.name} has unknown quantization dtype ${h.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);const d=Sf[h.dtype],p=n.slice(r,r+c*d),f=h.dtype==="uint8"?new Uint8Array(p):new Uint16Array(p);if(i==="float32")if(h.dtype==="uint8"||h.dtype==="uint16"){u=new Float32Array(f.length);for(let m=0;m<f.length;m++){const g=f[m];u[m]=g*h.scale+h.min}}else if(h.dtype==="float16")s===void 0&&(s=pv()),u=s(f);else throw new Error(`Unsupported quantization type ${h.dtype} for weight type float32.`);else if(i==="int32"){if(h.dtype!=="uint8"&&h.dtype!=="uint16")throw new Error(`Unsupported quantization type ${h.dtype} for weight type int32.`);u=new Int32Array(f.length);for(let m=0;m<f.length;m++){const g=f[m];u[m]=Math.round(g*h.scale+h.min)}}else throw new Error(`Unsupported dtype in weight '${a}': ${i}`);r+=c*d}else if(i==="string"){const h=H(o.shape);u=[];for(let d=0;d<h;d++){const p=new Uint32Array(n.slice(r,r+Xi))[0];r+=Xi;const f=new Uint8Array(n.slice(r,r+p));u.push(f),r+=p}}else{const h=Sf[i],d=n.slice(r,r+c*h);if(i==="float32")u=new Float32Array(d);else if(i==="int32")u=new Int32Array(d);else if(i==="bool")u=new Uint8Array(d);else if(i==="complex64"){u=new Float32Array(d);const p=new Float32Array(u.length/2),f=new Float32Array(u.length/2);for(let y=0;y<p.length;y++)p[y]=u[y*2],f[y]=u[y*2+1];const m=nr(p,l,"float32"),g=nr(f,l,"float32");e[a]=ur(m,g),m.dispose(),g.dispose()}else throw new Error(`Unsupported dtype in weight '${a}': ${i}`);r+=c*h}i!=="complex64"&&(e[a]=nr(u,l,i))}return e}function iv(n){if(n===null)throw new Error(`Invalid input value: ${JSON.stringify(n)}`);let t=0;const e=[];n.forEach(o=>{if(t+=o.byteLength,e.push(o.byteLength===o.buffer.byteLength?o:new o.constructor(o)),!(o instanceof Float32Array||o instanceof Int32Array||o instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${o.constructor.name}`)});const s=new Uint8Array(t);let r=0;return e.forEach(o=>{s.set(new Uint8Array(o.buffer),r),r+=o.byteLength}),s.buffer}const xd=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function Ef(n){return xd?Buffer.byteLength(n):new Blob([n]).size}function lv(n){if(xd)return Buffer.from(n).toString("base64");const t=new Uint8Array(n);let e="";for(let s=0,r=t.length;s<r;s++)e+=String.fromCharCode(t[s]);return btoa(e)}function cv(n){if(xd){const s=Buffer.from(n,"base64");return s.buffer.slice(s.byteOffset,s.byteOffset+s.byteLength)}const t=atob(n),e=new Uint8Array(t.length);for(let s=0;s<t.length;++s)e.set([t.charCodeAt(s)],s);return e.buffer}function Kg(n){if(n.length===1)return n[0];let t=0;n.forEach(r=>{t+=r.byteLength});const e=new Uint8Array(t);let s=0;return n.forEach(r=>{e.set(new Uint8Array(r),s),s+=r.byteLength}),e.buffer}function wd(n){if(n.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:n.modelTopology==null?0:Ef(JSON.stringify(n.modelTopology)),weightSpecsBytes:n.weightSpecs==null?0:Ef(JSON.stringify(n.weightSpecs)),weightDataBytes:n.weightData==null?0:n.weightData.byteLength}}function uv(){const n=e=>{let s=e<<13,r=0;for(;(s&8388608)===0;)r-=8388608,s<<=1;return s&=-8388609,r+=947912704,s|r},t=new Uint32Array(2048);t[0]=0;for(let e=1;e<1024;e++)t[e]=n(e);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}function hv(){const n=new Uint32Array(64);n[0]=0,n[31]=1199570944,n[32]=2147483648,n[63]=3347054592;for(let t=1;t<31;t++)n[t]=t<<23;for(let t=33;t<63;t++)n[t]=2147483648+(t-32<<23);return n}function dv(){const n=new Uint32Array(64);for(let t=0;t<64;t++)n[t]=1024;return n[0]=n[32]=0,n}function pv(){const n=uv(),t=hv(),e=dv();return s=>{const r=new ArrayBuffer(4*s.length),o=new Uint32Array(r);for(let a=0;a<s.length;a++){const i=s[a],l=n[e[i>>10]+(i&1023)]+t[i>>10];o[a]=l}return new Float32Array(r)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Fe{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return Fe.instance==null&&(Fe.instance=new Fe),Fe.instance}static registerSaveRouter(t){Fe.getInstance().saveRouters.push(t)}static registerLoadRouter(t){Fe.getInstance().loadRouters.push(t)}static getSaveHandlers(t){return Fe.getHandlers(t,"save")}static getLoadHandlers(t,e){return Fe.getHandlers(t,"load",e)}static getHandlers(t,e,s){const r=[];return(e==="load"?Fe.getInstance().loadRouters:Fe.getInstance().saveRouters).forEach(a=>{const i=a(t,s);i!==null&&r.push(i)}),r}}const Xg=n=>Fe.getSaveHandlers(n),fv=(n,t)=>Fe.getLoadHandlers(n,t);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Uu="tensorflowjs",Gu=1,tr="models_store",Es="model_info_store";function Yg(){if(!X().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const n=typeof window>"u"?self:window,t=n.indexedDB||n.mozIndexedDB||n.webkitIndexedDB||n.msIndexedDB||n.shimIndexedDB;if(t==null)throw new Error("The current browser does not appear to support IndexedDB.");return t}function Hu(n){const t=n.result;t.createObjectStore(tr,{keyPath:"modelPath"}),t.createObjectStore(Es,{keyPath:"modelPath"})}class hr{constructor(t){if(this.indexedDB=Yg(),t==null||!t)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=t}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,t)}async load(){return this.databaseAction(this.modelPath)}databaseAction(t,e){return new Promise((s,r)=>{const o=this.indexedDB.open(Uu,Gu);o.onupgradeneeded=()=>Hu(o),o.onsuccess=()=>{const a=o.result;if(e==null){const i=a.transaction(tr,"readonly"),c=i.objectStore(tr).get(this.modelPath);c.onsuccess=()=>{if(c.result==null)return a.close(),r(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));s(c.result.modelArtifacts)},c.onerror=u=>(a.close(),r(c.error)),i.oncomplete=()=>a.close()}else{const i=wd(e),l=a.transaction(Es,"readwrite");let c=l.objectStore(Es);const u=c.put({modelPath:this.modelPath,modelArtifactsInfo:i});let h;u.onsuccess=()=>{h=a.transaction(tr,"readwrite");const p=h.objectStore(tr).put({modelPath:this.modelPath,modelArtifacts:e,modelArtifactsInfo:i});p.onsuccess=()=>s({modelArtifactsInfo:i}),p.onerror=f=>{c=l.objectStore(Es);const m=c.delete(this.modelPath);m.onsuccess=()=>(a.close(),r(p.error)),m.onerror=g=>(a.close(),r(p.error))}},u.onerror=d=>(a.close(),r(u.error)),l.oncomplete=()=>{h==null?a.close():h.oncomplete=()=>a.close()}}},o.onerror=a=>r(o.error)})}}hr.URL_SCHEME="indexeddb://";const Jg=n=>X().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(hr.URL_SCHEME)?mv(n.slice(hr.URL_SCHEME.length)):null;Fe.registerSaveRouter(Jg);Fe.registerLoadRouter(Jg);function mv(n){return new hr(n)}function gv(n){return n.startsWith(hr.URL_SCHEME)?n.slice(hr.URL_SCHEME.length):n}class yv{constructor(){this.indexedDB=Yg()}async listModels(){return new Promise((t,e)=>{const s=this.indexedDB.open(Uu,Gu);s.onupgradeneeded=()=>Hu(s),s.onsuccess=()=>{const r=s.result,o=r.transaction(Es,"readonly"),i=o.objectStore(Es).getAll();i.onsuccess=()=>{const l={};for(const c of i.result)l[c.modelPath]=c.modelArtifactsInfo;t(l)},i.onerror=l=>(r.close(),e(i.error)),o.oncomplete=()=>r.close()},s.onerror=r=>e(s.error)})}async removeModel(t){return t=gv(t),new Promise((e,s)=>{const r=this.indexedDB.open(Uu,Gu);r.onupgradeneeded=()=>Hu(r),r.onsuccess=()=>{const o=r.result,a=o.transaction(Es,"readwrite"),i=a.objectStore(Es),l=i.get(t);let c;l.onsuccess=()=>{if(l.result==null)return o.close(),s(new Error(`Cannot find model with path '${t}' in IndexedDB.`));{const u=i.delete(t),h=()=>{c=o.transaction(tr,"readwrite");const p=c.objectStore(tr).delete(t);p.onsuccess=()=>e(l.result.modelArtifactsInfo),p.onerror=f=>s(l.error)};u.onsuccess=h,u.onerror=d=>(h(),o.close(),s(l.error))}},l.onerror=u=>(o.close(),s(l.error)),a.oncomplete=()=>{c==null?o.close():c.oncomplete=()=>o.close()}},r.onerror=o=>s(r.error)})}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ms="/",Fr="tensorflowjs_models",Zg="info",bv="model_topology",xv="weight_specs",wv="weight_data",vv="model_metadata";function Qg(n){return{info:[Fr,n,Zg].join(ms),topology:[Fr,n,bv].join(ms),weightSpecs:[Fr,n,xv].join(ms),weightData:[Fr,n,wv].join(ms),modelMetadata:[Fr,n,vv].join(ms)}}function $v(n){const t=n.split(ms);if(t.length<3)throw new Error(`Invalid key format: ${n}`);return t.slice(1,t.length-1).join(ms)}function kv(n){return n.startsWith(dr.URL_SCHEME)?n.slice(dr.URL_SCHEME.length):n}class dr{constructor(t){if(!X().getBool("IS_BROWSER")||typeof window>"u"||typeof window.localStorage>"u")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,t==null||!t)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=t,this.keys=Qg(this.modelPath)}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const e=JSON.stringify(t.modelTopology),s=JSON.stringify(t.weightSpecs),r=wd(t);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,e),this.LS.setItem(this.keys.weightSpecs,s),this.LS.setItem(this.keys.weightData,lv(t.weightData));const o={format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy};return t.signature!=null&&(o.signature=t.signature),t.userDefinedMetadata!=null&&(o.userDefinedMetadata=t.userDefinedMetadata),t.modelInitializer!=null&&(o.modelInitializer=t.modelInitializer),this.LS.setItem(this.keys.modelMetadata,JSON.stringify(o)),{modelArtifactsInfo:r}}catch{throw this.LS.removeItem(this.keys.info),this.LS.removeItem(this.keys.topology),this.LS.removeItem(this.keys.weightSpecs),this.LS.removeItem(this.keys.weightData),this.LS.removeItem(this.keys.modelMetadata),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const t=JSON.parse(this.LS.getItem(this.keys.info));if(t==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(t.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const e={},s=JSON.parse(this.LS.getItem(this.keys.topology));if(s==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);e.modelTopology=s;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(r==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);e.weightSpecs=r;const o=this.LS.getItem(this.keys.modelMetadata);if(o!=null){const i=JSON.parse(o);e.format=i.format,e.generatedBy=i.generatedBy,e.convertedBy=i.convertedBy,i.signature!=null&&(e.signature=i.signature),i.userDefinedMetadata!=null&&(e.userDefinedMetadata=i.userDefinedMetadata),i.modelInitializer!=null&&(e.modelInitializer=i.modelInitializer)}const a=this.LS.getItem(this.keys.weightData);if(a==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return e.weightData=cv(a),e}}dr.URL_SCHEME="localstorage://";const ty=n=>X().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(dr.URL_SCHEME)?Cv(n.slice(dr.URL_SCHEME.length)):null;Fe.registerSaveRouter(ty);Fe.registerLoadRouter(ty);function Cv(n){return new dr(n)}class Nv{constructor(){N(X().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),N(typeof window>"u"||typeof window.localStorage<"u",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const t={},e=Fr+ms,s=ms+Zg;for(let r=0;r<this.LS.length;++r){const o=this.LS.key(r);if(o.startsWith(e)&&o.endsWith(s)){const a=$v(o);t[a]=JSON.parse(this.LS.getItem(o))}}return t}async removeModel(t){t=kv(t);const e=Qg(t);if(this.LS.getItem(e.info)==null)throw new Error(`Cannot find model at path '${t}'`);const s=JSON.parse(this.LS.getItem(e.info));return this.LS.removeItem(e.info),this.LS.removeItem(e.topology),this.LS.removeItem(e.weightSpecs),this.LS.removeItem(e.weightData),s}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Af="://";class Ts{constructor(){this.managers={}}static getInstance(){return Ts.instance==null&&(Ts.instance=new Ts),Ts.instance}static registerManager(t,e){N(t!=null,()=>"scheme must not be undefined or null."),t.endsWith(Af)&&(t=t.slice(0,t.indexOf(Af))),N(t.length>0,()=>"scheme must not be an empty string.");const s=Ts.getInstance();N(s.managers[t]==null,()=>`A model store manager is already registered for scheme '${t}'.`),s.managers[t]=e}static getManager(t){const e=this.getInstance().managers[t];if(e==null)throw new Error(`Cannot find model manager for scheme '${t}'`);return e}static getSchemes(){return Object.keys(this.getInstance().managers)}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Iv{fetch(t,e){return fetch(t,e)}now(){return performance.now()}encode(t,e){if(e!=="utf-8"&&e!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${e}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(t)}decode(t,e){return new TextDecoder(e).decode(t)}}if(X().get("IS_BROWSER")){X().setPlatform("browser",new Iv);try{Ts.registerManager(dr.URL_SCHEME,new Nv)}catch{}try{Ts.registerManager(hr.URL_SCHEME,new yv)}catch{}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sv={importFetch:()=>require("node-fetch")};let cu;class Tv{constructor(){this.util=require("util"),this.textEncoder=new this.util.TextEncoder}fetch(t,e){return X().global.fetch!=null?X().global.fetch(t,e):(cu==null&&(cu=Sv.importFetch()),cu(t,e))}now(){const t=process.hrtime();return t[0]*1e3+t[1]/1e6}encode(t,e){if(e!=="utf-8"&&e!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${e}`);return this.textEncoder.encode(t)}decode(t,e){return t.length===0?"":new this.util.TextDecoder(e).decode(t)}}X().get("IS_NODE")&&X().setPlatform("node",new Tv);/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ft(n,t="float32",e){return t=t||"float32",Og(n),new _e(n,t,e)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ev(n,t){const e=T(n,"x","cast");if(!Dw(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if(t==="string"&&e.dtype!=="string"||t!=="string"&&e.dtype==="string")throw new Error("Only strings can be casted to strings");const s={x:e},r={dtype:t};return A.runKernel(jo,s,r)}const ut=F({cast_:Ev});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Av(n){const e={x:T(n,"x","clone","string_or_numeric")};return A.runKernel(oa,e)}const sr=F({clone_:Av});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dv(n,t=!1){console.log(n.toString(t))}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Ug();const Rv={buffer:Ft,cast:ut,clone:sr,print:Dv};Zw(Rv);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Df(n,t,e,s){a(n),e=e??0,s=s??1,i(e,s);let r=0;const o=l=>(l.then(c=>{const u=e+ ++r/n.length*(s-e);return t(u),c}),l);function a(l){N(l!=null&&Array.isArray(l)&&l.length>0,()=>"promises must be a none empty array")}function i(l,c){N(l>=0&&l<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${l}`),N(c>=0&&c<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${c}`),N(c>=l,()=>`startFraction must be no more than endFraction, but got startFraction ${l} and endFraction ${c}`)}return Promise.all(n.map(o))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function Fv(n,t){t==null&&(t={});const e=t.fetchFunc==null?X().platform.fetch:t.fetchFunc,s=n.map(h=>e(h,t.requestInit,{isBinary:!0})),i=(t.onProgress==null?await Promise.all(s):await Df(s,t.onProgress,0,.5)).map(h=>h.arrayBuffer());return t.onProgress==null?await Promise.all(i):await Df(i,t.onProgress,.5,1)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ov="application/octet-stream",_v="application/json";class vd{constructor(t,e){if(this.DEFAULT_METHOD="POST",e==null&&(e={}),this.weightPathPrefix=e.weightPathPrefix,this.onProgress=e.onProgress,this.weightUrlConverter=e.weightUrlConverter,e.fetchFunc!=null?(N(typeof e.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=e.fetchFunc):this.fetch=X().platform.fetch,N(t!=null&&t.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(t)&&N(t.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${t.length}).`),this.path=t,e.requestInit!=null&&e.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=e.requestInit||{}}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const e=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);e.body=new FormData;const s=[{paths:["./model.weights.bin"],weights:t.weightSpecs}],r={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,weightsManifest:s};t.signature!=null&&(r.signature=t.signature),t.userDefinedMetadata!=null&&(r.userDefinedMetadata=t.userDefinedMetadata),t.modelInitializer!=null&&(r.modelInitializer=t.modelInitializer),e.body.append("model.json",new Blob([JSON.stringify(r)],{type:_v}),"model.json"),t.weightData!=null&&e.body.append("model.weights.bin",new Blob([t.weightData],{type:Ov}),"model.weights.bin");const o=await this.fetch(this.path,e);if(o.ok)return{modelArtifactsInfo:wd(t),responses:[o]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${o.status}.`)}async load(){const t=await this.fetch(this.path,this.requestInit);if(!t.ok)throw new Error(`Request to ${this.path} failed with status code ${t.status}. Please verify this URL points to the model JSON of the model to load.`);let e;try{e=await t.json()}catch{let m=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?m+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":m+=" Please make sure the server is serving valid JSON for this request.",new Error(m)}const s=e.modelTopology,r=e.weightsManifest,o=e.generatedBy,a=e.convertedBy,i=e.format,l=e.signature,c=e.userDefinedMetadata;if(s==null&&r==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);let u,h;r!=null&&([u,h]=await this.loadWeights(r));const d={modelTopology:s,weightSpecs:u,weightData:h,generatedBy:o,convertedBy:a,format:i};l!=null&&(d.signature=l),c!=null&&(d.userDefinedMetadata=c);const p=e.modelInitializer;return p&&(d.modelInitializer=p),d}async loadWeights(t){const e=Array.isArray(this.path)?this.path[1]:this.path,[s,r]=Lv(e),o=this.weightPathPrefix||s,a=[];for(const u of t)a.push(...u.weights);const i=[],l=[];for(const u of t)for(const h of u.paths)this.weightUrlConverter!=null?l.push(this.weightUrlConverter(h)):i.push(o+h+r);this.weightUrlConverter&&i.push(...await Promise.all(l));const c=await Fv(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[a,Kg(c)]}}vd.URL_SCHEME_REGEX=/^https?:\/\//;function Lv(n){const t=n.lastIndexOf("/"),e=n.lastIndexOf("?"),s=n.substring(0,t),r=e>t?n.substring(e):"";return[s+"/",r]}function Rf(n){return n.match(vd.URL_SCHEME_REGEX)!=null}const ey=(n,t)=>{if(typeof fetch>"u"&&(t==null||t.fetchFunc==null))return null;{let e=!0;if(Array.isArray(n)?e=n.every(s=>Rf(s)):e=Rf(n),e)return ny(n,t)}return null};Fe.registerSaveRouter(ey);Fe.registerLoadRouter(ey);function ny(n,t){return new vd(n,t)}function Ff(n,t){return ny(n,t)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pv(n,t,e=!1,s=!1){let r=T(n,"a","matMul"),o=T(t,"b","matMul");[r,o]=fe(r,o);const a={a:r,b:o},i={transposeA:e,transposeB:s};return A.runKernel(Nl,a,i)}const Wt=F({matMul_:Pv});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zv(n,t,e=1,s=0){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const o={indices:T(n,"indices","oneHot","int32")},a={depth:t,onValue:e,offValue:s};return A.runKernel(nc,o,a)}const $d=F({oneHot_:zv});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bv(n,t){const e=T(n,"x","transpose");if(t==null&&(t=e.shape.map((o,a)=>a).reverse()),N(e.rank===t.length,()=>`Error in transpose: rank of input ${e.rank} must match length of perm ${t}.`),t.forEach(o=>{N(o>=0&&o<e.rank,()=>`All entries in 'perm' must be between 0 and ${e.rank-1} but got ${t}`)}),e.rank<=1)return e.clone();const s={x:e},r={perm:t};return A.runKernel(gc,s,r)}const Kt=F({transpose_:Bv});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mv(n,t,e){if(Sh(n),t!=null&&t.length!==3)throw new Error("tensor3d() requires shape to have three numbers");const s=_a(n,e);if(s.length!==3&&s.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return La(n,t,s,e)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Tr;function Vv(n,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(n==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let e=!1,s=!1,r=!1,o=!1,a=!1,i=!1;if(n.data instanceof Uint8Array)e=!0;else if(typeof ImageData<"u"&&n instanceof ImageData)s=!0;else if(typeof HTMLVideoElement<"u"&&n instanceof HTMLVideoElement)r=!0;else if(typeof HTMLImageElement<"u"&&n instanceof HTMLImageElement)o=!0;else if(n.getContext!=null)a=!0;else if(typeof ImageBitmap<"u"&&n instanceof ImageBitmap)i=!0;else throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${n.constructor.name}`);if(r&&r&&n.readyState<2)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.");if(zu(Lu,A.backendName)!=null){const f={pixels:n},m={numChannels:t};return A.runKernel(Lu,f,m)}const[c,u]=r?[n.videoWidth,n.videoHeight]:[n.width,n.height];let h;a?h=n.getContext("2d").getImageData(0,0,c,u).data:s||e?h=n.data:(o||r||i)&&(Tr==null&&(Tr=document.createElement("canvas").getContext("2d")),Tr.canvas.width=c,Tr.canvas.height=u,Tr.drawImage(n,0,0,c,u),h=Tr.getImageData(0,0,c,u).data);let d;if(t===4)d=new Int32Array(h);else{const f=c*u;d=new Int32Array(f*t);for(let m=0;m<f;m++)for(let g=0;g<t;++g)d[m*t+g]=h[m*4+g]}return Mv(d,[u,c,t],"int32")}const Wv=F({fromPixels_:Vv});function kd(n,t){const e=n.shape.length,s=t.shape.length;if(e<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${e}.`);if(s<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${s}.`);if(t.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[s-1]>e)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[s-1]} vs. ${e}`);if(H(n.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${n.shape}.`);const r=t.shape,o=r[r.length-1];let a=1;for(let h=0;h<r.length-1;++h)a*=r[h];const i=n.shape,l=r.slice();l.pop();let c=1;for(let h=o;h<e;++h)c*=i[h],l.push(i[h]);const u=[...ft(n.shape).map(h=>h/c),1].slice(0,o);return[l,a,c,u]}function sy(n,t,e){const s=t.rank>1?t.shape[t.rank-1]:1,r=t.rank>1?t.rank-1:1,o=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${e.shape}, indices.shape: ${t.shape}, shape: ${n}, sliceDim: ${s}, and batchDim: ${r}.`;if(e.rank<r)throw new Error(o+` update.rank < ${r}. `);if(n.length<s+(e.rank-r))throw new Error(o+` Output shape length < ${s+(e.rank-r)}`);if(e.rank!==r+n.length-s)throw new Error(o+` update.rank != ${r+n.length-s}`);for(let a=0;a<r;++a)if(e.shape[a]!==t.shape[a])throw new Error(o+` updates.shape[${a}] (${e.shape[a]}) != indices.shape[${a}] (${t.shape[a]}).`);for(let a=0;a<e.rank-r;++a)if(e.shape[a+r]!==n[a+s])throw new Error(o+` updates.shape[${a+r}] (${e.shape[a+r]}) != shape[${a+r}] (${n[a+r]})`)}function ry(n,t,e){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(n.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${n.rank}.`);if(t.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(e.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${e}`);if(e.length===0){if(t.size===0)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(n.size===0)throw new Error(`Updates specified for empty output. updates shape: ${n.shape}`)}sy(e,t,n)}function Pa(n,t,e){const s=t.shape.length,r=s>1?t.shape[s-1]:1,o=e.length;let a=1;for(let h=r;h<o;++h)a*=e[h];const i=r<1?1:r,l=H(t.shape)/i,c=[...ft(e.slice(0,r)),1],u=H(e);return{sliceRank:r,numUpdates:l,sliceSize:a,strides:c,outputSize:u}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cd(n,t,e){const s=n.shape.length;N(s===t.length,()=>`Error in slice${s}D: Length of begin ${t} must match the rank of the array (${s}).`),N(s===e.length,()=>`Error in slice${s}D: Length of size ${e} must match the rank of the array (${s}).`);for(let r=0;r<s;++r)N(t[r]+e[r]<=n.shape[r],()=>`Error in slice${s}D: begin[${r}] + size[${r}] (${t[r]+e[r]}) would overflow input.shape[${r}] (${n.shape[r]})`)}function $i(n){const t=[];let e=0;for(;n>0;)n&1&&t.push(e),n/=2,e++;return t}function oy(n,t,e){const s=[];for(let r=0;r<n.length;r++)s[r]=Math.ceil((t[r]-n[r])/e[r]);return s}function ay(n,t,e,s){const r=[...n];for(let o=r.length;o<s.length;o++)r.push(1);for(let o=0;o<e;o++)o===0?r[t]=1:(r.splice(t,0,1),r.pop());return r}function iy(n,t,e){return e<=n?e:e-(t-1)}function ly(n,t){const e=[];for(let s=0;s<n;s++)e.push(t+s);return e}function cy(n,t,e,s,r,o,a,i,l){const c=n.length;let u=new Array(c),h=new Array(c),d=new Array(c);if(t.length&&e>0){const p=t[0],f=e+1;u=uy(a,p,f,s,n),h=hy(i,p,f,r,n),d=ay(o,p,f,n)}else for(let p=0;p<c;p++)u[p]=py(a,s,o,n,p,l),h[p]=fy(i,r,o,n,p,l),d[p]=dy(o,p,l);return{begin:u,end:h,strides:d}}function uy(n,t,e,s,r){const o=[...r],a=ly(e,t);for(let i=0;i<o.length;i++)if(a.indexOf(i)>-1)o[i]=0;else{const l=iy(t,e,i);let c=s[l];n&1<<l&&(c=0),o[i]=c}return o}function hy(n,t,e,s,r){const o=[...r],a=ly(e,t);for(let i=0;i<o.length;i++)if(a.indexOf(i)>-1)o[i]=Number.MAX_SAFE_INTEGER;else{const l=iy(t,e,i);let c=s[l];n&1<<l&&(c=Number.MAX_SAFE_INTEGER),o[i]=c}for(let i=0;i<o.length;i++){const l=r[i];o[i]<0&&(o[i]+=l),o[i]=cr(0,o[i],r[i])}return o}function dy(n,t,e){let s=n[t];return(e&1<<t||s==null)&&(s=1),s}function py(n,t,e,s,r,o){let a=t[r];const i=e[r]||1;(n&1<<r||o&1<<r||a==null)&&(i>0?a=Number.MIN_SAFE_INTEGER:a=Number.MAX_SAFE_INTEGER);const l=s[r];return a<0&&(a+=l),a=cr(0,a,l-1),a}function fy(n,t,e,s,r,o){let a=t[r];const i=e[r]||1;(n&1<<r||o&1<<r||a==null)&&(i>0?a=Number.MAX_SAFE_INTEGER:a=Number.MIN_SAFE_INTEGER);const l=s[r];return a<0&&(a+=l),i>0?a=cr(0,a,l):a=cr(-1,a,l-1),a}function Nd(n,t,e){let s=e.length;for(let r=0;r<e.length;r++)if(e[r]>1){s=r;break}for(let r=s+1;r<e.length;r++)if(t[r]>0||e[r]!==n[r])return!1;return!0}function Id(n,t){let e=n.length>0?n[n.length-1]:1;for(let s=0;s<n.length-1;s++)e+=n[s]*t[s];return e}function wc(n,t,e){let s;const r=n.shape.length;typeof t=="number"?s=[t,...new Array(r-1).fill(0)]:t.length<r?s=t.concat(new Array(r-t.length).fill(0)):s=t.slice(),s.forEach(a=>{N(a!==-1,()=>"slice() does not support negative begin indexing.")});let o;return e==null?o=new Array(r).fill(-1):typeof e=="number"?o=[e,...new Array(r-1).fill(-1)]:e.length<r?o=e.concat(new Array(r-e.length).fill(-1)):o=e,o=o.map((a,i)=>a>=0?a:(N(a===-1,()=>`Negative size values should be exactly -1 but got ${a} for the slice() size at index ${i}.`),n.shape[i]-s[i])),[s,o]}function Sd(n,t,e,s,r,o,a,i,l){let c=t.slice(),u=e.slice(),h=s;s==null&&(h=new Array(c.length));const d=$i(a);if(d.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(a!==0&&i!==0)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(a!==0&&l!==0)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");const p=n.length-c.length,f=$i(i),m=n.slice();f.forEach(k=>{c[k]=0,u[k]=1,m.splice(k,0,1)});const{begin:g,end:y,strides:b}=cy(m,d,p,c,u,h,r,o,a);c=g,u=y,h=b;const $=$i(l);$.forEach(k=>{u[k]=c[k]+1,h[k]=1});const x=oy(c,u,h),w=x.filter((k,I)=>$.indexOf(I)===-1);return{nonStrided:h.every(k=>k===1),$begin:c,$end:u,$strides:h,size:x,newShape:m,outShape:w}}const Uv=Object.freeze(Object.defineProperty({__proto__:null,assertParamsValid:Cd,computeFlatOffset:Id,computeOutShape:oy,getNormalizedAxes:cy,isSliceContinous:Nd,maskToAxes:$i,parseSliceParams:wc,sliceInfo:Sd,startForAxis:py,startIndicesWithElidedDims:uy,stopForAxis:fy,stopIndicesWithElidedDims:hy,stridesForAxis:dy,stridesWithElidedDims:ay},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Qr{getClassName(){return this.constructor.className}static fromConfig(t,e){return new t(e)}}class Tn{constructor(){this.classNameMap={}}static getMap(){return Tn.instance==null&&(Tn.instance=new Tn),Tn.instance}static register(t){Tn.getMap().classNameMap[t.className]=[t,t.fromConfig]}}function Y(n){N(n.className!=null,()=>"Class being registered does not have the static className property defined."),N(typeof n.className=="string",()=>"className is required to be a string, but got type "+typeof n.className),N(n.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),Tn.register(n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ss(){return A}function Of(){return A.memory()}function _(n,t){return A.tidy(n,t)}function $t(n){Vg(n).forEach(e=>e.dispose())}function Ve(n){return A.keep(n)}function _f(n){return A.setBackend(n)}function Gv(){return A.backendName}function my(n,t,e=1){return A.registerBackend(n,t,e)}function Hv(){return A.backend}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jv(n,t){let e=T(n,"a","add"),s=T(t,"b","add");[e,s]=fe(e,s);const r={a:e,b:s};return A.runKernel(Zr,r)}const nt=F({add_:jv});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qv(n,t){let e=T(n,"a","floorDiv"),s=T(t,"b","floorDiv");[e,s]=fe(e,s);const r={a:e,b:s};return A.runKernel(sa,r)}const Td=F({floorDiv_:qv});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kv(n,t){let e=T(n,"a","div"),s=T(t,"b","div");if([e,s]=fe(e,s),e.dtype==="int32"&&s.dtype==="int32")return Td(e,s);const r={a:e,b:s},o={};return A.runKernel(Jo,r,o)}const gt=F({div_:Kv});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xv(n,t){let e=T(n,"a","mul"),s=T(t,"b","mul");[e,s]=fe(e,s);const r={a:e,b:s};return A.runKernel(fa,r)}const P=F({mul_:Xv});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yv(n){const t=T(n,"x","abs");if(t.dtype==="complex64"){const e={x:t};return A.runKernel(Sl,e)}else{const e={x:t};return A.runKernel(xl,e)}}const Ze=F({abs_:Yv});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jv(n){const e={x:T(n,"x","acos")};return A.runKernel(Bo,e)}const gy=F({acos_:Jv});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zv(n){const e={x:T(n,"x","acosh")};return A.runKernel(Mo,e)}const yy=F({acosh_:Zv});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qv(n){N(Array.isArray(n),()=>"The argument passed to tf.addN() must be a list of tensors"),N(n.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${n.length}`);const t=n.map((r,o)=>T(r,`tensors${o}`,"addN")),e=t[0];t.forEach(r=>{if(r.dtype!==e.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),t.forEach(r=>{if(!Gt(r.shape,e.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});const s=t;return A.runKernel(wl,s)}const t$=F({addN_:Qv});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e$(n,t=null,e=!1){const r={x:T(n,"x","all","bool")},o={axis:t,keepDims:e};return A.runKernel(Eh,r,o)}const Ed=F({all_:e$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n$(n,t=null,e=!1){const r={x:T(n,"x","any","bool")},o={axis:t,keepDims:e};return A.runKernel(Ah,r,o)}const Yi=F({any_:n$});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s$(n,t=0){const s={x:T(n,"x","argMax")},r={axis:t};return A.runKernel(vl,s,r)}const Ji=F({argMax_:s$});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r$(n,t=0){const s={x:T(n,"x","argMin")},r={axis:t};return A.runKernel($l,s,r)}const by=F({argMin_:r$});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o$(n){const e={x:T(n,"x","asin")};return A.runKernel(Vo,e)}const xy=F({asin_:o$});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a$(n){const e={x:T(n,"x","asinh")};return A.runKernel(Wo,e)}const wy=F({asinh_:a$});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i$(n){const e={x:T(n,"x","atan")};return A.runKernel(Uo,e)}const vy=F({atan_:i$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l$(n,t){let e=T(n,"a","atan2"),s=T(t,"b","atan2");[e,s]=fe(e,s);const r={a:e,b:s};return A.runKernel(Ho,r)}const $y=F({atan2_:l$});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c$(n){const e={x:T(n,"x","atanh")};return A.runKernel(Go,e)}const ky=F({atanh_:c$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function za(n,t,e,s,r="NHWC",o){const a=n[3],i=[...t,a],l=$s(r);return Pe(n,i,e,o,s,null,null,l)}function _n(n,t,e,s,r,o,a="channelsLast"){const[i,l]=Zi(t);let c;if(a==="channelsLast")c=[i,l,n[3],n[3]];else if(a==="channelsFirst")c=[i,l,n[1],n[1]];else throw new Error(`Unknown dataFormat ${a}`);return Pe(n,c,e,s,r,o,!1,a)}function vs(n,t,e,s,r,o,a="NDHWC"){const[i,l,c]=ju(t);let u,h;if(a==="NDHWC")h="channelsLast",u=[i,l,c,n[4],n[4]];else if(a==="NCDHW")h="channelsFirst",u=[i,l,c,n[1],n[1]];else throw new Error(`Unknown dataFormat ${a}`);return Us(n,u,e,s,r,!1,h,o)}function Pe(n,t,e,s,r,o,a=!1,i="channelsLast"){let[l,c,u,h]=[-1,-1,-1,-1];if(i==="channelsLast")[l,c,u,h]=n;else if(i==="channelsFirst")[l,h,c,u]=n;else throw new Error(`Unknown dataFormat ${i}`);const[d,p,,f]=t,[m,g]=Zi(e),[y,b]=Zi(s),$=Lr(d,y),x=Lr(p,b),{padInfo:w,outHeight:C,outWidth:k}=d$(r,c,u,m,g,$,x,o,i),I=a?f*h:f;let S;return i==="channelsFirst"?S=[l,I,C,k]:i==="channelsLast"&&(S=[l,C,k,I]),{batchSize:l,dataFormat:i,inHeight:c,inWidth:u,inChannels:h,outHeight:C,outWidth:k,outChannels:I,padInfo:w,strideHeight:m,strideWidth:g,filterHeight:d,filterWidth:p,effectiveFilterHeight:$,effectiveFilterWidth:x,dilationHeight:y,dilationWidth:b,inShape:n,outShape:S,filterShape:t}}function Us(n,t,e,s,r,o=!1,a="channelsLast",i){let[l,c,u,h,d]=[-1,-1,-1,-1,-1];if(a==="channelsLast")[l,c,u,h,d]=n;else if(a==="channelsFirst")[l,d,c,u,h]=n;else throw new Error(`Unknown dataFormat ${a}`);const[p,f,m,,g]=t,[y,b,$]=ju(e),[x,w,C]=ju(s),k=Lr(p,x),I=Lr(f,w),S=Lr(m,C),{padInfo:E,outDepth:R,outHeight:L,outWidth:O}=p$(r,c,u,h,y,b,$,k,I,S,i),z=o?g*d:g;let M;return a==="channelsFirst"?M=[l,z,R,L,O]:a==="channelsLast"&&(M=[l,R,L,O,z]),{batchSize:l,dataFormat:a,inDepth:c,inHeight:u,inWidth:h,inChannels:d,outDepth:R,outHeight:L,outWidth:O,outChannels:z,padInfo:E,strideDepth:y,strideHeight:b,strideWidth:$,filterDepth:p,filterHeight:f,filterWidth:m,effectiveFilterDepth:k,effectiveFilterHeight:I,effectiveFilterWidth:S,dilationDepth:x,dilationHeight:w,dilationWidth:C,inShape:n,outShape:M,filterShape:t}}function u$(n,t,e,s,r){s==null&&(s=Ad(n,t,e));const o=n[0],a=n[1],i=rr((o-t+2*s)/e+1,r),l=rr((a-t+2*s)/e+1,r);return[i,l]}function h$(n,t,e,s,r,o){r==null&&(r=Ad(n,t,s));const a=n[0],i=n[1],l=n[2],c=rr((a-t+2*r)/s+1,o),u=rr((i-t+2*r)/s+1,o),h=rr((l-t+2*r)/s+1,o);return[c,u,h,e]}function Ad(n,t,e,s=1){const r=Lr(t,s);return Math.floor((n[0]*(e-1)-e+r)/2)}function Zi(n){return typeof n=="number"?[n,n,n]:n.length===2?[n[0],n[1],1]:n}function ju(n){return typeof n=="number"?[n,n,n]:n}function Lr(n,t){return t<=1?n:n+(n-1)*(t-1)}function d$(n,t,e,s,r,o,a,i,l){let c,u,h;if(typeof n=="number"){c={top:n,bottom:n,left:n,right:n,type:n===0?"VALID":"NUMBER"};const p=u$([t,e],o,s,n,i);u=p[0],h=p[1]}else if(n==="same"){u=Math.ceil(t/s),h=Math.ceil(e/r);const d=Math.max(0,(u-1)*s+o-t),p=Math.max(0,(h-1)*r+a-e),f=Math.floor(d/2),m=d-f,g=Math.floor(p/2),y=p-g;c={top:f,bottom:m,left:g,right:y,type:"SAME"}}else if(n==="valid")c={top:0,bottom:0,left:0,right:0,type:"VALID"},u=Math.ceil((t-o+1)/s),h=Math.ceil((e-a+1)/r);else if(typeof n=="object"){const d=l==="channelsLast"?n[1][0]:n[2][0],p=l==="channelsLast"?n[1][1]:n[2][1],f=l==="channelsLast"?n[2][0]:n[3][0],m=l==="channelsLast"?n[2][1]:n[3][1];c={top:d,bottom:p,left:f,right:m,type:d===0&&p===0&&f===0&&m===0?"VALID":"EXPLICIT"},u=rr((t-o+d+p)/s+1,i),h=rr((e-a+f+m)/r+1,i)}else throw Error(`Unknown padding parameter: ${n}`);return{padInfo:c,outHeight:u,outWidth:h}}function p$(n,t,e,s,r,o,a,i,l,c,u){let h,d,p,f;if(typeof n=="number"){h={top:n,bottom:n,left:n,right:n,front:n,back:n,type:n===0?"VALID":"NUMBER"};const g=h$([t,e,s,1],i,1,r,n,u);d=g[0],p=g[1],f=g[2]}else if(n==="same"){d=Math.ceil(t/r),p=Math.ceil(e/o),f=Math.ceil(s/a);const m=(d-1)*r+i-t,g=(p-1)*o+l-e,y=(f-1)*a+c-s,b=Math.floor(m/2),$=m-b,x=Math.floor(g/2),w=g-x,C=Math.floor(y/2),k=y-C;h={top:x,bottom:w,left:C,right:k,front:b,back:$,type:"SAME"}}else if(n==="valid")h={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},d=Math.ceil((t-i+1)/r),p=Math.ceil((e-l+1)/o),f=Math.ceil((s-c+1)/a);else throw Error(`Unknown padding parameter: ${n}`);return{padInfo:h,outDepth:d,outHeight:p,outWidth:f}}function rr(n,t){if(!t)return Math.trunc(n);switch(t){case"round":return Math.round(n);case"ceil":return Math.ceil(n);case"floor":return Math.floor(n);default:throw new Error(`Unknown roundingMode ${t}`)}}function Os(n){const[t,e,s]=Zi(n);return t===1&&e===1&&s===1}function He(n,t){return Os(n)||Os(t)}function $s(n){if(n==="NHWC")return"channelsLast";if(n==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${n}`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f$(n,t){const s={x:T(n,"x","reshape","string_or_numeric")},r={shape:t};return A.runKernel(ac,s,r)}const B=F({reshape_:f$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m$(n,t,e,s,r){const o=T(n,"x","avgPool","float32"),a=1;N(He(e,a),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${e} and dilations '${a}'`);let i=o,l=!1;o.rank===3&&(l=!0,i=B(o,[1,o.shape[0],o.shape[1],o.shape[2]])),N(i.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`),r!=null&&N(Le(s),()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${r} but got pad ${s}.`);const c={x:i},u={filterSize:t,strides:e,pad:s,dimRoundingMode:r};let h=A.runKernel(kl,c,u);return h=ut(h,o.dtype),l?B(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const vc=F({avgPool_:m$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g$(n,t,e,s,r,o="NDHWC"){const a=T(n,"x","avgPool3d","float32");let i=a,l=!1;a.rank===4&&(l=!0,i=B(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),N(i.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${i.rank}.`),N(o==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${o}`),r!=null&&N(Le(s),()=>`Error in avgPool3d: pad must be an integer when using, dimRoundingMode ${r} but got pad ${s}.`);const c={x:i},u={filterSize:t,strides:e,pad:s,dimRoundingMode:r,dataFormat:o};let h=A.runKernel(Cl,c,u);return h=ut(h,i.dtype),l?B(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const Cy=F({avgPool3d_:g$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y$(n,t=0){N(n.length>=1,()=>"Pass at least one tensor to concat");const e=qg(n,"tensors","concat","string_or_numeric");if(e[0].dtype==="complex64"&&e.forEach(o=>{if(o.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${o.dtype}. `)}),e.length===1)return sr(e[0]);const s=e,r={axis:t};return A.runKernel(Tl,s,r)}const Ue=F({concat_:y$});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b$(n){const e={x:T(n,"x","sigmoid")};return A.runKernel(Na,e)}const to=F({sigmoid_:b$});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x$(n,t,e){const s=T(n,"x","slice","string_or_numeric");if(s.rank===0)throw new Error("Slicing scalar is not possible");const r={x:s},o={begin:t,size:e};return A.runKernel(hc,r,o)}const Qt=F({slice_:x$});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w$(n){const e={x:T(n,"x","tanh")};return A.runKernel(Da,e)}const Dd=F({tanh_:w$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v$(n,t,e){const s=T(n,"x","batchToSpaceND"),r=t.reduce((i,l)=>i*l);N(s.rank>=1+t.length,()=>`input rank is ${s.rank} but should be > than blockShape.length ${t.length}`),N(e.length===t.length,()=>`crops.length is ${e.length} but should be equal to blockShape.length  ${t.length}`),N(s.shape[0]%r===0,()=>`input tensor batch is ${s.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${r}`);const o={x:s},a={blockShape:t,crops:e};return A.runKernel(Il,o,a)}const $c=F({batchToSpaceND_:v$});function $$(n){let t;return n.rank===0||n.rank===1?t=B(n,[1,1,1,n.size]):n.rank===2?t=B(n,[1,1,n.shape[0],n.shape[1]]):n.rank===3?t=B(n,[1,n.shape[0],n.shape[1],n.shape[2]]):t=n,t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k$(n,t,e,s,r,o){o==null&&(o=.001);const a=T(n,"x","batchNorm"),i=T(t,"mean","batchNorm"),l=T(e,"variance","batchNorm");let c;r!=null&&(c=T(r,"scale","batchNorm"));let u;s!=null&&(u=T(s,"offset","batchNorm")),N(i.rank===l.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),N(u==null||i.rank===u.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),N(c==null||i.rank===c.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const d={x:$$(a),scale:c,offset:u,mean:i,variance:l},p={varianceEpsilon:o},f=A.runKernel(Pl,d,p);return B(f,a.shape)}const Ur=F({batchNorm_:k$});function C$(n,t,e,s,r,o){const a=T(n,"x","batchNorm"),i=T(t,"mean","batchNorm"),l=T(e,"variance","batchNorm");let c;r!=null&&(c=T(r,"scale","batchNorm"));let u;return s!=null&&(u=T(s,"offset","batchNorm")),N(a.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${a.rank}.`),N(i.rank===2||i.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${i.rank}.`),N(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`),c!=null&&N(c.rank===2||c.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${c.rank}.`),u!=null&&N(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${u.rank}.`),Ur(a,i,l,u,c,o)}const N$=F({batchNorm2d_:C$});function I$(n,t,e,s,r,o){const a=T(n,"x","batchNorm"),i=T(t,"mean","batchNorm"),l=T(e,"variance","batchNorm");let c;r!=null&&(c=T(r,"scale","batchNorm"));let u;return s!=null&&(u=T(s,"offset","batchNorm")),N(a.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${a.rank}.`),N(i.rank===3||i.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${i.rank}.`),N(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`),c!=null&&N(c.rank===3||c.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${c.rank}.`),u!=null&&N(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${u.rank}.`),Ur(a,i,l,u,c,o)}const S$=F({batchNorm3d_:I$});function T$(n,t,e,s,r,o){const a=T(n,"x","batchNorm"),i=T(t,"mean","batchNorm"),l=T(e,"variance","batchNorm");let c;r!=null&&(c=T(r,"scale","batchNorm"));let u;return s!=null&&(u=T(s,"offset","batchNorm")),N(a.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${a.rank}.`),N(i.rank===4||i.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${i.rank}.`),N(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`),c!=null&&N(c.rank===4||c.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${c.rank}.`),u!=null&&N(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${u.rank}.`),Ur(a,i,l,u,c,o)}const E$=F({batchNorm4d_:T$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A$(n,t,e){const s=T(n,"x","bincount"),r=T(t,"weights","bincount");N(s.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${s.dtype}`),N(e>=0,()=>`size must be non-negative, but got ${e}.`),N(r.size===s.size||r.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${s.shape}, weights shape: ${r.shape}.`);const o={x:s,weights:r},a={size:e};return A.runKernel(Fh,o,a)}const D$=F({bincount_:A$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R$(n,t){let e=T(n,"broadcastTo","x");const s=e.shape;if(t.some(c=>!(c>0)||c%1!==0))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<e.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${e.rank}.`);if(t.length>e.rank){const c=e.shape.slice();for(;c.length<t.length;)c.unshift(1);e=B(e,c)}const r=e.shape,o=Array.from(t);for(let c=t.length-1;c>=0;c--)if(r[c]===t[c])o[c]=1;else if(e.shape[c]!==1)throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${t}].`);if(o.map((c,u)=>c>1?u:-1).filter(c=>c>=0).length===0)return sr(e);const i={x:e},l={reps:o};return A.runKernel(Ra,i,l)}const Qi=F({broadcastTo_:R$});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F$(n){const e={x:T(n,"x","ceil")};return A.runKernel(qo,e)}const Ny=F({ceil_:F$});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O$(n,t,e){const s=T(n,"x","clipByValue");N(t<=e,()=>`Error in clip: min (${t}) must be less than or equal to max (${e}).`);const r={x:s},o={clipValueMin:t,clipValueMax:e};return A.runKernel(Ko,r,o)}const un=F({clipByValue_:O$});function _$(n){return Ue(n,0)}const L$=F({concat1d_:_$});function P$(n,t){return Ue(n,t)}const z$=F({concat2d_:P$});function B$(n,t){return Ue(n,t)}const M$=F({concat3d_:B$});function V$(n,t){return Ue(n,t)}const W$=F({concat4d_:V$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U$(n,t,e,s,r="NHWC",o=[1,1],a){const i=T(n,"x","conv2d"),l=T(t,"filter","conv2d");let c=i,u=!1;i.rank===3&&(u=!0,c=B(i,[1,i.shape[0],i.shape[1],i.shape[2]])),N(c.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${c.rank}.`),N(l.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`),a!=null&&N(Le(s),()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${s}.`);const h=r==="NHWC"?c.shape[3]:c.shape[1];N(h===l.shape[2],()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${l.shape[2]}.`),N(He(e,o),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${e} and dilations '${o}'`);const d={x:c,filter:l},p={strides:e,pad:s,dataFormat:r,dilations:o,dimRoundingMode:a},f=A.runKernel(El,d,p);return u?B(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const _s=F({conv2d_:U$});function G$(n,t,e,s,r="NWC",o=1,a){const i=T(n,"x","conv1d"),l=T(t,"filter","conv1d");let c=i,u=!1;i.rank===2&&(u=!0,c=B(i,[1,i.shape[0],i.shape[1]])),N(c.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${c.rank}.`),N(l.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`),a!=null&&N(Le(s),()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${s}.`),N(c.shape[2]===l.shape[1],()=>`Error in conv1d: depth of input (${c.shape[2]}) must match input depth for filter ${l.shape[1]}.`),N(He(e,o),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${e} and dilation '${o}'`),N(r==="NWC",()=>`Error in conv1d: got dataFormat of ${r} but only NWC is currently supported.`);const h=B(l,[1,l.shape[0],l.shape[1],l.shape[2]]),d=B(c,[c.shape[0],1,c.shape[1],c.shape[2]]),g=_s(d,h,[1,e],s,"NHWC",[1,o],a);return u?B(g,[g.shape[2],g.shape[3]]):B(g,[g.shape[0],g.shape[2],g.shape[3]])}const Rd=F({conv1d_:G$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H$(n,t,e,s,r,o="NHWC",a){N(n.length===t.rank,()=>`Length of inShape (${n.length}) and rank of dy (${t.rank}) must match`);let i=n,l=t,c=!1;t.rank===3&&(c=!0,l=B(t,[1,t.shape[0],t.shape[1],t.shape[2]]),i=[1,n[0],n[1],n[2]]),N(i.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${i.length}.`),N(l.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`),N(e.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${e.rank}`);const u=o==="NHWC"?i[3]:i[1],h=o==="NHWC"?l.shape[3]:l.shape[1];N(u===e.shape[2],()=>`Error in conv2dDerInput: depth of input (${u}) must match input depth for filter ${e.shape[2]}.`),N(h===e.shape[3],()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${e.shape[3]}.`),a!=null&&N(Le(r),()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`);const d={dy:l,filter:e},p={strides:s,pad:r,dataFormat:o,dimRoundingMode:a,inputShape:i},f=A.runKernel(Al,d,p);return c?B(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const Fd=F({conv2DBackpropInput_:H$});function j$(n,t,e,s,r,o){const a=T(n,"x","conv2dTranspose"),i=T(t,"filter","conv2dTranspose");return Fd(e,a,i,s,r,"NHWC",o)}const Od=F({conv2dTranspose_:j$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q$(n,t,e,s,r="NDHWC",o=[1,1,1]){const a=T(n,"x","conv3d"),i=T(t,"filter","conv3d");let l=a,c=!1;a.rank===4&&(c=!0,l=B(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),N(l.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`),N(i.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${i.rank}.`),N(l.shape[4]===i.shape[3],()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${i.shape[3]}.`),N(He(e,o),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${e} and dilations '${o}'`),N(r==="NDHWC",()=>`Error in conv3d: got dataFormat of ${r} but only NDHWC is currently supported.`);const u={x:l,filter:i},h={strides:e,pad:s,dataFormat:r,dilations:o},d=A.runKernel(Dl,u,h);return c?B(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const Iy=F({conv3d_:q$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K$(n,t,e,s,r){N(n.length===t.rank,()=>`Length of inShape (${n.length}) and rank of dy (${t.rank}) must match`);let o=n,a=t,i=!1;t.rank===4&&(i=!0,a=B(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),o=[1,n[0],n[1],n[2],n[3]]);const l=o[4],c=a.shape[4];N(o.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${o.length}.`),N(a.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${a.rank}`),N(e.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${e.rank}`),N(l===e.shape[3],()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${e.shape[3]}.`),N(c===e.shape[4],()=>`Error in conv3dDerInput: depth of output (${c}) must match output depth for filter ${e.shape[4]}.`);const u={dy:a,filter:e},h={pad:r,strides:s,inputShape:o},d=A.runKernel(Ph,u,h);return i?B(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const X$=F({conv3DBackpropInput_:K$});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y$(n){const e={x:T(n,"x","cos")};return A.runKernel(Xo,e)}const kc=F({cos_:Y$});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J$(n){const e={x:T(n,"x","cosh")};return A.runKernel(Yo,e)}const _d=F({cosh_:J$});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z$(n,t=0,e=!1,s=!1){const o={x:T(n,"x","cumsum")},a={axis:t,exclusive:e,reverse:s};return A.runKernel(Rl,o,a)}const Ld=F({cumsum_:Z$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q$(n,t,e,s=!1){const r=T(n,"x","denseBincount"),o=T(t,"weights","denseBincount");N(r.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${r.dtype}`),N(r.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${r.rank}.`),N(e>=0,()=>`size must be non-negative, but got ${e}.`),N(o.size===r.size||o.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${r.shape}, weights shape: ${o.shape}.`);const a={x:r,weights:o},i={size:e,binaryOutput:s};return A.runKernel(Bh,a,i)}const tk=F({denseBincount_:Q$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ek(n,t,e="NHWC"){const s=T(n,"x","depthToSpace"),r=e==="NHWC"?s.shape[1]:s.shape[2],o=e==="NHWC"?s.shape[2]:s.shape[3],a=e==="NHWC"?s.shape[3]:s.shape[1];N(r*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${r} and ${t}  for depthToSpace with input shape
    ${s.shape}`),N(o*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${o} and ${t} for depthToSpace with input shape
        ${s.shape}`),N(a%(t*t)===0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${a} for depthToSpace with input shape ${s.shape}`);const i={x:s},l={blockSize:t,dataFormat:e};return A.runKernel(Mh,i,l)}const Sy=F({depthToSpace_:ek});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nk(n,t,e,s,r="NHWC",o=[1,1],a){const i=T(n,"x","depthwiseConv2d"),l=T(t,"filter","depthwiseConv2d");let c=i,u=!1;i.rank===3&&(u=!0,c=B(i,[1,i.shape[0],i.shape[1],i.shape[2]])),N(c.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${c.rank}.`),N(l.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`),N(c.shape[3]===l.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${c.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`),a!=null&&N(Le(s),()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${s}.`);const h={x:c,filter:l},d={strides:e,pad:s,dataFormat:r,dilations:o,dimRoundingMode:a},p=A.runKernel(Fl,h,d);return u?B(p,[p.shape[1],p.shape[2],p.shape[3]]):p}const Ba=F({depthwiseConv2d_:nk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sk(n,t,e,s,r=[1,1],o="NHWC"){const a=T(n,"x","dilation2d"),i=T(t,"filter","dilation2d");N(a.rank===3||a.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${a.rank}.`),N(i.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${i.rank}.`),N(o==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${o}`);let l=a,c=!1;a.rank===3&&(l=B(a,[1,a.shape[0],a.shape[1],a.shape[2]]),c=!0);const u={x:l,filter:i},h={strides:e,pad:s,dilations:r},d=A.runKernel(Ol,u,h);return c?B(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const Ty=F({dilation2d_:sk});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Io(n,t){const e=n.length,s=[];for(let r=0;r<e;r++){const o=e-1-r,a=n[o]||1;(t[t.length-1-r]||1)>1&&a===1&&s.unshift(o)}return s}function Ee(n,t){const e=[];for(let s=0;s<t.length;s++){const r=n[n.length-s-1],o=t.length-s-1,a=t[o];(r==null||r===1&&a>1)&&e.unshift(o)}return e}function Rt(n,t){const e=[],s=Math.max(n.length,t.length);for(let r=0;r<s;r++){let o=n[n.length-r-1];o==null&&(o=1);let a=t[t.length-r-1];if(a==null&&(a=1),o===1)e.unshift(a);else if(a===1)e.unshift(o);else if(o!==a){const i=`Operands could not be broadcast together with shapes ${n} and ${t}.`;throw Error(i)}else e.unshift(o)}return e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rk(n,t){let e=T(n,"a","equal"),s=T(t,"b","equal");[e,s]=fe(e,s),Rt(e.shape,s.shape);const r={a:e,b:s};return A.runKernel(_l,r)}const xr=F({equal_:rk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ok(n,t,e){const s=T(t,"a","where"),r=T(e,"b","where"),o=T(n,"condition","where","bool"),a=Rt(s.shape,r.shape),i=Qi(s,a),l=Qi(r,a);o.rank===1&&N(o.shape[0]===s.shape[0],()=>"The first dimension of `a` must match the size of `condition`."),o.rank!==1&&bl(o.shape,l.shape,"Error in where: ");const c={condition:o,t:i,e:l};return A.runKernel(uc,c)}const bn=F({where_:ok});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ak(n){const e={x:T(n,"x","zerosLike")};return A.runKernel(xc,e)}const Ot=F({zerosLike_:ak});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ik(n,t){let e=T(n,"a","div"),s=T(t,"b","div");[e,s]=fe(e,s);const r=gt(e,s),o=Ot(r),a=xr(s,o);return bn(a,o,r)}const Ey=F({divNoNan_:ik});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lk(n,t){const e=T(n,"t1","dot"),s=T(t,"t2","dot");N((e.rank===1||e.rank===2)&&(s.rank===1||s.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${e.rank} and ${s.rank}.`);const r=e.rank===1?e.size:e.shape[1],o=s.rank===1?s.size:s.shape[0];if(N(r===o,()=>`Error in dot: inner dimensions of inputs must match, but got ${r} and ${o}.`),e.rank===1&&s.rank===1){const a=B(e,[1,-1]),i=B(s,[-1,1]),l=Wt(a,i);return B(l,[])}else if(e.rank===1&&s.rank===2){const a=B(e,[1,-1]),i=B(s,[s.shape[0],s.shape[1]]),l=Wt(a,i);return B(l,[l.size])}else if(e.rank===2&&s.rank===1){const a=B(s,[-1,1]),i=Wt(e,a);return B(i,[i.size])}else{const a=B(s,[s.shape[0],s.shape[1]]);return Wt(e,a)}}const ck=F({dot_:lk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uk(n){const e={x:T(n,"x","elu")};return A.runKernel(Zo,e)}const Ma=F({elu_:uk});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hk(n){let t=T(n,"x","erf");N(t.dtype==="int32"||t.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),t.dtype==="int32"&&(t=ut(t,"float32"));const e={x:t};return A.runKernel(Qo,e)}const Ay=F({erf_:hk});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dk(n){const e={x:T(n,"x","exp")};return A.runKernel(ta,e)}const bs=F({exp_:dk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pk(n,t=0){const e=T(n,"x","expandDims","string_or_numeric");N(t<=e.rank,()=>"Axis must be <= rank of the tensor");const s={input:e},r={dim:t};return A.runKernel(Ll,s,r)}const Sn=F({expandDims_:pk});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fk(n){const e={x:T(n,"x","expm1")};return A.runKernel(ea,e)}const Dy=F({expm1_:fk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mk(n,t){const e=T(n,"x","tile","string_or_numeric");N(e.rank===t.length,()=>`Error in transpose: rank of input ${e.rank} must match length of reps ${t}.`);const s={x:e},r={reps:t};return A.runKernel(Ra,s,r)}const or=F({tile_:mk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gk(n,t,e,s="float32"){t==null&&(t=n);const r=Ft([n,t],s),o=n<=t?n:t;for(let i=0;i<o;++i)r.set(1,i,i);const a=B(r.toTensor(),[n,t]);if(e==null)return a;if(e.length===1)return or(Sn(a,0),[e[0],1,1]);if(e.length===2)return or(Sn(Sn(a,0),0),[e[0],e[1],1,1]);if(e.length===3)return or(Sn(Sn(Sn(a,0),0),0),[e[0],e[1],e[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${e.length}D.`)}const Ry=F({eye_:gk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pd(n,t,e){const s={shape:n,value:t,dtype:e};return A.runKernel(Hh,{},s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yk(n){const e={x:T(n,"x","floor")};return A.runKernel(na,e)}const Va=F({floor_:yk});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bk(n,t,e=0,s=0){const r=T(n,"x","gather"),o=T(t,"indices","gather","int32"),a={x:r,indices:o},i={axis:e,batchDims:s};return A.runKernel(zl,a,i)}const So=F({gather_:bk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xk(n,t){let e=T(n,"a","greater"),s=T(t,"b","greater");[e,s]=fe(e,s),Rt(e.shape,s.shape);const r={a:e,b:s};return A.runKernel(Bl,r)}const ls=F({greater_:xk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wk(n,t){let e=T(n,"a","greaterEqual"),s=T(t,"b","greaterEqual");[e,s]=fe(e,s),Rt(e.shape,s.shape);const r={a:e,b:s};return A.runKernel(ra,r)}const wr=F({greaterEqual_:wk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vk(n){const e={input:T(n,"input","imag")};return A.runKernel(Xh,e)}const zd=F({imag_:vk});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $k(n){const e={x:T(n,"x","isFinite")};return A.runKernel(aa,e)}const kk=F({isFinite_:$k});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ck(n){const e={x:T(n,"x","isInf")};return A.runKernel(ia,e)}const Nk=F({isInf_:Ck});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ik(n){const e={x:T(n,"x","isNaN")};return A.runKernel(la,e)}const Sk=F({isNaN_:Ik});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tk(n,t=.2){const s={x:T(n,"x","leakyRelu")},r={alpha:t};return A.runKernel(Ml,s,r)}const Cc=F({leakyRelu_:Tk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ek(n,t){let e=T(n,"a","less"),s=T(t,"b","less");[e,s]=fe(e,s),Rt(e.shape,s.shape);const r={a:e,b:s};return A.runKernel(Vl,r)}const Bd=F({less_:Ek});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ak(n,t){let e=T(n,"a","lessEqual"),s=T(t,"b","lessEqual");[e,s]=fe(e,s),Rt(e.shape,s.shape);const r={a:e,b:s};return A.runKernel(Wl,r)}const eo=F({lessEqual_:Ak});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dk(n,t,e){if(e<=0)throw new Error("The number of values should be positive.");const s={start:n,stop:t,num:e};return A.runKernel(Yh,{},s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rk(n,t=5,e=1,s=1,r=.5){const o=T(n,"x","localResponseNormalization");N(o.rank===4||o.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${o.rank}.`),N(Le(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let a=o,i=!1;o.rank===3&&(i=!0,a=B(o,[1,o.shape[0],o.shape[1],o.shape[2]]));const l={x:a},c={depthRadius:t,bias:e,alpha:s,beta:r},u=A.runKernel(jl,l,c);return i?B(u,[u.shape[1],u.shape[2],u.shape[3]]):u}const Fy=F({localResponseNormalization_:Rk});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fk(n){const e={x:T(n,"x","log")};return A.runKernel(ca,e)}const jn=F({log_:Fk});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ok(n){const e={x:T(n,"x","log1p")};return A.runKernel(ua,e)}const Oy=F({log1p_:Ok});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _k(n,t){N(Ru(n),()=>"The f passed in variableGrads(f) must be a function"),N(t==null||Array.isArray(t)&&t.every(c=>c instanceof Ki),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const e=t!=null;if(!e){t=[];for(const c in A.registeredVariables)t.push(A.registeredVariables[c])}const s=e?t.filter(c=>!c.trainable):null,r=t.length;t=t.filter(c=>c.trainable),N(t.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${r} variables is trainable.`);const o=!0,{value:a,grads:i}=A.gradients(n,t,null,o);N(i.some(c=>c!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),N(a.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${a.rank} tensor`);const l={};return t.forEach((c,u)=>{i[u]!=null&&(l[c.name]=i[u])}),s!=null&&s.forEach(c=>l[c.name]=null),{value:a,grads:l}}function Ls(n){return A.customGrad(n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lk(n){const e={x:T(n,"x","neg")};return A.runKernel(Ql,e)}const Ie=F({neg_:Lk});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pk(n){const e={x:T(n,"x","softplus")};return A.runKernel(Ia,e)}const Wa=F({softplus_:Pk});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zk(n){const t=T(n,"x","logSigmoid");return Ls(s=>({value:Ie(Wa(Ie(s))),gradFunc:a=>P(a,to(Ie(s)))}))(t)}const Bk=F({logSigmoid_:zk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mk(n,t=null,e=!1){const r={x:T(n,"x","max")},o={reductionIndices:t,keepDims:e};return A.runKernel(ql,r,o)}const Rn=F({max_:Mk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vk(n,t){let e=T(n,"a","sub"),s=T(t,"b","sub");[e,s]=fe(e,s);const r={a:e,b:s};return A.runKernel(Ea,r)}const xt=F({sub_:Vk});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wk(n,t=null,e=!1){let s=T(n,"x","sum");s.dtype==="bool"&&(s=ut(s,"int32"));const r={x:s},o={axis:t,keepDims:e};return A.runKernel(dc,r,o)}const bt=F({sum_:Wk});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uk(n,t=-1){const e=T(n,"logits","logSoftmax");if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${e.rank} and axis was ${t}`);return Ls((r,o)=>{const i=Rn(r,t,!0),l=xt(r,i),c=xt(ut(l,"float32"),jn(bt(bs(l),t,!0)));return o([c]),{value:c,gradFunc:(h,d)=>{const[p]=d,f=!0,m=bs(p);return xt(h,P(bt(h,t,f),m))}}})(e)}const Md=F({logSoftmax_:Uk});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vd(n,t){for(let e=0;e<n.length;++e)if(n[n.length-e-1]!==t-1-e)return!1;return!0}function _y(n,t,e){const s=n.length+t.length,r=[];let o=0,a=0;for(let i=0;i<s;i++)e.indexOf(i)===-1?r.push(n[o++]):r.push(t[a++]);return r}function ze(n,t){const e=[],s=n.length;for(let o=0;o<s;o++)t.indexOf(o)===-1&&e.push(n[o]);const r=t.map(o=>n[o]);return[e,r]}function we(n,t){const e=t.map(s=>1);return _y(n,e,t)}function je(n,t,e){N(Vd(t,e),()=>`${n} supports only inner-most axes for now. Got axes ${t} and rank-${e} input.`)}function ye(n,t){if(Vd(n,t))return null;const e=[];for(let s=0;s<t;++s)n.indexOf(s)===-1&&e.push(s);return n.forEach(s=>e.push(s)),e}function no(n){return n.map((t,e)=>[e,t]).sort((t,e)=>t[1]-e[1]).map(t=>t[0])}function ve(n,t){const e=[];for(let s=t-n;s<t;++s)e.push(s);return e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gk(n,t=null,e=!1){const s=T(n,"x","logSumExp"),r=Et(t,s.shape),o=Rn(s,r,!0),a=xt(s,o),i=bs(a),l=bt(i,r),c=jn(l),u=nt(B(o,c.shape),c);if(e){const h=we(u.shape,r);return B(u,h)}return u}const Hk=F({logSumExp_:Gk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jk(n,t){const e=T(n,"a","logicalAnd","bool"),s=T(t,"b","logicalAnd","bool");Rt(e.shape,s.shape);const r={a:e,b:s};return A.runKernel(Ul,r)}const as=F({logicalAnd_:jk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qk(n){const e={x:T(n,"x","logicalNot","bool")};return A.runKernel(Gl,e)}const Nc=F({logicalNot_:qk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kk(n,t){const e=T(n,"a","logicalOr","bool"),s=T(t,"b","logicalOr","bool");Rt(e.shape,s.shape);const r={a:e,b:s};return A.runKernel(Hl,r)}const Wd=F({logicalOr_:Kk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xk(n,t){const e=T(n,"a","logicalXor","bool"),s=T(t,"b","logicalXor","bool");return Rt(e.shape,s.shape),as(Wd(n,t),Nc(as(n,t)))}const Yk=F({logicalXor_:Xk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jk(n,t,e,s,r){const o=T(n,"x","maxPool"),a=1;let i=o,l=!1;o.rank===3&&(l=!0,i=B(o,[1,o.shape[0],o.shape[1],o.shape[2]])),N(i.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`),N(He(e,a),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${e} and dilations '${a}'`),r!=null&&N(Le(s),()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${r} but got pad ${s}.`);const c={x:i},u={filterSize:t,strides:e,pad:s,dimRoundingMode:r},h=A.runKernel(Kl,c,u);return l?B(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const Ic=F({maxPool_:Jk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zk(n,t=[1,1,1],e,s,r,o="NDHWC"){const a=T(n,"x","maxPool3d");let i=a,l=!1;a.rank===4&&(l=!0,i=B(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),N(i.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${i.rank}.`),N(o==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${o}`),r!=null&&N(Le(s),()=>`Error in maxPool3d: pad must be an integer when using, dimRoundingMode ${r} but got pad ${s}.`);const c={x:i},u={filterSize:t,strides:e,pad:s,dimRoundingMode:r,dataFormat:o},h=A.runKernel(Xl,c,u);return l?B(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const Ly=F({maxPool3d_:Zk});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qk(n,t,e,s,r=!1){const a={x:T(n,"x","maxPoolWithArgmax")},i={filterSize:t,strides:e,pad:s,includeBatchInIndex:r},l=A.runKernel(td,a,i);return{result:l[0],indexes:l[1]}}const tC=F({maxPoolWithArgmax_:Qk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eC(n,t){let e=T(n,"a","maximum"),s=T(t,"b","maximum");[e,s]=fe(e,s),e.dtype==="bool"&&(e=ut(e,"int32"),s=ut(s,"int32")),Rt(e.shape,s.shape);const r={a:e,b:s};return A.runKernel(ha,r)}const ks=F({maximum_:eC});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nC(n,t=null,e=!1){const r={x:T(n,"x","mean")},o={axis:t,keepDims:e};return A.runKernel(Yl,r,o)}const ge=F({mean_:nC});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sC(n,t=null,e=!1){const r={x:T(n,"x","min")},o={axis:t,keepDims:e};return A.runKernel(Jl,r,o)}const To=F({min_:sC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rC(n,t){let e=T(n,"a","minimum"),s=T(t,"b","minimum");[e,s]=fe(e,s),e.dtype==="bool"&&(e=ut(e,"int32"),s=ut(s,"int32")),Rt(e.shape,s.shape);const r={a:e,b:s};return A.runKernel(da,r)}const Sc=F({minimum_:rC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oC(n,t,e){N(e==="reflect"||e==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${e}.`);const s=T(n,"x","mirrorPad");if(s.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");N(t.length===s.rank,()=>`Padding doesn't match input. Must be ${s.rank}. Got ${t.length}.`);const r=e==="reflect"?1:0;for(let i=0;i<s.rank;i++)N(t[i].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),N(t[i][0]>=0&&t[i][0]<=s.shape[i]-r&&t[i][1]>=0&&t[i][1]<=s.shape[i]-r,()=>`Padding in dimension ${i} cannot be greater than or equal to ${s.shape[i]-r} or less than 0 for input of shape ${s.shape}`);const o={paddings:t,mode:e},a={x:s};return A.runKernel(Zl,a,o)}const Py=F({mirrorPad_:oC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aC(n,t){let e=T(n,"a","mod"),s=T(t,"b","mod");[e,s]=fe(e,s);const r={a:e,b:s};return A.runKernel(pa,r)}const zy=F({mod_:aC});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iC(n){const t=T(n,"x","square"),e={};return A.runKernel("Square",{x:t},e)}const se=F({square_:iC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lC(n,t=null,e=!1){n=T(n,"x","moments");const s=Et(t,n.shape),r=ge(n,s,e);let o=r.shape;e||(o=we(r.shape,s));const a=se(xt(ut(n,"float32"),B(r,o))),i=ge(a,s,e);return{mean:r,variance:i}}const Ud=F({moments_:lC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cC(n,t,e,s=!1){const r=T(n,"logits","multinomial"),o=r.size,a=r.rank;if(o<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${o}.`);if(a>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${a}`);e=e||Math.random();const l={logits:a===1?B(r,[1,-1]):r},c={numSamples:t,seed:e,normalized:s},u=A.runKernel(ed,l,c);return a===1?B(u,[u.size]):u}const uC=F({multinomial_:cC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hC(n,t){let e=T(n,"a","notEqual"),s=T(t,"b","notEqual");[e,s]=fe(e,s),Rt(e.shape,s.shape);const r={a:e,b:s};return A.runKernel(tc,r)}const Eo=F({notEqual_:hC});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xe(n,t="float32"){if(t==="complex64"){const s=xe(n,"float32"),r=xe(n,"float32");return ur(s,r)}const e=Ke(H(n),t);return A.makeTensor(e,n,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gs(n,t="float32"){if(t==="complex64"){const s=Gs(n,"float32"),r=xe(n,"float32");return ur(s,r)}const e=Rg(H(n),t);return A.makeTensor(e,n,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dC(n){const e={x:T(n,"x","onesLike")};return A.runKernel(ec,e)}const xn=F({onesLike_:dC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pC(n,t,e=0){const s=T(n,"x","pad");if(s.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const r={paddings:t,constantValue:e},o={x:s};return A.runKernel(rc,o,r)}const Tc=F({pad_:pC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fC(n,t,e){const s=T(n,"x","spaceToBatchND");N(s.rank>=1+t.length,()=>`input rank ${s.rank} should be > than [blockShape] ${t.length}`),N(e.length===t.length,()=>`paddings.shape[0] ${e.length} must be equal to [blockShape] ${t.length}`),N(s.shape.reduce((a,i,l)=>l>0&&l<=t.length?a&&(i+e[l-1][0]+e[l-1][1])%t[l-1]===0:a,!0),()=>`input spatial dimensions ${s.shape.slice(1)} with paddings ${e.toString()} must be divisible by blockShapes ${t.toString()}`);const r={x:s},o={blockShape:t,paddings:e};return A.runKernel(pc,r,o)}const Ec=F({spaceToBatchND_:fC});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mC(n,t,e,s,r,o){r==null&&(r=[1,1]),o==null&&(o=1),s===0&&(s="valid");const a=T(n,"x","maxPool");let i=a,l=!1;a.rank===3&&(l=!0,i=B(a,[1,a.shape[0],a.shape[1],a.shape[2]])),N(He(o,r),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${o} and dilations '${r}'`);const c=_n(i.shape,t,o,r,s),u=[c.dilationHeight,c.dilationWidth];let h;s==="same"?h=yC([c.filterHeight,c.filterWidth],u):h=[[0,0],[0,0]];const d=u[0]===1&&u[1]===1,[p,f]=gC([c.inHeight,c.inWidth],u,h),m=d?s:"valid",g=d?i:Ec(i,u,p),b=(e==="avg"?()=>vc(g,t,o,m):()=>Ic(g,t,o,m))(),$=d?b:$c(b,u,f);return l?B($,[$.shape[1],$.shape[2],$.shape[3]]):$}function gC(n,t,e){const s=e.map(u=>u[0]),r=e.map(u=>u[1]),o=n.concat(s,r),a=t.map((u,h)=>(u-o[h]%u)%u),i=r.map((u,h)=>u+a[h]),l=t.map((u,h)=>[s[h],i[h]]),c=t.map((u,h)=>[0,a[h]]);return[l,c]}function yC(n,t){const s=n.map((a,i)=>a+(a-1)*(t[i]-1)).map(a=>a-1),r=s.map(a=>Math.floor(a/2)),o=s.map((a,i)=>a-r[i]);return s.map((a,i)=>[r[i],o[i]])}const bC=F({pool_:mC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xC(n,t){let e=T(n,"base","pow"),s=T(t,"exp","pow");[e,s]=fe(e,s);const r={a:e,b:s};return A.runKernel(ma,r)}const pr=F({pow_:xC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wC(n,t){const e=T(n,"x","prelu"),s=T(t,"alpha","prelu"),r={x:e,alpha:s};return A.runKernel(oc,r)}const Ac=F({prelu_:wC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vC(n,t=null,e=!1){let s=T(n,"x","prod");s.dtype==="bool"&&(s=ut(s,"int32"));const r={x:s},o={axis:t,keepDims:e};return A.runKernel(od,r,o)}const Gd=F({prod_:vC});var ki={exports:{}},$C=ki.exports,Lf;function kC(){return Lf||(Lf=1,(function(n){(function(t,e,s){function r(l){var c=this,u=i();c.next=function(){var h=2091639*c.s0+c.c*23283064365386963e-26;return c.s0=c.s1,c.s1=c.s2,c.s2=h-(c.c=h|0)},c.c=1,c.s0=u(" "),c.s1=u(" "),c.s2=u(" "),c.s0-=u(l),c.s0<0&&(c.s0+=1),c.s1-=u(l),c.s1<0&&(c.s1+=1),c.s2-=u(l),c.s2<0&&(c.s2+=1),u=null}function o(l,c){return c.c=l.c,c.s0=l.s0,c.s1=l.s1,c.s2=l.s2,c}function a(l,c){var u=new r(l),h=c&&c.state,d=u.next;return d.int32=function(){return u.next()*4294967296|0},d.double=function(){return d()+(d()*2097152|0)*11102230246251565e-32},d.quick=d,h&&(typeof h=="object"&&o(h,u),d.state=function(){return o(u,{})}),d}function i(){var l=4022871197,c=function(u){u=u.toString();for(var h=0;h<u.length;h++){l+=u.charCodeAt(h);var d=.02519603282416938*l;l=d>>>0,d-=l,d*=l,l=d>>>0,d-=l,l+=d*4294967296}return(l>>>0)*23283064365386963e-26};return c}e&&e.exports?e.exports=a:this.alea=a})($C,n)})(ki)),ki.exports}var Ci={exports:{}},CC=Ci.exports,Pf;function NC(){return Pf||(Pf=1,(function(n){(function(t,e,s){function r(i){var l=this,c="";l.x=0,l.y=0,l.z=0,l.w=0,l.next=function(){var h=l.x^l.x<<11;return l.x=l.y,l.y=l.z,l.z=l.w,l.w^=l.w>>>19^h^h>>>8},i===(i|0)?l.x=i:c+=i;for(var u=0;u<c.length+64;u++)l.x^=c.charCodeAt(u)|0,l.next()}function o(i,l){return l.x=i.x,l.y=i.y,l.z=i.z,l.w=i.w,l}function a(i,l){var c=new r(i),u=l&&l.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=c.next()>>>11,p=(c.next()>>>0)/4294967296,f=(d+p)/(1<<21);while(f===0);return f},h.int32=c.next,h.quick=h,u&&(typeof u=="object"&&o(u,c),h.state=function(){return o(c,{})}),h}e&&e.exports?e.exports=a:this.xor128=a})(CC,n)})(Ci)),Ci.exports}var Ni={exports:{}},IC=Ni.exports,zf;function SC(){return zf||(zf=1,(function(n){(function(t,e,s){function r(i){var l=this,c="";l.next=function(){var h=l.x^l.x>>>2;return l.x=l.y,l.y=l.z,l.z=l.w,l.w=l.v,(l.d=l.d+362437|0)+(l.v=l.v^l.v<<4^(h^h<<1))|0},l.x=0,l.y=0,l.z=0,l.w=0,l.v=0,i===(i|0)?l.x=i:c+=i;for(var u=0;u<c.length+64;u++)l.x^=c.charCodeAt(u)|0,u==c.length&&(l.d=l.x<<10^l.x>>>4),l.next()}function o(i,l){return l.x=i.x,l.y=i.y,l.z=i.z,l.w=i.w,l.v=i.v,l.d=i.d,l}function a(i,l){var c=new r(i),u=l&&l.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=c.next()>>>11,p=(c.next()>>>0)/4294967296,f=(d+p)/(1<<21);while(f===0);return f},h.int32=c.next,h.quick=h,u&&(typeof u=="object"&&o(u,c),h.state=function(){return o(c,{})}),h}e&&e.exports?e.exports=a:this.xorwow=a})(IC,n)})(Ni)),Ni.exports}var Ii={exports:{}},TC=Ii.exports,Bf;function EC(){return Bf||(Bf=1,(function(n){(function(t,e,s){function r(i){var l=this;l.next=function(){var u=l.x,h=l.i,d,p;return d=u[h],d^=d>>>7,p=d^d<<24,d=u[h+1&7],p^=d^d>>>10,d=u[h+3&7],p^=d^d>>>3,d=u[h+4&7],p^=d^d<<7,d=u[h+7&7],d=d^d<<13,p^=d^d<<9,u[h]=p,l.i=h+1&7,p};function c(u,h){var d,p=[];if(h===(h|0))p[0]=h;else for(h=""+h,d=0;d<h.length;++d)p[d&7]=p[d&7]<<15^h.charCodeAt(d)+p[d+1&7]<<13;for(;p.length<8;)p.push(0);for(d=0;d<8&&p[d]===0;++d);for(d==8?p[7]=-1:p[d],u.x=p,u.i=0,d=256;d>0;--d)u.next()}c(l,i)}function o(i,l){return l.x=i.x.slice(),l.i=i.i,l}function a(i,l){i==null&&(i=+new Date);var c=new r(i),u=l&&l.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=c.next()>>>11,p=(c.next()>>>0)/4294967296,f=(d+p)/(1<<21);while(f===0);return f},h.int32=c.next,h.quick=h,u&&(u.x&&o(u,c),h.state=function(){return o(c,{})}),h}e&&e.exports?e.exports=a:this.xorshift7=a})(TC,n)})(Ii)),Ii.exports}var Si={exports:{}},AC=Si.exports,Mf;function DC(){return Mf||(Mf=1,(function(n){(function(t,e,s){function r(i){var l=this;l.next=function(){var u=l.w,h=l.X,d=l.i,p,f;return l.w=u=u+1640531527|0,f=h[d+34&127],p=h[d=d+1&127],f^=f<<13,p^=p<<17,f^=f>>>15,p^=p>>>12,f=h[d]=f^p,l.i=d,f+(u^u>>>16)|0};function c(u,h){var d,p,f,m,g,y=[],b=128;for(h===(h|0)?(p=h,h=null):(h=h+"\0",p=0,b=Math.max(b,h.length)),f=0,m=-32;m<b;++m)h&&(p^=h.charCodeAt((m+32)%h.length)),m===0&&(g=p),p^=p<<10,p^=p>>>15,p^=p<<4,p^=p>>>13,m>=0&&(g=g+1640531527|0,d=y[m&127]^=p+g,f=d==0?f+1:0);for(f>=128&&(y[(h&&h.length||0)&127]=-1),f=127,m=512;m>0;--m)p=y[f+34&127],d=y[f=f+1&127],p^=p<<13,d^=d<<17,p^=p>>>15,d^=d>>>12,y[f]=p^d;u.w=g,u.X=y,u.i=f}c(l,i)}function o(i,l){return l.i=i.i,l.w=i.w,l.X=i.X.slice(),l}function a(i,l){i==null&&(i=+new Date);var c=new r(i),u=l&&l.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=c.next()>>>11,p=(c.next()>>>0)/4294967296,f=(d+p)/(1<<21);while(f===0);return f},h.int32=c.next,h.quick=h,u&&(u.X&&o(u,c),h.state=function(){return o(c,{})}),h}e&&e.exports?e.exports=a:this.xor4096=a})(AC,n)})(Si)),Si.exports}var Ti={exports:{}},RC=Ti.exports,Vf;function FC(){return Vf||(Vf=1,(function(n){(function(t,e,s){function r(i){var l=this,c="";l.next=function(){var h=l.b,d=l.c,p=l.d,f=l.a;return h=h<<25^h>>>7^d,d=d-p|0,p=p<<24^p>>>8^f,f=f-h|0,l.b=h=h<<20^h>>>12^d,l.c=d=d-p|0,l.d=p<<16^d>>>16^f,l.a=f-h|0},l.a=0,l.b=0,l.c=-1640531527,l.d=1367130551,i===Math.floor(i)?(l.a=i/4294967296|0,l.b=i|0):c+=i;for(var u=0;u<c.length+20;u++)l.b^=c.charCodeAt(u)|0,l.next()}function o(i,l){return l.a=i.a,l.b=i.b,l.c=i.c,l.d=i.d,l}function a(i,l){var c=new r(i),u=l&&l.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=c.next()>>>11,p=(c.next()>>>0)/4294967296,f=(d+p)/(1<<21);while(f===0);return f},h.int32=c.next,h.quick=h,u&&(typeof u=="object"&&o(u,c),h.state=function(){return o(c,{})}),h}e&&e.exports?e.exports=a:this.tychei=a})(RC,n)})(Ti)),Ti.exports}var uu={exports:{}};const OC={},_C=Object.freeze(Object.defineProperty({__proto__:null,default:OC},Symbol.toStringTag,{value:"Module"})),Hd=lw(_C);var Wf;function LC(){return Wf||(Wf=1,(function(n){(function(t,e){var s=this,r=256,o=6,a=52,i="random",l=e.pow(r,o),c=e.pow(2,a),u=c*2,h=r-1,d;function p(x,w,C){var k=[];w=w==!0?{entropy:!0}:w||{};var I=y(g(w.entropy?[x,$(t)]:x??b(),3),k),S=new f(k),E=function(){for(var R=S.g(o),L=l,O=0;R<c;)R=(R+O)*r,L*=r,O=S.g(1);for(;R>=u;)R/=2,L/=2,O>>>=1;return(R+O)/L};return E.int32=function(){return S.g(4)|0},E.quick=function(){return S.g(4)/4294967296},E.double=E,y($(S.S),t),(w.pass||C||function(R,L,O,z){return z&&(z.S&&m(z,S),R.state=function(){return m(S,{})}),O?(e[i]=R,L):R})(E,I,"global"in w?w.global:this==e,w.state)}e["seed"+i]=p;function f(x){var w,C=x.length,k=this,I=0,S=k.i=k.j=0,E=k.S=[];for(C||(x=[C++]);I<r;)E[I]=I++;for(I=0;I<r;I++)E[I]=E[S=h&S+x[I%C]+(w=E[I])],E[S]=w;(k.g=function(R){for(var L,O=0,z=k.i,M=k.j,V=k.S;R--;)L=V[z=h&z+1],O=O*r+V[h&(V[z]=V[M=h&M+L])+(V[M]=L)];return k.i=z,k.j=M,O})(r)}function m(x,w){return w.i=x.i,w.j=x.j,w.S=x.S.slice(),w}function g(x,w){var C=[],k=typeof x,I;if(w&&k=="object")for(I in x)try{C.push(g(x[I],w-1))}catch{}return C.length?C:k=="string"?x:x+"\0"}function y(x,w){for(var C=x+"",k,I=0;I<C.length;)w[h&I]=h&(k^=w[h&I]*19)+C.charCodeAt(I++);return $(w)}function b(){try{var x;return d&&(x=d.randomBytes)?x=x(r):(x=new Uint8Array(r),(s.crypto||s.msCrypto).getRandomValues(x)),$(x)}catch{var w=s.navigator,C=w&&w.plugins;return[+new Date,s,C,s.screen,$(t)]}}function $(x){return String.fromCharCode.apply(0,x)}if(y(e.random(),t),n.exports){n.exports=p;try{d=Hd}catch{}}})([],Math)})(uu)),uu.exports}var hu,Uf;function PC(){if(Uf)return hu;Uf=1;var n=kC(),t=NC(),e=SC(),s=EC(),r=DC(),o=FC(),a=LC();return a.alea=n,a.xor128=t,a.xorwow=e,a.xorshift7=s,a.xor4096=r,a.tychei=o,hu=a,hu}var By=PC();/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class My{constructor(t,e,s,r,o){this.mean=t,this.stdDev=e,this.dtype=s,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);const a=o||Math.random();this.random=By.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){const r=this.nextVal;return this.nextVal=NaN,r}let t,e,s=!1;for(;!s;){let r,o,a;do r=2*this.random()-1,o=2*this.random()-1,a=r*r+o*o;while(a>=1||a===0);const i=Math.sqrt(-2*Math.log(a)/a);t=this.mean+this.stdDev*r*i,e=this.mean+this.stdDev*o*i,(!this.truncated||this.isValidTruncated(t))&&(s=!0)}return(!this.truncated||this.isValidTruncated(e))&&(this.nextVal=this.convertValue(e)),this.convertValue(t)}convertValue(t){return this.dtype==null||this.dtype==="float32"?t:Math.round(t)}isValidTruncated(t){return t<=this.upper&&t>=this.lower}}class zC{constructor(t=0,e=1,s,r){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=t,this.range=e-t,this.dtype=s,r==null&&(r=Math.random()),typeof r=="number"&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${t} - ${e} <= 1 and dtype is not float`);this.random=By.alea(r)}convertValue(t){return this.canReturnFloat()?t:Math.round(t)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BC(n,t=0,e=1,s,r){if(s!=null&&s==="bool")throw new Error(`Unsupported data type ${s}`);const o=new My(t,e,s,!1,r),a=Ft(n,s);for(let i=0;i<a.values.length;i++)a.values[i]=o.nextValue();return a.toTensor()}const MC=F({randomNormal_:BC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VC(n,t=0,e=1,s="float32",r){const o=Ft(n,s),a=new zC(t,e,null,r);for(let i=0;i<o.values.length;i++)o.values[i]=a.nextValue();return o.toTensor()}const Ua=F({randomUniform_:VC});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qu(n,t,e=1,s="float32"){if(e===0)throw new Error("Cannot have a step of zero");const r={start:n,stop:t,step:e,dtype:s};return A.runKernel(ad,{},r)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WC(n){const e={input:T(n,"input","real")};return A.runKernel(id,e)}const tl=F({real_:WC});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UC(n){const e={x:T(n,"x","reciprocal")};return A.runKernel(ga,e)}const Vy=F({reciprocal_:UC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GC(n){const e={x:T(n,"x","relu")};return A.runKernel(ya,e)}const vr=F({relu_:GC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HC(n){const e={x:T(n,"x","relu6")};return A.runKernel(ba,e)}const jd=F({relu6_:HC});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jC(n,t){const s={x:T(n,"x","reverse")},r={dims:t};return A.runKernel(cc,s,r)}const xs=F({reverse_:jC});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qC(n){const e={x:T(n,"x","round")};return A.runKernel(xa,e)}const Wy=F({round_:qC});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KC(n){const e={x:T(n,"x","rsqrt")};return A.runKernel(wa,e)}const qd=F({rsqrt_:KC});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nt(n,t){if((os(n)&&t!=="string"||Array.isArray(n))&&t!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(t==="string"&&os(n)&&!(n instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return La(n,[],[],t)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XC(n){const e={x:T(n,"x","selu")};return A.runKernel(va,e)}const Kd=F({selu_:XC});function YC(n,t,e,s,r,o=[1,1],a="NHWC"){const i=T(n,"x","separableConv2d"),l=T(t,"depthwiseFilter","separableConv2d"),c=T(e,"pointwiseFilter","separableConv2d");let u=i,h=!1;if(i.rank===3&&(h=!0,u=B(i,[1,i.shape[0],i.shape[1],i.shape[2]])),a==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");N(u.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${u.rank}.`),N(l.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`),N(c.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`),N(c.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${c.shape[0]}.`),N(c.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${c.shape[1]}.`);const d=l.shape[2],p=l.shape[3];N(c.shape[2]===d*p,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*p}, but got ${c.shape[2]}.`);const f=Ba(u,l,s,r,a,o),g=_s(f,c,1,"valid",a);return h?B(g,[g.shape[1],g.shape[2],g.shape[3]]):g}const Uy=F({separableConv2d_:YC});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function JC(n,t){const e=T(n,"x","setdiff1d"),s=T(t,"y","setdiff1d");N(e.dtype===s.dtype,()=>`x and y should have the same dtype, but got x (${e.dtype}) and y (${s.dtype}).`),N(e.rank===1,()=>`x should be 1D tensor, but got x (${e.shape}).`),N(s.rank===1,()=>`y should be 1D tensor, but got y (${s.shape}).`);const r=await e.data(),o=await s.data(),a=new Set(o);let i=0;for(let u=0;u<r.length;u++)a.has(r[u])||i++;const l=new _e([i],e.dtype),c=new _e([i],"int32");for(let u=0,h=0;u<r.length;u++)a.has(r[u])||(l.values[h]=r[u],c.values[h]=u,h++);return[l.toTensor(),c.toTensor()]}const ZC=JC;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QC(n){const e={x:T(n,"x","sign")};return A.runKernel(Ca,e)}const Gy=F({sign_:QC});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tN(n){const e={x:T(n,"x","sin")};return A.runKernel($a,e)}const Xd=F({sin_:tN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eN(n){const e={x:T(n,"x","sinh")};return A.runKernel(ka,e)}const Yd=F({sinh_:eN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nN(n,t,e){const s=T(n,"x","slice1d");return N(s.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${s.rank} tensor`),Qt(s,[t],[e])}const Jd=F({slice1d_:nN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sN(n,t,e){const s=T(n,"x","slice2d");return N(s.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${s.rank} tensor`),Qt(s,t,e)}const Hy=F({slice2d_:sN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rN(n,t,e){const s=T(n,"x","slice3d");return N(s.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${s.rank} tensor`),Qt(s,t,e)}const Zd=F({slice3d_:rN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oN(n,t,e){const s=T(n,"x","slice4d");return N(s.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${s.rank} tensor`),Qt(s,t,e)}const el=F({slice4d_:oN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aN(n,t=-1){const e=T(n,"logits","softmax","float32");if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${e.rank} and dim was ${t}`);const s={logits:e},r={dim:t};return A.runKernel(mc,s,r)}const Dc=F({softmax_:aN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iN(n){N(n.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${n.dtype}.`);const t={input:n};return A.runKernel(Gh,t)}const Qd=F({fft_:iN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lN(n){N(n.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${n.dtype}.`);const t={input:n};return A.runKernel(Kh,t)}const nl=F({ifft_:lN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cN(n){const t=n.shape[n.shape.length-1],e=n.size/t;let s;if(t<=2){const r=B(n,[e,t]);s=nl(r)}else{const r=[e,2*(t-1)],o=B(tl(n),[e,t]),a=B(zd(n),[e,t]),i=xs(Qt(o,[0,1],[e,t-2]),1),l=P(xs(Qt(a,[0,1],[e,t-2]),1),Nt(-1)),c=Ue([o,i],1),u=Ue([a,l],1),h=B(ur(c,u),[r[0],r[1]]);s=nl(h)}if(s=tl(s),n.rank===3&&n.shape[0]!==0){const r=s,o=n.shape[0];s=B(s,[o,s.shape[0]/o,s.shape[1]]),r.dispose()}return s}const jy=F({irfft_:cN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uN(n,t,e=0){const r={x:T(n,"x","split")},o={numOrSizeSplits:t,axis:e};return A.runKernel(fc,r,o)}const gn=F({split_:uN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hN(n,t){N(n.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${n.dtype}`);let e=n.shape[n.shape.length-1];const s=n.size/e;let r;if(t!=null&&t<e){const f=n.shape.map(g=>0),m=n.shape.map(g=>g);m[n.shape.length-1]=t,r=Qt(n,f,m),e=t}else if(t!=null&&t>e){const f=n.shape.map(m=>m);f[n.shape.length-1]=t-e,r=Ue([n,xe(f)],n.shape.length-1),e=t}else r=n;const o=Ot(r),a=B(ur(r,o),[s,e]),i=Qd(a),l=Math.floor(e/2)+1,c=tl(i),u=zd(i),h=gn(c,[l,e-l],c.shape.length-1),d=gn(u,[l,e-l],u.shape.length-1),p=r.shape.slice();return p[r.shape.length-1]=l,B(ur(h[0],d[0]),p)}const qy=F({rfft_:hN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dN(n){const e={x:T(n,"x","sqrt")};return A.runKernel(Sa,e)}const Xe=F({sqrt_:dN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pN(n,t){let e=T(n,"a","squaredDifference"),s=T(t,"b","squaredDifference");[e,s]=fe(e,s),Rt(e.shape,s.shape);const r={a:e,b:s},o={};return A.runKernel(Ta,r,o)}const Ky=F({squaredDifference_:pN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fN(n,t){const e=T(n,"x","squeeze");return B(e,yr(e.shape,t).newShape)}const Gr=F({squeeze_:fN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mN(n,t=0){const e=qg(n,"tensors","stack","string_or_numeric");N(e.length>=1,()=>"Pass at least one tensor to tf.stack"),e.length>0&&N(t<=e[0].rank,()=>"Axis must be <= rank of the tensor");const s=e,r={axis:t};return A.runKernel(sc,s,r)}const Fn=F({stack_:mN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gN(n,t=0){const s={x:T(n,"x","step")},r={alpha:t};return A.runKernel(Fa,s,r)}const Ga=F({step_:gN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yN(n,t,e,s,r=0,o=0,a=0,i=0,l=0){const u={x:T(n,"x","stridedSlice")},h={begin:t,end:e,strides:s,beginMask:r,endMask:o,ellipsisMask:a,newAxisMask:i,shrinkAxisMask:l};return A.runKernel(pd,u,h)}const Xy=F({stridedSlice_:yN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bN(n){const e={x:T(n,"x","tan")};return A.runKernel(Aa,e)}const Yy=F({tan_:bN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qn(n,t){Sh(n);const e=_a(n,t);if(e.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return La(n,null,e,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ei(n,t,e){if(Sh(n),t!=null&&t.length!==2)throw new Error("tensor2d() requires shape to have two numbers");const s=_a(n,e);if(s.length!==2&&s.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return La(n,t,s,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xN(n,t=1,e=!0){const s=T(n,"x","topk");if(s.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");const r=s.shape[s.shape.length-1];if(t>r)throw new Error(`'k' passed to topk() must be <= the last dimension (${r}) but got ${t}`);const o={x:s},a={k:t,sorted:e},[i,l]=A.runKernel(fd,o,a);return{values:i,indices:l}}const Jy=F({topk_:xN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wN(n,t=0,e=1,s,r){if(s!=null&&s==="bool")throw new Error("Unsupported data type $ { dtype }");const o=new My(t,e,s,!0,r),a=Ft(n,s);for(let i=0;i<a.values.length;i++)a.values[i]=o.nextValue();return a.toTensor()}const tp=F({truncatedNormal_:wN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vN(n,t=0){const e=T(n,"x","unique","string_or_numeric");N(e.rank>0,()=>"The input tensor must be at least 1D");const s={x:e},r={axis:t},[o,a]=A.runKernel(gd,s,r);return{values:o,indices:a}}const Ku=F({unique_:vN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $N(n,t,e){const s=T(n,"x","unsortedSegmentSum"),r=T(t,"segmentIds","unsortedSegmentSum","int32");N(Le(e),()=>"numSegments must be of dtype int");const o={x:s,segmentIds:r},a={numSegments:e};return A.runKernel(bc,o,a)}const Zy=F({unsortedSegmentSum_:$N});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kN(n,t=0){const e=T(n,"x","unstack","string_or_numeric");N(t>=-e.shape.length&&t<e.shape.length,()=>`Axis = ${t} is not in [-${e.shape.length}, ${e.shape.length})`);const s={value:e},r={axis:t};return A.runKernel(yc,s,r)}const Kn=F({unstack_:kN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CN(n,t=!0,e,s){return A.makeVariable(n,t,e,s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ep(n,t){const e=[];for(let o=0;o<t.length;o++)t[o]&&e.push(o);const s=Ft(n,"int32"),r=Ft([e.length,n.length],"int32");for(let o=0;o<e.length;o++){const a=s.indexToLoc(e[o]),i=o*n.length;r.values.set(a,i)}return r.toTensor()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function NN(n){const t=T(n,"condition","whereAsync","bool"),e=await t.data(),s=ep(t.shape,e);return n!==t&&t.dispose(),s}const IN=NN;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SN(n,t="euclidean",e=null,s=!1){n=T(n,"x","norm");const r=Qy(n,t,e);let o=r.shape;if(s){const a=Et(e,n.shape);o=we(r.shape,a)}return B(r,o)}function Qy(n,t,e=null){if(n.rank===0)return Ze(n);if(n.rank!==1&&e===null)return Qy(B(n,[-1]),t,e);if(n.rank===1||typeof e=="number"||Array.isArray(e)&&e.length===1){if(t===1)return bt(Ze(n),e);if(t===1/0)return Rn(Ze(n),e);if(t===-1/0)return To(Ze(n),e);if(t==="euclidean"||t===2)return Xe(bt(pr(Ze(n),Nt(2,"int32")),e));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(e)&&e.length===2){if(t===1)return Rn(bt(Ze(n),e[0]),e[1]-1);if(t===1/0)return Rn(bt(Ze(n),e[1]),e[0]);if(t===-1/0)return To(bt(Ze(n),e[1]),e[0]);if(t==="fro"||t==="euclidean")return Xe(bt(se(n),e));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${e}`)}const np=F({norm_:SN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TN(n,t,e){const s=T(n,"indices","scatterND","int32"),r=T(t,"updates","scatterND");ry(r,s,e);const o={indices:s,updates:r},a={shape:e};return A.runKernel(ud,o,a)}const EN=F({scatterND_:TN});function AN(n,t,e,s){if(n.dtype!=="int32")throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${n.dtype}.`);if(n.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${n.shape}.`);const r=n.rank>0?n.shape[0]:1,o=n.rank>1?n.shape[1]:1;if(e.length!==o)throw new Error(`outputShape has incorrect number of elements:, ${e.length}, should be: ${o}.`);const a=t.size;if(!(t.rank===0||t.rank===1&&a===r))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${r}]`);if(t.dtype!==s.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DN(n,t,e,s=0){const r=T(n,"sparseIndices","sparseToDense","int32"),o=T(t,"sparseValues","sparseToDense"),a=T(s,"defaultValue","sparseToDense",o.dtype);AN(r,o,e,a);const i={sparseIndices:r,sparseValues:o,defaultValue:a},l={outputShape:e};return A.runKernel(dd,i,l)}const tb=F({sparseToDense_:DN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RN(n,t){const e=T(t,"indices","gatherND","int32"),r={params:T(n,"x","gatherND"),indices:e};return A.runKernel(qh,r)}const FN=F({gatherND_:RN});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ON(n,t){if(t==null)return n.shape.slice();if(Gt(n.shape,t))return t;if(n.shape.length===t.length){const e=[];for(let s=0;s<n.shape.length;s++)t[s]==null&&n.shape[s]!=null?e.push(n.shape[s]):e.push(t[s]);return e}return t}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _N(n,t,e,s){const r=T(n,"x","dropout");if(N(r.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${r.dtype} tensor instead.`),N(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),t===0)return n instanceof pe?r.clone():r;const o=ON(r,e),a=1-t,i=gt(Va(nt(Ua(o,0,1,"float32",s),a)),a);return P(r,i)}const LN=F({dropout_:_N});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PN(n,t,e,s,r,o="NHWC",a){let i=n;n.rank===3&&(i=B(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let l=t;l.rank===3&&(l=B(t,[1,t.shape[0],t.shape[1],t.shape[2]])),N(i.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${i.shape}.`),N(l.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`),N(e.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${e}.`);const c=o==="NHWC"?i.shape[3]:i.shape[1],u=o==="NHWC"?l.shape[3]:l.shape[1];N(c===e[2],()=>`Error in conv2dDerFilter: depth of input ${c}) must match input depth in filter (${e[2]}.`),N(u===e[3],()=>`Error in conv2dDerFilter: depth of dy (${u}) must match output depth for filter (${e[3]}).`),a!=null&&N(Le(r),()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`);const h={x:i,dy:l},d={strides:s,pad:r,dataFormat:o,dimRoundingMode:a,filterShape:e};return A.runKernel(_h,h,d)}const sp=F({conv2DBackpropFilter_:PN});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rc(n,t,e){if(e==null||e==="linear")return n;if(e==="relu")return P(n,Ga(t));throw new Error(`Cannot compute gradient for fused activation ${e}.`)}function Fc(n,t){let e=t;const s=Ee(n.shape,t.shape);return s.length>0&&(e=bt(e,s)),B(e,n.shape)}function Oc(n,t,e,s){if(t==="linear")return n;if(t==="relu")return vr(n);if(t==="elu")return Ma(n);if(t==="relu6")return jd(n);if(t==="prelu")return Ac(n,e);if(t==="leakyrelu")return Cc(n,s);throw new Error(`Unknown fused activation ${t}.`)}const _c=(n,t)=>!(n>0)||t==="linear";/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zN({x:n,filter:t,strides:e,pad:s,dataFormat:r="NHWC",dilations:o=[1,1],dimRoundingMode:a,bias:i,activation:l="linear",preluActivationWeights:c,leakyreluAlpha:u}){if(l=l||"linear",_c(A.state.gradientDepth,l)===!1){let w=_s(n,t,e,s,r,o,a);return i!=null&&(w=nt(w,i)),Oc(w,l,c,u)}const h=T(n,"x","conv2d"),d=T(t,"filter","conv2d");let p=h,f=!1;h.rank===3&&(f=!0,p=B(h,[1,h.shape[0],h.shape[1],h.shape[2]])),N(p.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${p.rank}.`),N(d.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`),a!=null&&N(Le(s),()=>`Error in fused conv2d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${s}.`),N(p.shape[3]===d.shape[2],()=>`Error in conv2d: depth of input (${p.shape[3]}) must match input depth for filter ${d.shape[2]}.`),N(He(e,o),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${e} and dilations '${o}'`),N(r==="NHWC",()=>`Error in conv2d: got dataFormat of ${r} but only NHWC is currently supported.`);const m=Pe(p.shape,d.shape,e,o,s,a);let g;i!=null&&(g=T(i,"bias","fused conv2d"),[g]=fe(g,h),Rt(m.outShape,g.shape));let y;c!=null&&(y=T(c,"prelu weights","fused conv2d"));const b=(w,C)=>{const[k,I,S,E]=C,R=Rc(w,S,l);N(Os(o),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${o}'`);const L=Fd(I.shape,R,k,e,s),O=sp(I,R,k.shape,e,s),z=[L,O];if(E!=null){const M=Fc(E,R);z.push(M)}return z},$={x:p,filter:d,bias:g,preluActivationWeights:y},x={strides:e,pad:s,dataFormat:r,dilations:o,dimRoundingMode:a,activation:l,leakyreluAlpha:u};return i==null?Ls((C,k,I)=>{let S=A.runKernel(Hi,$,x);return I([k,C,S]),f&&(S=B(S,[S.shape[1],S.shape[2],S.shape[3]])),{value:S,gradFunc:b}})(p,d):Ls((C,k,I,S)=>{let E=A.runKernel(Hi,$,x);return S([k,C,E,I]),f&&(E=B(E,[E.shape[1],E.shape[2],E.shape[3]])),{value:E,gradFunc:b}})(p,d,g)}const eb=F({fusedConv2d_:zN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BN(n,t,e,s,r,o=[1,1],a){let i=n;n.rank===3&&(i=B(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let l=t;l.rank===3&&(l=B(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const c={x:i,dy:l},u={strides:s,pad:r,dimRoundingMode:a,dilations:o,filterShape:e};return A.runKernel(Vh,c,u)}const nb=F({depthwiseConv2dNativeBackpropFilter_:BN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MN(n,t,e,s,r,o=[1,1],a){let i=t,l=!1;t.rank===3&&(l=!0,i=B(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const c={dy:i,filter:e},u={strides:s,pad:r,dimRoundingMode:a,dilations:o,inputShape:n},h=A.runKernel(Wh,c,u);return l?B(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const sb=F({depthwiseConv2dNativeBackpropInput_:MN});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VN({x:n,filter:t,strides:e,pad:s,dataFormat:r="NHWC",dilations:o=[1,1],dimRoundingMode:a,bias:i,activation:l="linear",preluActivationWeights:c,leakyreluAlpha:u}){if(_c(A.state.gradientDepth,l)===!1){let w=Ba(n,t,e,s,r,o,a);return i!=null&&(w=nt(w,i)),Oc(w,l,c,u)}const h=T(n,"x","depthwiseConv2d"),d=T(t,"filter","depthwiseConv2d");let p=h,f=!1;h.rank===3&&(f=!0,p=B(h,[1,h.shape[0],h.shape[1],h.shape[2]])),N(p.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${p.rank}.`),N(d.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${d.rank}.`),N(p.shape[3]===d.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${p.shape[3]}) must match the inChannels dimension in filter ${d.shape[2]}.`),o==null&&(o=[1,1]),N(He(e,o),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${e} and dilations '${o}'`),a!=null&&N(Le(s),()=>`Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode ${a} but got pad ${s}.`);const m=Pe(p.shape,d.shape,e,o,s,a,!0);let g;i!=null&&(g=T(i,"bias","fused conv2d"),[g]=fe(g,h),Rt(m.outShape,g.shape));let y;c!=null&&(y=T(c,"prelu weights","fused depthwiseConv2d"));const b=(w,C)=>{N(Os(o),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`);const[k,I,S,E]=C,R=Rc(w,S,l),L=sb(I.shape,R,k,e,s,o,a),O=nb(I,R,k.shape,e,s,o,a);if(E!=null){const z=Fc(g,R);return[L,O,z]}return[L,O]},$={x:p,filter:d,bias:g,preluActivationWeights:y},x={strides:e,pad:s,dataFormat:r,dilations:o,dimRoundingMode:a,activation:l,leakyreluAlpha:u};return i==null?Ls((C,k,I)=>{let S=A.runKernel(ji,$,x);return I([k,C,S]),f&&(S=B(S,[S.shape[1],S.shape[2],S.shape[3]])),{value:S,gradFunc:b}})(p,d):Ls((C,k,I,S)=>{let E=A.runKernel(ji,$,x);return S([k,C,E,I]),f&&(E=B(E,[E.shape[1],E.shape[2],E.shape[3]])),{value:E,gradFunc:b}})(p,d,g)}const WN=F({fusedDepthwiseConv2d_:VN});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UN({a:n,b:t,transposeA:e=!1,transposeB:s=!1,bias:r,activation:o="linear",preluActivationWeights:a,leakyreluAlpha:i}){if(_c(A.state.gradientDepth,o)===!1){let E=Wt(n,t,e,s);return r!=null&&(E=nt(E,r)),Oc(E,o,a,i)}let l=T(n,"a","fused matMul"),c=T(t,"b","fused matMul");[l,c]=fe(l,c);const u=e?l.shape[l.rank-2]:l.shape[l.rank-1],h=s?c.shape[c.rank-1]:c.shape[c.rank-2],d=e?l.shape[l.rank-1]:l.shape[l.rank-2],p=s?c.shape[c.rank-2]:c.shape[c.rank-1],f=l.shape.slice(0,-2),m=c.shape.slice(0,-2),g=H(f),y=H(m);N(l.rank>=2&&c.rank>=2&&l.rank===c.rank,()=>`Error in fused matMul: inputs must have the same rank of at least 2, got ranks ${l.rank} and ${c.rank}.`),N(Gt(f,m),()=>`Error in fused matMul: outer dimensions (${f}) and (${m}) of Tensors with shapes ${l.shape} and ${c.shape} must match.`),N(u===h,()=>`Error in fused matMul: inner shapes (${u}) and (${h}) of Tensors with shapes ${l.shape} and ${c.shape} and transposeA=${e} and transposeB=${s} must match.`);const b=l.shape.slice(0,-2).concat([d,p]),$=e?B(l,[g,u,d]):B(l,[g,d,u]),x=s?B(c,[y,p,h]):B(c,[y,h,p]);let w;r!=null&&(w=T(r,"bias","fused matMul"),[w]=fe(w,l),Rt(b,w.shape));let C;a!=null&&(C=T(a,"prelu weights","fused matMul"));const k=(E,R)=>{const[L,O,z,M]=R,V=Rc(B(E,z.shape),z,o);let K,G;if(!e&&!s?(K=Wt(V,O,!1,!0),G=Wt(L,V,!0,!1)):!e&&s?(K=Wt(V,O,!1,!1),G=Wt(V,L,!0,!1)):e&&!s?(K=Wt(O,V,!1,!0),G=Wt(L,V,!1,!1)):(K=Wt(O,V,!0,!0),G=Wt(V,L,!0,!0)),r!=null){const j=Fc(M,V);return[K,G,j]}else return[K,G]},I={a:$,b:x,bias:w,preluActivationWeights:C},S={transposeA:e,transposeB:s,activation:o,leakyreluAlpha:i};return r==null?Ls((R,L,O)=>{const z=A.runKernel(Gi,I,S);return O([R,L,z]),{value:B(z,b),gradFunc:k}})($,x):Ls((R,L,O,z)=>{const M=A.runKernel(Gi,I,S);return z([R,L,M,O]),{value:B(M,b),gradFunc:k}})($,x,w)}const Xu=F({fusedMatMul_:UN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GN(n,t,e,s,r="bilinear",o=0){const a=T(n,"image","cropAndResize"),i=T(t,"boxes","cropAndResize","float32"),l=T(e,"boxInd","cropAndResize","int32"),c=i.shape[0];N(a.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${a.rank}.`),N(i.rank===2&&i.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${c},4] but had shape ${i.shape}.`),N(l.rank===1&&l.shape[0]===c,()=>`Error in cropAndResize: boxInd must be have size [${c}] but had shape ${i.shape}.`),N(s.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${s.length}.`),N(s[0]>=1&&s[1]>=1,()=>`cropSize must be atleast [1,1], but was ${s}`),N(r==="bilinear"||r==="nearest",()=>`method must be bilinear or nearest, but was ${r}`);const u={image:a,boxes:i,boxInd:l},h={method:r,extrapolationValue:o,cropSize:s};return A.runKernel(zh,u,h)}const HN=F({cropAndResize_:GN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jN(n){const t=T(n,"image","flipLeftRight","float32");N(t.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`);const e={image:t};return A.runKernel(jh,e,{})}const qN=F({flipLeftRight_:jN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KN(n,t,e=0,s=.5){const r=T(n,"image","rotateWithOffset","float32");N(r.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${r.rank}.`);const o={image:r},a={radians:t,fillValue:e,center:s};return A.runKernel(yd,o,a)}const XN=F({rotateWithOffset_:KN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function so(n,t,e,s,r,o){s==null&&(s=.5),r==null&&(r=Number.NEGATIVE_INFINITY),o==null&&(o=0);const a=n.shape[0];return e=Math.min(e,a),N(0<=s&&s<=1,()=>`iouThreshold must be in [0, 1], but was '${s}'`),N(n.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${n.rank}'`),N(n.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${n.shape[1]}`),N(t.rank===1,()=>"scores must be a 1D tensor"),N(t.shape[0]===a,()=>`scores has incompatible shape with boxes. Expected ${a}, but was ${t.shape[0]}`),N(0<=o&&o<=1,()=>`softNmsSigma must be in [0, 1], but was '${o}'`),{maxOutputSize:e,iouThreshold:s,scoreThreshold:r,softNmsSigma:o}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YN(n,t,e,s=.5,r=Number.NEGATIVE_INFINITY){const o=T(n,"boxes","nonMaxSuppression"),a=T(t,"scores","nonMaxSuppression"),i=so(o,a,e,s,r);e=i.maxOutputSize,s=i.iouThreshold,r=i.scoreThreshold;const l={maxOutputSize:e,iouThreshold:s,scoreThreshold:r};return A.runKernel(nd,{boxes:o,scores:a},l)}const JN=F({nonMaxSuppression_:YN});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZN(n,t,e){const s=QN(n,t,e),r=s<0?-(s+1):s;n.splice(r,0,t)}function QN(n,t,e){return eI(n,t,e||tI)}function tI(n,t){return n>t?1:n<t?-1:0}function eI(n,t,e){let s=0,r=n.length,o=0,a=!1;for(;s<r;){o=s+(r-s>>>1);const i=e(t,n[o]);i>0?s=o+1:(r=o,a=!i)}return a?s:-s-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rp(n,t,e,s,r){return ip(n,t,e,s,r,0)}function op(n,t,e,s,r,o){return ip(n,t,e,s,r,0,!1,o,!0)}function ap(n,t,e,s,r,o){return ip(n,t,e,s,r,o,!0)}function ip(n,t,e,s,r,o,a=!1,i=!1,l=!1){const c=[];for(let g=0;g<t.length;g++)t[g]>r&&c.push({score:t[g],boxIndex:g,suppressBeginIndex:0});c.sort(Gf);const u=o>0?-.5/o:0,h=[],d=[];for(;h.length<e&&c.length>0;){const g=c.pop(),{score:y,boxIndex:b,suppressBeginIndex:$}=g;if(y<r)break;let x=!1;for(let w=h.length-1;w>=$;--w){const C=nI(n,b,h[w]);if(C>=s){x=!0;break}if(g.score=g.score*sI(s,u,C),g.score<=r)break}g.suppressBeginIndex=h.length,x||(g.score===y?(h.push(b),d.push(g.score)):g.score>r&&ZN(c,g,Gf))}const p=h.length,f=e-p;i&&f>0&&(h.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));const m={selectedIndices:h};return a&&(m.selectedScores=d),l&&(m.validOutputs=p),m}function nI(n,t,e){const s=n.subarray(t*4,t*4+4),r=n.subarray(e*4,e*4+4),o=Math.min(s[0],s[2]),a=Math.min(s[1],s[3]),i=Math.max(s[0],s[2]),l=Math.max(s[1],s[3]),c=Math.min(r[0],r[2]),u=Math.min(r[1],r[3]),h=Math.max(r[0],r[2]),d=Math.max(r[1],r[3]),p=(i-o)*(l-a),f=(h-c)*(d-u);if(p<=0||f<=0)return 0;const m=Math.max(o,c),g=Math.max(a,u),y=Math.min(i,h),b=Math.min(l,d),$=Math.max(y-m,0)*Math.max(b-g,0);return $/(p+f-$)}function sI(n,t,e){const s=Math.exp(t*e*e);return e<=n?s:0}function Gf(n,t){return n.score-t.score||n.score===t.score&&t.boxIndex-n.boxIndex}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function rI(n,t,e,s=.5,r=Number.NEGATIVE_INFINITY){const o=T(n,"boxes","nonMaxSuppressionAsync"),a=T(t,"scores","nonMaxSuppressionAsync"),i=so(o,a,e,s,r);e=i.maxOutputSize,s=i.iouThreshold,r=i.scoreThreshold;const l=await Promise.all([o.data(),a.data()]),c=l[0],u=l[1],{selectedIndices:h}=rp(c,u,e,s,r);return o!==n&&o.dispose(),a!==t&&a.dispose(),qn(h,"int32")}const oI=rI;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aI(n,t,e,s=.5,r=Number.NEGATIVE_INFINITY,o=0){const a=T(n,"boxes","nonMaxSuppression"),i=T(t,"scores","nonMaxSuppression"),l=so(a,i,e,s,r,o);e=l.maxOutputSize,s=l.iouThreshold,r=l.scoreThreshold,o=l.softNmsSigma;const c={boxes:a,scores:i},u={maxOutputSize:e,iouThreshold:s,scoreThreshold:r,softNmsSigma:o},h=A.runKernel(rd,c,u);return{selectedIndices:h[0],selectedScores:h[1]}}const iI=F({nonMaxSuppressionWithScore_:aI});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function lI(n,t,e,s=.5,r=Number.NEGATIVE_INFINITY,o=0){const a=T(n,"boxes","nonMaxSuppressionAsync"),i=T(t,"scores","nonMaxSuppressionAsync"),l=so(a,i,e,s,r,o);e=l.maxOutputSize,s=l.iouThreshold,r=l.scoreThreshold,o=l.softNmsSigma;const c=await Promise.all([a.data(),i.data()]),u=c[0],h=c[1],{selectedIndices:d,selectedScores:p}=ap(u,h,e,s,r,o);return a!==n&&a.dispose(),i!==t&&i.dispose(),{selectedIndices:qn(d,"int32"),selectedScores:qn(p)}}const cI=lI;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uI(n,t,e,s=.5,r=Number.NEGATIVE_INFINITY,o=!1){const a=T(n,"boxes","nonMaxSuppression"),i=T(t,"scores","nonMaxSuppression"),l=so(a,i,e,s,r,null),c=l.maxOutputSize,u=l.iouThreshold,h=l.scoreThreshold,d={boxes:a,scores:i},p={maxOutputSize:c,iouThreshold:u,scoreThreshold:h,padToMaxOutputSize:o},f=A.runKernel(sd,d,p);return{selectedIndices:f[0],validOutputs:f[1]}}const hI=F({nonMaxSuppressionPadded_:uI});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function dI(n,t,e,s=.5,r=Number.NEGATIVE_INFINITY,o=!1){const a=T(n,"boxes","nonMaxSuppressionAsync"),i=T(t,"scores","nonMaxSuppressionAsync"),l=so(a,i,e,s,r,null),c=l.maxOutputSize,u=l.iouThreshold,h=l.scoreThreshold,[d,p]=await Promise.all([a.data(),i.data()]),{selectedIndices:f,validOutputs:m}=op(d,p,c,u,h,o);return a!==n&&a.dispose(),i!==t&&i.dispose(),{selectedIndices:qn(f,"int32"),validOutputs:Nt(m,"int32")}}const pI=dI;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fI(n,t,e=!1,s=!1){const r=T(n,"images","resizeBilinear");N(r.rank===3||r.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${r.rank}.`),N(t.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`),N(s===!1||e===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let o=r,a=!1;r.rank===3&&(a=!0,o=B(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const i={images:o},l={alignCorners:e,halfPixelCenters:s,size:t},c=A.runKernel(lc,i,l);return a?B(c,[c.shape[1],c.shape[2],c.shape[3]]):c}const rb=F({resizeBilinear_:fI});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mI(n,t,e=!1,s=!1){const r=T(n,"images","resizeNearestNeighbor");N(r.rank===3||r.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${r.rank}.`),N(t.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`),N(r.dtype==="float32"||r.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),N(s===!1||e===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let o=r,a=!1;r.rank===3&&(a=!0,o=B(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const i={images:o},l={alignCorners:e,halfPixelCenters:s,size:t},c=A.runKernel(ic,i,l);return a?B(c,[c.shape[1],c.shape[2],c.shape[3]]):c}const ob=F({resizeNearestNeighbor_:mI});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gI(n,t,e="nearest",s="constant",r=0,o){const a=T(n,"image","transform","float32"),i=T(t,"transforms","transform","float32");N(a.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${a.rank}.`),N(i.rank===2&&(i.shape[0]===a.shape[0]||i.shape[0]===1)&&i.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),N(o==null||o.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${o}.`);const l={image:a,transforms:i},c={interpolation:e,fillMode:s,fillValue:r,outputShape:o};return A.runKernel(md,l,c)}const yI=F({transform_:gI});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bI(n,t,e){N(t%1===0,()=>`bandPart(): numLower must be an integer, got ${t}.`),N(e%1===0,()=>`bandPart(): numUpper must be an integer, got ${e}.`);const s=T(n,"a","bandPart");N(s.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${s.rank}.`);const r=s.shape,[o,a]=s.shape.slice(-2);if(!(t<=o))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${o}).`);if(!(e<=a))throw new Error(`bandPart(): numUpper (${e}) must not be greater than the number of columns (${a}).`);t<0&&(t=o),e<0&&(e=a);const i=B(qu(0,o,1,"int32"),[-1,1]),l=qu(0,a,1,"int32"),c=xt(i,l),u=as(eo(c,Nt(+t,"int32")),wr(c,Nt(-e,"int32"))),h=xe([o,a],s.dtype);return B(Fn(Kn(B(s,[-1,o,a])).map(d=>bn(u,d,h))),r)}const xI=F({bandPart_:bI});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wI(n){let t;if(Array.isArray(n)){t=!1,N(n!=null&&n.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const r=n[0].shape[0];for(let o=1;o<n.length;++o)N(n[o].shape[0]===r,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${n[o].shape[0]} vs. ${r})`)}else t=!0,n=gn(n,n.shape[0],0).map(r=>Gr(r,[0]));N(n.length<=n[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${n.length}) exceeds number of dimensions (${n[0].shape[0]}).`);const e=[],s=n;for(let r=0;r<n.length;++r)e.push(A.tidy(()=>{let o=s[r];if(r>0)for(let a=0;a<r;++a){const i=P(bt(P(e[a],o)),e[a]);o=xt(o,i)}return gt(o,np(o,"euclidean"))}));return t?Fn(e,0):e}const vI=F({gramSchmidt_:wI});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $I(n,t=!1){if(N(n.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${n.rank}`),n.rank===2)return Hf(n,t);{const e=n.shape.slice(0,n.shape.length-2).reduce((l,c)=>l*c),s=Kn(B(n,[e,n.shape[n.shape.length-2],n.shape[n.shape.length-1]]),0),r=[],o=[];s.forEach(l=>{const[c,u]=Hf(l,t);r.push(c),o.push(u)});const a=B(Fn(r,0),n.shape),i=B(Fn(o,0),n.shape);return[a,i]}}function Hf(n,t=!1){return A.tidy(()=>{N(n.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${n.shape.length}D Tensor.`);const e=n.shape[0],s=n.shape[1];let r=Ry(e),o=sr(n);const a=Ei([[1]],[1,1]);let i=sr(a);const l=e>=s?s:e;for(let c=0;c<l;++c){const u=o,h=i,d=r;[i,o,r]=A.tidy(()=>{const p=Qt(o,[c,c],[e-c,1]),f=np(p),m=Qt(o,[c,c],[1,1]),g=bn(ls(m,0),Ei([[-1]]),Ei([[1]])),y=xt(m,P(g,f)),b=gt(p,y);b.shape[0]===1?i=sr(a):i=Ue([a,Qt(b,[1,0],[b.shape[0]-1,b.shape[1]])],0);const $=Ie(gt(Wt(g,y),f)),x=Qt(o,[c,0],[e-c,s]),w=P($,i),C=Kt(i);if(c===0)o=xt(x,Wt(w,Wt(C,x)));else{const S=xt(x,Wt(w,Wt(C,x)));o=Ue([Qt(o,[0,0],[c,s]),S],0)}const k=Kt(w),I=Qt(r,[0,c],[e,r.shape[1]-c]);if(c===0)r=xt(I,Wt(Wt(I,i),k));else{const S=xt(I,Wt(Wt(I,i),k));r=Ue([Qt(r,[0,0],[e,c]),S],1)}return[i,o,r]}),$t([u,h,d])}return!t&&e>s&&(r=Qt(r,[0,0],[e,s]),o=Qt(o,[0,0],[s,s])),[r,o]})}const kI=F({qr_:$I});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ar={flipLeftRight:qN,resizeNearestNeighbor:ob,resizeBilinear:rb,rotateWithOffset:XN,cropAndResize:HN,nonMaxSuppression:JN,nonMaxSuppressionAsync:oI,nonMaxSuppressionWithScore:iI,nonMaxSuppressionWithScoreAsync:cI,nonMaxSuppressionPadded:hI,nonMaxSuppressionPaddedAsync:pI,transform:yI},CI={bandPart:xI,gramSchmidt:vI,qr:kI};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Hs extends Qr{minimize(t,e=!1,s){const{value:r,grads:o}=this.computeGradients(t,s);if(s!=null){const a=s.map(i=>({name:i.name,tensor:o[i.name]}));this.applyGradients(a)}else this.applyGradients(o);return $t(o),e?r:(r.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(t,e){return _k(t,e)}dispose(){this.iterations_!=null&&$t(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:Nt(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(t){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(t){return this.iterations_=(await t[0].tensor.data())[0],t.slice(1)}}Object.defineProperty(Hs,Symbol.hasInstance,{value:n=>n.minimize!=null&&n.computeGradients!=null&&n.applyGradients!=null});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class lp extends Hs{constructor(t,e,s=null){super(),this.learningRate=t,this.rho=e,this.epsilon=s,this.accumulatedGrads=[],this.accumulatedUpdates=[],s==null&&(this.epsilon=A.backend.epsilon())}applyGradients(t){(Array.isArray(t)?t.map(s=>s.name):Object.keys(t)).forEach((s,r)=>{const o=A.registeredVariables[s],a=!1;this.accumulatedGrads[r]==null&&(this.accumulatedGrads[r]={originalName:`${s}/accum_grad`,variable:_(()=>Ot(o).variable(a))}),this.accumulatedUpdates[r]==null&&(this.accumulatedUpdates[r]={originalName:`${s}/accum_var`,variable:_(()=>Ot(o).variable(a))});const i=Array.isArray(t)?t[r].tensor:t[s];if(i==null)return;const l=this.accumulatedGrads[r].variable,c=this.accumulatedUpdates[r].variable;_(()=>{const u=nt(P(l,this.rho),P(se(i),1-this.rho)),h=P(gt(Xe(nt(c,this.epsilon)),Xe(nt(l,this.epsilon))),i),d=nt(P(c,this.rho),P(se(h),1-this.rho));l.assign(u),c.assign(d);const p=nt(P(h,-this.learningRate),o);o.assign(p)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&($t(this.accumulatedGrads.map(t=>t.variable)),$t(this.accumulatedUpdates.map(t=>t.variable)))}async getWeights(){const t=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(t.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(t){t=await this.extractIterations(t);const e=t.length/2,s=!1;this.accumulatedGrads=t.slice(0,e).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.accumulatedUpdates=t.slice(e,e*2).map(r=>({originalName:r.name,variable:r.tensor.variable(s)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.rho,e.epsilon)}}lp.className="Adadelta";Y(lp);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cp extends Hs{constructor(t,e=.1){super(),this.learningRate=t,this.initialAccumulatorValue=e,this.accumulatedGrads=[]}applyGradients(t){(Array.isArray(t)?t.map(s=>s.name):Object.keys(t)).forEach((s,r)=>{const o=A.registeredVariables[s];this.accumulatedGrads[r]==null&&(this.accumulatedGrads[r]={originalName:`${s}/accumulator`,variable:_(()=>Pd(o.shape,this.initialAccumulatorValue).variable(!1))});const a=Array.isArray(t)?t[r].tensor:t[s];if(a==null)return;const i=this.accumulatedGrads[r].variable;_(()=>{const l=nt(i,se(a));i.assign(l);const c=nt(P(gt(a,Xe(nt(l,A.backend.epsilon()))),-this.learningRate),o);o.assign(c)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&$t(this.accumulatedGrads.map(t=>t.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t);const e=!1;this.accumulatedGrads=t.map(s=>({originalName:s.name,variable:s.tensor.variable(e)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(t,e){return new t(e.learningRate,e.initialAccumulatorValue)}}cp.className="Adagrad";Y(cp);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class up extends Hs{constructor(t,e,s,r=null){super(),this.learningRate=t,this.beta1=e,this.beta2=s,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],_(()=>{this.accBeta1=Nt(e).variable(),this.accBeta2=Nt(s).variable()}),r==null&&(this.epsilon=A.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map(s=>s.name):Object.keys(t);_(()=>{const s=xt(1,this.accBeta1),r=xt(1,this.accBeta2);e.forEach((o,a)=>{const i=A.registeredVariables[o],l=!1;this.accumulatedFirstMoment[a]==null&&(this.accumulatedFirstMoment[a]={originalName:`${o}/m`,variable:_(()=>Ot(i).variable(l))}),this.accumulatedSecondMoment[a]==null&&(this.accumulatedSecondMoment[a]={originalName:`${o}/v`,variable:_(()=>Ot(i).variable(l))});const c=Array.isArray(t)?t[a].tensor:t[o];if(c==null)return;const u=this.accumulatedFirstMoment[a].variable,h=this.accumulatedSecondMoment[a].variable,d=nt(P(u,this.beta1),P(c,1-this.beta1)),p=nt(P(h,this.beta2),P(se(c),1-this.beta2)),f=gt(d,s),m=gt(p,r);u.assign(d),h.assign(p);const g=nt(P(gt(f,nt(Xe(m),this.epsilon)),-this.learningRate),i);i.assign(g)}),this.accBeta1.assign(P(this.accBeta1,this.beta1)),this.accBeta2.assign(P(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&$t(this.accumulatedFirstMoment.map(t=>t.variable)),this.accumulatedSecondMoment!=null&&$t(this.accumulatedSecondMoment.map(t=>t.variable))}async getWeights(){const t=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(t.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(t){t=await this.extractIterations(t),_(()=>{this.accBeta1.assign(pr(this.beta1,this.iterations_+1)),this.accBeta2.assign(pr(this.beta2,this.iterations_+1))});const e=t.length/2,s=!1;this.accumulatedFirstMoment=t.slice(0,e).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.accumulatedSecondMoment=t.slice(e,e*2).map(r=>({originalName:r.name,variable:r.tensor.variable(s)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon)}}up.className="Adam";Y(up);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hp extends Hs{constructor(t,e,s,r=null,o=0){super(),this.learningRate=t,this.beta1=e,this.beta2=s,this.epsilon=r,this.decay=o,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],_(()=>{this.iteration=Nt(0).variable(),this.accBeta1=Nt(e).variable()}),r==null&&(this.epsilon=A.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map(s=>s.name):Object.keys(t);_(()=>{const s=xt(1,this.accBeta1),r=gt(-this.learningRate,nt(P(this.iteration,this.decay),1));e.forEach((o,a)=>{const i=A.registeredVariables[o],l=!1;this.accumulatedFirstMoment[a]==null&&(this.accumulatedFirstMoment[a]={originalName:`${o}/m`,variable:Ot(i).variable(l)}),this.accumulatedWeightedInfNorm[a]==null&&(this.accumulatedWeightedInfNorm[a]={originalName:`${o}/v`,variable:Ot(i).variable(l)});const c=Array.isArray(t)?t[a].tensor:t[o];if(c==null)return;const u=this.accumulatedFirstMoment[a].variable,h=this.accumulatedWeightedInfNorm[a].variable,d=nt(P(u,this.beta1),P(c,1-this.beta1)),p=P(h,this.beta2),f=Ze(c),m=ks(p,f);u.assign(d),h.assign(m);const g=nt(P(gt(r,s),gt(d,nt(m,this.epsilon))),i);i.assign(g)}),this.iteration.assign(nt(this.iteration,1)),this.accBeta1.assign(P(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&$t(this.accumulatedFirstMoment.map(t=>t.variable)),this.accumulatedWeightedInfNorm!=null&&$t(this.accumulatedWeightedInfNorm.map(t=>t.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(t){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon,e.decay)}}hp.className="Adamax";Y(hp);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Lc extends Hs{constructor(t){super(),this.learningRate=t,this.setLearningRate(t)}applyGradients(t){(Array.isArray(t)?t.map(s=>s.name):Object.keys(t)).forEach((s,r)=>{const o=Array.isArray(t)?t[r].tensor:t[s];if(o==null)return;const a=A.registeredVariables[s];_(()=>{const i=nt(P(this.c,o),a);a.assign(i)})}),this.incrementIterations()}setLearningRate(t){this.learningRate=t,this.c!=null&&this.c.dispose(),this.c=Ve(Nt(-t))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(t){if(t=await this.extractIterations(t),t.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(t,e){return new t(e.learningRate)}}Lc.className="SGD";Y(Lc);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class dp extends Lc{constructor(t,e,s=!1){super(t),this.learningRate=t,this.momentum=e,this.useNesterov=s,this.accumulations=[],this.m=Nt(this.momentum)}applyGradients(t){(Array.isArray(t)?t.map(s=>s.name):Object.keys(t)).forEach((s,r)=>{const o=A.registeredVariables[s];this.accumulations[r]==null&&(this.accumulations[r]={originalName:`${s}/momentum`,variable:_(()=>Ot(o).variable(!1))});const a=this.accumulations[r].variable,i=Array.isArray(t)?t[r].tensor:t[s];i!=null&&_(()=>{let l;const c=nt(P(this.m,a),i);this.useNesterov?l=nt(P(this.c,nt(i,P(c,this.m))),o):l=nt(P(this.c,c),o),a.assign(c),o.assign(l)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&$t(this.accumulations.map(t=>t.variable))}setMomentum(t){this.momentum=t}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t);const e=!1;this.accumulations=t.map(s=>({originalName:s.name,variable:s.tensor.variable(e)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(t,e){return new t(e.learningRate,e.momentum,e.useNesterov)}}dp.className="Momentum";Y(dp);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class pp extends Hs{constructor(t,e=.9,s=0,r=null,o=!1){if(super(),this.learningRate=t,this.decay=e,this.momentum=s,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=o,r==null&&(this.epsilon=A.backend.epsilon()),t==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(t){(Array.isArray(t)?t.map(s=>s.name):Object.keys(t)).forEach((s,r)=>{const o=A.registeredVariables[s],a=!1;this.accumulatedMeanSquares[r]==null&&(this.accumulatedMeanSquares[r]={originalName:`${s}/rms`,variable:_(()=>Ot(o).variable(a))}),this.accumulatedMoments[r]==null&&(this.accumulatedMoments[r]={originalName:`${s}/momentum`,variable:_(()=>Ot(o).variable(a))}),this.accumulatedMeanGrads[r]==null&&this.centered&&(this.accumulatedMeanGrads[r]={originalName:`${s}/mg`,variable:_(()=>Ot(o).variable(a))});const i=Array.isArray(t)?t[r].tensor:t[s];if(i==null)return;const l=this.accumulatedMeanSquares[r].variable,c=this.accumulatedMoments[r].variable;_(()=>{const u=nt(P(l,this.decay),P(se(i),1-this.decay));if(this.centered){const h=this.accumulatedMeanGrads[r].variable,d=nt(P(h,this.decay),P(i,1-this.decay)),p=gt(P(i,this.learningRate),Xe(xt(u,nt(se(d),this.epsilon)))),f=nt(P(c,this.momentum),p);l.assign(u),h.assign(d),c.assign(f);const m=xt(o,f);o.assign(m)}else{const h=nt(P(l,this.decay),P(se(i),1-this.decay)),d=nt(P(c,this.momentum),gt(P(i,this.learningRate),Xe(nt(h,this.epsilon))));l.assign(h),c.assign(d);const p=xt(o,d);o.assign(p)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&$t(this.accumulatedMeanSquares.map(t=>t.variable)),this.accumulatedMeanGrads!=null&&this.centered&&$t(this.accumulatedMeanGrads.map(t=>t.variable)),this.accumulatedMoments!=null&&$t(this.accumulatedMoments.map(t=>t.variable))}async getWeights(){const t=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&t.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(t.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(t){t=await this.extractIterations(t);const e=this.centered?t.length/3:t.length/2,s=!1;this.accumulatedMeanSquares=t.slice(0,e).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.accumulatedMoments=t.slice(e,e*2).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.centered&&(this.accumulatedMeanGrads=t.slice(e*2,e*3).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(t,e){return new t(e.learningRate,e.decay,e.momentum,e.epsilon,e.centered)}}pp.className="RMSProp";Y(pp);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ks{static sgd(t){return new Lc(t)}static momentum(t,e,s=!1){return new dp(t,e,s)}static rmsprop(t,e=.9,s=0,r=null,o=!1){return new pp(t,e,s,r,o)}static adam(t=.001,e=.9,s=.999,r=null){return new up(t,e,s,r)}static adadelta(t=.001,e=.95,s=null){return new lp(t,e,s)}static adamax(t=.002,e=.9,s=.999,r=null,o=0){return new hp(t,e,s,r,o)}static adagrad(t,e=.1){return new cp(t,e)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Er={sgd:Ks.sgd,momentum:Ks.momentum,adadelta:Ks.adadelta,adagrad:Ks.adagrad,rmsprop:Ks.rmsprop,adamax:Ks.adamax,adam:Ks.adam};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NI=typeof requestAnimationFrame<"u"?requestAnimationFrame:typeof setImmediate<"u"?setImmediate:n=>n();function du(){return new Promise(n=>NI(()=>n()))}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fp(n,t){const e=n[0].length;n.forEach((r,o)=>{N(r.length===e,()=>`Error in concat${e}D: rank of tensors[${o}] must be the same as the rank of the rest (${e})`)}),N(t>=0&&t<e,()=>`Error in concat${e}D: axis must be between 0 and ${e-1}.`);const s=n[0];n.forEach((r,o)=>{for(let a=0;a<e;a++)N(a===t||r[a]===s[a],()=>`Error in concat${e}D: Shape of tensors[${o}] (${r}) does not match the shape of the rest (${s}) along the non-concatenated axis ${o}.`)})}function gs(n,t){const e=n[0].slice();for(let s=1;s<n.length;s++)e[t]+=n[s][t];return e}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mp=30;function Pc(n){return n<=mp?n:Fu(n,Math.floor(Math.sqrt(n)))}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gp(n,t,e){const s=e*(typeof n=="number"?n:n[0]),r=t*(typeof n=="number"?n:n[1]);return[s,r]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ha(n,t,e,s=!0){let r=[];if(s)r=r.concat(t.slice(0)),r.push(n[0]/e),r=r.concat(n.slice(1));else{r=r.concat(n[0]);const o=t.length;for(let a=0;a<o;++a)r=r.concat([n[a+1]/t[a],t[a]]);r=r.concat(n.slice(o+1))}return r}function ja(n,t,e=!0){const s=[];if(e){s.push(t);for(let r=t+1;r<n;++r)r<=2*t?(s.push(r),s.push(r-(t+1))):s.push(r)}else{const r=[],o=[];for(let a=1;a<n;++a)a>=t*2+1||a%2===1?o.push(a):r.push(a);s.push(...r),s.push(0),s.push(...o)}return s}function qa(n,t,e,s=!0){const r=[];s?r.push(n[0]/e):r.push(n[0]*e);for(let o=1;o<n.length;++o)o<=t.length?s?r.push(t[o-1]*n[o]):r.push(n[o]/t[o-1]):r.push(n[o]);return r}function yp(n,t){const e=[0];for(let s=0;s<t;++s)e.push(n[s][0]);return e}function bp(n,t,e){const s=n.slice(0,1);for(let r=0;r<e;++r)s.push(n[r+1]-t[r][0]-t[r][1]);return s}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zc=1.7580993408473768,Bc=1.0507009873554805;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xp=.3275911,wp=.254829592,vp=-.284496736,$p=1.421413741,kp=-1.453152027,Cp=1.061405429;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ro(...n){X().getBool("IS_TEST")||console.warn(...n)}function II(...n){X().getBool("IS_TEST")||console.log(...n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ws(n,t){if(n.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${n.length}, imag: ${t.length}.`);const e=new Float32Array(n.length*2);for(let s=0;s<e.length;s+=2)e[s]=n[s/2],e[s+1]=t[s/2];return e}function ab(n){const t=new Float32Array(n.length/2),e=new Float32Array(n.length/2);for(let s=0;s<n.length;s+=2)t[s/2]=n[s],e[s/2]=n[s+1];return{real:t,imag:e}}function ib(n){const t=Math.ceil(n.length/4),e=new Float32Array(t),s=new Float32Array(t);for(let r=0;r<n.length;r+=4)e[Math.floor(r/4)]=n[r],s[Math.floor(r/4)]=n[r+1];return{real:e,imag:s}}function lb(n){const t=Math.floor(n.length/4),e=new Float32Array(t),s=new Float32Array(t);for(let r=2;r<n.length;r+=4)e[Math.floor(r/4)]=n[r],s[Math.floor(r/4)]=n[r+1];return{real:e,imag:s}}function Np(n,t){const e=n[t*2],s=n[t*2+1];return{real:e,imag:s}}function cb(n,t,e,s){n[s*2]=t,n[s*2+1]=e}function ub(n,t){const e=new Float32Array(n/2),s=new Float32Array(n/2);for(let r=0;r<Math.ceil(n/2);r++){const o=(t?2:-2)*Math.PI*(r/n);e[r]=Math.cos(o),s[r]=Math.sin(o)}return{real:e,imag:s}}function hb(n,t,e){const s=(e?2:-2)*Math.PI*(n/t),r=Math.cos(s),o=Math.sin(s);return{real:r,imag:o}}function Ip(n,t,e=0){let s=[];if(typeof t=="number")N(n.shape[e]%t===0,()=>"Number of splits must evenly divide the axis."),s=new Array(t).fill(n.shape[e]/t);else{const r=t.reduce((a,i)=>(i===-1&&(a+=1),a),0);N(r<=1,()=>"There should be only one negative value in split array.");const o=t.indexOf(-1);if(o!==-1){const a=t.reduce((i,l)=>l>0?i+l:i);t[o]=n.shape[e]-a}N(n.shape[e]===t.reduce((a,i)=>a+i),()=>"The sum of sizes must match the size of the axis dimension."),s=t}return s}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function db(n,t){let e=!1,s;for(n<=mp?(s=n,e=!0):s=Fu(n,Math.floor(Math.sqrt(n)));!e;)s>t||s===n?e=!0:s=Fu(n,s+1);return s}function pb(n,t,e){const s=[],r=n.length;for(let o=0;o<r;o++)o!==t?s.push(n[o]):s.push(e);return s}function Sp(n,t,e,s){const r=t.shape.length,o=n.shape.length;if(s!==0&&(s<-r||s>r))throw new Error(`Expect batchDims in the range of [-${r}, ${r}], but got ${s}`);if(s<0&&(s+=r),s>o)throw new Error(`batchDims (${s}) must be less than rank(x) (
    ${o}).`);if(e<s)throw new Error(`batchDims (${s}) must be less than or equal to axis (${e}).`);for(let h=0;h<s;++h)if(n.shape[h]!==t.shape[h])throw new Error(`x.shape[${h}]: ${n.shape[h]} should be equal to indices.shape[${h}]: ${t.shape[h]}.`);const a=n.shape[e],i=[];let l=1,c=1,u=1;for(let h=0;h<s;++h)i.push(n.shape[h]),l*=n.shape[h];for(let h=s;h<e;h++)i.push(n.shape[h]),c*=n.shape[h];for(let h=s;h<r;h++)i.push(t.shape[h]);for(let h=e+1;h<o;h++)i.push(n.shape[h]),u*=n.shape[h];return{batchSize:l,sliceSize:u,outerSize:c,dimSize:a,outputShape:i}}const SI=Object.freeze(Object.defineProperty({__proto__:null,collectGatherOpShapeInfo:Sp,computeOutShape:pb,segOpComputeOptimalWindowSize:db},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tp(n){try{return n.map(t=>Vr(t))}catch(t){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${t}`)}}function fb(n){return n.map(t=>Oa(t))}const TI=Object.freeze(Object.defineProperty({__proto__:null,ERF_A1:wp,ERF_A2:vp,ERF_A3:$p,ERF_A4:kp,ERF_A5:Cp,ERF_P:xp,PARALLELIZE_THRESHOLD:mp,SELU_SCALE:Bc,SELU_SCALEALPHA:zc,applyActivation:Oc,assertAndGetBroadcastShape:Rt,assertAxesAreInnerMostDims:je,assertParamsConsistent:fp,assignToTypedArray:cb,axesAreInnerMostDims:Vd,calculateShapes:Pa,combineLocations:_y,complexWithEvenIndex:ib,complexWithOddIndex:lb,computeConv2DInfo:Pe,computeConv3DInfo:Us,computeDefaultPad:Ad,computeDilation2DInfo:za,computeOptimalWindowSize:Pc,computeOutAndReduceShapes:ze,computeOutShape:gs,computePool2DInfo:_n,computePool3DInfo:vs,convertConv2DDataFormat:$s,eitherStridesOrDilationsAreOne:He,expandShapeToKeepDim:we,exponent:hb,exponents:ub,fromStringArrayToUint8:fb,fromUint8ToStringArray:Tp,getAxesPermutation:ye,getBroadcastDims:Io,getComplexWithIndex:Np,getFusedBiasGradient:Fc,getFusedDyActivation:Rc,getImageCenter:gp,getInnerMostAxes:ve,getPermuted:ja,getReductionAxes:Ee,getReshaped:Ha,getReshapedPermuted:qa,getSliceBeginCoords:yp,getSliceSize:bp,getUndoAxesPermutation:no,log:II,mergeRealAndImagArrays:ws,prepareAndValidate:kd,prepareSplitSize:Ip,segment_util:SI,shouldFuse:_c,slice_util:Uv,splitRealAndImagArrays:ab,tupleValuesAreOne:Os,upcastType:yn,validateInput:ry,validateUpdateShape:sy,warn:ro},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mb={kernelName:xl,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>P(n,Ga(ut(e,"float32"),-1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EI={kernelName:Bo,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>{const s=se(ut(e,"float32")),r=Xe(xt(Nt(1),s));return Ie(gt(n,r))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AI={kernelName:Mo,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>{const s=Xe(xt(se(ut(e,"float32")),1));return gt(n,s)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DI={kernelName:Zr,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,r=Rt(e.shape,s.shape);return{a:()=>{let i=n;const l=Ee(e.shape,r);return l.length>0&&(i=bt(i,l)),B(i,e.shape)},b:()=>{let i=n;const l=Ee(s.shape,r);return l.length>0&&(i=bt(i,l)),B(i,s.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RI={kernelName:wl,saveAllInputs:!0,gradFunc:(n,t)=>{const e={};return t.forEach((s,r)=>{e[r]=()=>n.clone()}),e}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FI={kernelName:vl,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Ot(e)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OI={kernelName:$l,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Ot(e)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _I={kernelName:Vo,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>gt(n,Xe(xt(Nt(1),se(ut(e,"float32")))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LI={kernelName:Wo,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>{const s=Xe(nt(Nt(1),se(ut(e,"float32"))));return gt(n,s)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PI={kernelName:Ho,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,r=Rt(e.shape,s.shape);return{a:()=>{const i=nt(se(e),se(s));let l=P(n,gt(s,i));const c=Ee(e.shape,r);return c.length>0&&(l=bt(l,c)),B(l,e.shape)},b:()=>{const i=nt(se(e),se(s));let l=Ie(P(n,gt(e,i)));const c=Ee(s.shape,r);return c.length>0&&(l=bt(l,c)),B(l,s.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zI={kernelName:Uo,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>gt(n,nt(se(ut(e,"float32")),1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BI={kernelName:Go,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>gt(n,xt(Nt(1),se(ut(e,"float32"))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MI(n,t,e,s,r,o){const a=T(n,"dy","avgPool3dGrad"),i=T(t,"input","avgPool3dGrad");let l=a,c=i,u=!1;i.rank===4&&(u=!0,l=B(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]]),c=B(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),N(l.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`),N(c.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${c.rank}.`),o!=null&&N(Le(r),()=>`Error in avgPool3dGrad: pad must be an integer when using, dimRoundingMode ${o} but got pad ${r}.`);const h={dy:l,input:c},d={filterSize:e,strides:s,pad:r,dimRoundingMode:o},p=A.runKernel(Rh,h,d);return u?B(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}const VI=F({avgPool3dGrad_:MI});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WI={kernelName:Cl,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{filterSize:r,strides:o,pad:a,dimRoundingMode:i}=e;return{x:()=>VI(n,s,r,o,a,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UI(n,t,e,s,r){const o=T(n,"dy","avgPoolGrad"),a=T(t,"input","avgPoolGrad");N(a.rank===o.rank,()=>`Rank of input (${a.rank}) does not match rank of dy (${o.rank})`);let i=a,l=o,c=!1;a.rank===3&&(c=!0,i=B(a,[1,a.shape[0],a.shape[1],a.shape[2]]),l=B(o,[1,o.shape[0],o.shape[1],o.shape[2]])),N(l.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`),N(i.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${i.rank}.`);const u={dy:l,input:i},h={filterSize:e,strides:s,pad:r},d=A.runKernel(Dh,u,h);return c?B(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const GI=F({avgPoolGrad_:UI});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HI={kernelName:kl,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{filterSize:r,strides:o,pad:a}=e;return{x:()=>GI(n,s,r,o,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jI={kernelName:Nl,inputsToSave:["a","b"],gradFunc:(n,t,e)=>{const[s,r]=t,{transposeA:o,transposeB:a}=e;return!o&&!a?{a:()=>Wt(n,r,!1,!0),b:()=>Wt(s,n,!0,!1)}:!o&&a?{a:()=>Wt(n,r,!1,!1),b:()=>Wt(n,s,!0,!1)}:o&&!a?{a:()=>Wt(r,n,!1,!0),b:()=>Wt(s,n,!1,!1)}:{a:()=>Wt(r,n,!0,!0),b:()=>Wt(n,s,!0,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qI={kernelName:Il,gradFunc:(n,t,e)=>{const{blockShape:s,crops:r}=e;return{x:()=>Ec(n,s,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KI={kernelName:Mw,gradFunc:(n,t,e)=>{const s=e,r=s.inputShape,o=s.shape,a=Array.from(o);for(let l=r.length-1;l>=0;l--)if(r[l]===o[l])a[l]=1;else if(r[l]!==1)throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${o}].`);const i=[];for(let l=0;l<a.length;l++)a[l]>1&&i.push(l);return{x:()=>bt(n,i,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XI={kernelName:jo,gradFunc:n=>({x:()=>n.clone()})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YI={kernelName:qo,gradFunc:n=>({x:()=>Ot(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JI={kernelName:Ko,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{clipValueMin:r,clipValueMax:o}=e;return{x:()=>bn(as(wr(s,r),eo(s,o)),n,Ot(n))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZI={kernelName:Sl,inputsToSave:["x"],gradFunc:mb.gradFunc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QI={kernelName:Tl,saveAllInputs:!0,gradFunc:(n,t,e)=>{const s=t.map(l=>l.shape),{axis:r}=e,o=Et(r,t[0].shape)[0],a=s.map(l=>l[o]);return gn(n,a,o).map(l=>()=>l)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tS={kernelName:El,inputsToSave:["x","filter"],gradFunc:(n,t,e)=>{const[s,r]=t,{dilations:o,strides:a,pad:i,dataFormat:l}=e;return N(Os(o),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${o}'`),{x:()=>Fd(s.shape,n,r,a,i,l),filter:()=>sp(s,n,r.shape,a,i,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eS={kernelName:Al,inputsToSave:["dy","filter"],gradFunc:(n,t,e)=>{const[s,r]=t,{strides:o,pad:a,dataFormat:i,dimRoundingMode:l}=e;return{dy:()=>_s(n,r,o,a,i,1,l),filter:()=>sp(n,s,r.shape,o,a,i,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nS(n,t,e,s,r){let o=n;n.rank===4&&(o=B(n,[1,n.shape[0],n.shape[1],n.shape[2],n.shape[3]]));let a=t;a.rank===4&&(a=B(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),N(o.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${o.shape}.`),N(a.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${a.shape}.`),N(e.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${e}.`),N(o.shape[4]===e[3],()=>`Error in conv3dDerFilter: depth of input ${o.shape[4]}) must match input depth in filter (${e[3]}.`),N(a.shape[4]===e[4],()=>`Error in conv3dDerFilter: depth of dy (${a.shape[4]}) must match output depth for filter (${e[4]}).`);const i={x:o,dy:a},l={strides:s,pad:r,filterShape:e};return A.runKernel(Lh,i,l)}const sS=F({conv3DBackpropFilter_:nS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rS={kernelName:Dl,inputsToSave:["x","filter"],gradFunc:(n,t,e)=>{const{dilations:s,strides:r,pad:o}=e;N(Os(s),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);const[a,i]=t;return{x:()=>X$(a.shape,n,i,r,o),filter:()=>sS(a,n,i.shape,r,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oS={kernelName:Xo,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>P(Ie(Xd(ut(e,"float32"))),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aS={kernelName:Yo,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>P(Yd(ut(e,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iS={kernelName:Rl,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{axis:r,exclusive:o,reverse:a}=e;return{x:()=>{const i=ye([r],s.rank);let l=Ld(n,r,o,!a);return i!=null&&(l=Kt(l,i)),l}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lS={kernelName:Fl,inputsToSave:["x","filter"],gradFunc:(n,t,e)=>{const{dilations:s,strides:r,pad:o,dimRoundingMode:a}=e,i=s??[1,1];N(Os(i),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${i}'`);const[l,c]=t;return N(l.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`),N(c.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${c.rank}.`),N(l.shape[3]===c.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${c.shape[2]}.`),N(He(r,i),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${r} and dilations '${i}'.`),a!=null&&N(Le(o),()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${o}.`),{x:()=>sb(l.shape,n,c,r,o,s,a),filter:()=>nb(l,n,c.shape,r,o,s,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cS={kernelName:Ol,inputsToSave:["x","filter"],gradFunc:(n,t,e)=>{const[s,r]=t,o={x:s,filter:r,dy:n},a={x:s,filter:r,dy:n};return{x:()=>A.runKernel(Ou,o,e),filter:()=>A.runKernel(_u,a,e)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uS={kernelName:Zo,outputsToSave:[!0],gradFunc:(n,t)=>{const[e]=t,s={dy:n,y:e};return{x:()=>A.runKernel(Uh,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hS={kernelName:Qo,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t,s=P(bs(Ie(se(e))),2/Math.sqrt(Math.PI));return{x:()=>P(n,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dS={kernelName:ta,outputsToSave:[!0],gradFunc:(n,t)=>{const[e]=t;return{x:()=>P(n,e)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pS={kernelName:Ll,inputsToSave:["input"],gradFunc:(n,t)=>{const[e]=t;return{input:()=>B(n,e.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fS={kernelName:ea,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>P(n,bs(e))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mS={kernelName:na,gradFunc:n=>({x:()=>Ot(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gS={kernelName:sa,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,r=Rt(e.shape,s.shape);return{a:()=>{const i=gt(n,ut(s,"float32")),l=Ee(e.shape,r);return l.length>0?B(bt(i,l),e.shape):i},b:()=>{let i=P(n,ut(e,"float32"));const l=Ee(s.shape,r);l.length>0&&(i=B(bt(i,l),s.shape));const c=se(s);return Ie(gt(i,ut(c,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yS={kernelName:Pl,inputsToSave:["x","mean","variance","scale"],gradFunc:(n,t,e)=>{const{varianceEpsilon:s}=e,[r,o,a,i]=t,l=i??Nt(1),c=Ee(o.shape,r.shape),u=[];if(o.rank===1){for(let x=0;x<r.shape.length-1;++x)u.push(r.shape[x]);u.push(1)}const h=xt(r,o),d=P(n,l),p=qd(nt(a,Nt(s))),f=P(P(P(p,p),p),Nt(-.5));return{x:()=>o.rank===1?B(P(P(n,or(B(p,[1,1,1,o.shape[0]]),u)),l),r.shape):B(P(P(n,p),l),r.shape),mean:()=>{let x=P(P(p,Nt(-1)),d);return o.rank===1&&(x=bt(x,c)),B(x,o.shape)},variance:()=>{let x=P(P(f,h),d);return o.rank===1&&(x=bt(x,c)),B(x,o.shape)},scale:()=>{const x=P(h,p);let w=P(n,x);return o.rank===1&&(w=bt(w,c)),B(w,o.shape)},offset:()=>{let x=n;return o.rank===1&&(x=bt(x,c)),B(x,o.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bS={kernelName:zl,inputsToSave:["x","indices"],gradFunc:(n,t,e)=>{const[s,r]=t,{axis:o}=e,a=Et(o,s.shape)[0];return{x:()=>{const l=s.shape,c=r.size,u=l.slice(0,a),h=u.length,d=l.slice(o,l.length).slice(1),p=d.length,f=jf(0,h),m=jf(h+1,h+1+p),g=qf([u,[c],d]),y=B(n,g),b=B(r,[c]),$=qf([[h],f,m]),x=Kt(y,$);let w=Zy(x,b,s.shape[a]);const C=no($);return w=Kt(w,C),w},indices:()=>r}}};function jf(n,t){const e=[];for(let s=n;s<t;++s)e.push(s);return e}function qf(n){const t=[];for(let e=0;e<n.length;++e)for(let s=0;s<n[e].length;++s)t.push(n[e][s]);return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xS={kernelName:ra,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t;return{a:()=>Ot(e),b:()=>Ot(s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wS={kernelName:oa,gradFunc:n=>({x:()=>ut(n,"float32")})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vS={kernelName:aa,gradFunc:n=>({x:()=>Ot(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $S={kernelName:ia,gradFunc:n=>({x:()=>Ot(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kS={kernelName:la,gradFunc:n=>({x:()=>Ot(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CS={kernelName:Ml,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{alpha:r}=e,o=ls(s,0);return{x:()=>bn(o,n,P(n,r))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NS={kernelName:ua,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>gt(n,nt(e,1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IS={kernelName:ca,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>gt(n,ut(e,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SS={kernelName:Vw,inputsToSave:[],outputsToSave:[!0],gradFunc:(n,t,e)=>{const[s]=t,{axis:r}=e;return{logits:()=>{const a=bs(s);return xt(n,P(bt(n,r,!0),a))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TS(n,t,e,s=5,r=1,o=1,a=.5){const i={x:n,y:t,dy:e},l={depthRadius:s,bias:r,alpha:o,beta:a};return A.runKernel(Jh,i,l)}const ES=F({localResponseNormalizationBackprop_:TS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AS={kernelName:jl,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,t,e)=>{const[s,r]=t,{depthRadius:o,bias:a,alpha:i,beta:l}=e;return{x:()=>ES(s,r,n,o,a,i,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gb(n,t,e,s){return t.rank<e.rank&&(t=B(t,we(t.shape,s))),n.rank<e.rank&&(n=B(n,we(n.shape,s))),{x:()=>P(n,ut(xr(e,t),n.dtype))}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kf={kernelName:ql,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,t,e)=>{const s=e,{reductionIndices:r}=s,o=t[0],a=t[1],i=Et(r,o.shape),l=gb(n,a,o,i);return{x:()=>l.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DS={kernelName:ha,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t;return{a:()=>P(n,ut(wr(e,s),"float32")),b:()=>P(n,ut(Bd(e,s),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RS(n,t,e,s,r,o,a){const i=T(n,"dy","maxPool3dGrad"),l=T(t,"input","maxPool3dGrad"),c=T(e,"output","maxPool3dGrad");let u=i,h=l,d=c,p=!1;l.rank===4&&(p=!0,u=B(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),h=B(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),d=B(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]])),N(u.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`),N(h.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`),N(d.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${d.rank}.`),a!=null&&N(Le(o),()=>`Error in maxPool3dGrad: pad must be an integer when using, dimRoundingMode ${a} but got pad ${o}.`);const f={dy:u,input:h,output:d},m={filterSize:s,strides:r,pad:o,dimRoundingMode:a},g=A.runKernel(Qh,f,m);return p?B(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}const FS=F({maxPool3dGrad_:RS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OS={kernelName:Xl,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,t,e)=>{const[s,r]=t,{filterSize:o,strides:a,pad:i,dimRoundingMode:l}=e;return{x:()=>FS(n,s,r,o,a,i,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _S(n,t,e,s,r,o,a){const i=T(n,"dy","maxPoolGrad"),l=T(t,"input","maxPoolGrad"),c=T(e,"output","maxPoolGrad");N(l.rank===i.rank,()=>`Rank of input (${l.rank}) does not match rank of dy (${i.rank})`),N(i.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${i.rank}.`),N(l.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`),a!=null&&N(Le(o),()=>`Error in maxPoolGrad: pad must be an integer when using, dimRoundingMode ${a} but got pad ${o}.`);const u={dy:i,input:l,output:c},h={filterSize:s,strides:r,pad:o,dimRoundingMode:a};return A.runKernel(Zh,u,h)}const LS=F({maxPoolGrad_:_S});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PS={kernelName:Kl,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,t,e)=>{const[s,r]=t,{filterSize:o,strides:a,pad:i}=e;return{x:()=>LS(n,s,r,o,a,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zS={kernelName:Yl,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{axis:r}=e,o=Et(r,s.shape),i=ze(s.shape,o)[1],l=H(i);return{x:()=>{const u=s.shape.slice();o.forEach(p=>{u[p]=1});const h=B(n,u);return gt(P(h,Gs(s.shape,"float32")),l)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BS={kernelName:Jl,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,t,e)=>{const s=e,{axis:r}=s,[o,a]=t,i=Et(r,o.shape),l=gb(n,a,o,i);return{x:()=>l.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MS={kernelName:da,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t;return{a:()=>P(n,ut(eo(e,s),"float32")),b:()=>P(n,ut(ls(e,s),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VS={kernelName:Zl,inputsToSave:["x"],gradFunc:(n,t,e)=>{const s=t[0],{paddings:r}=e,o=r.map(a=>a[0]);return{x:()=>Qt(n,o,s.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WS={kernelName:pa,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,r=Rt(e.shape,s.shape);return{a:()=>{const i=Ee(e.shape,r);return i.length>0?B(bt(n,i),e.shape):n},b:()=>{const i=P(n,Ie(Va(gt(e,s)))),l=Ee(s.shape,r);return l.length>0?B(bt(i,l),s.shape):i}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const US={kernelName:fa,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,r=Rt(e.shape,s.shape);return{a:()=>{const i=P(n,ut(s,"float32")),l=Ee(e.shape,r);return l.length>0?B(bt(i,l),e.shape):i},b:()=>{const i=P(n,ut(e,"float32")),l=Ee(s.shape,r);return l.length>0?B(bt(i,l),s.shape):i}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GS={kernelName:Ql,gradFunc:n=>({x:()=>Ie(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HS={kernelName:nc,inputsToSave:["indices"],gradFunc:(n,t)=>{const e=t[0];return{indices:()=>xe(e.shape,"float32")}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jS={kernelName:ec,gradFunc:n=>({x:()=>Ot(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qS={kernelName:sc,saveAllInputs:!0,gradFunc:(n,t,e)=>{const{axis:s}=e;return Kn(n,s).map(o=>()=>o)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xf={kernelName:rc,inputsToSave:["x"],gradFunc:(n,t,e)=>{const s=t[0],{paddings:r}=e,o=r.map(a=>a[0]);return{x:()=>Qt(n,o,s.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KS={kernelName:ma,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(n,t)=>{const[e,s,r]=t,o=e,a=s,i=Rt(o.shape,a.shape);return{a:()=>{const u=ut(a,"float32");let h=P(n,P(u,pr(o,xt(u,Nt(1)))));const d=Ee(o.shape,i);return d.length>0&&(h=bt(h,d)),B(h,o.shape)},b:()=>{const u=ls(o,0),h=bn(u,jn(o),Ot(o));let d=P(n,P(r,h));const p=Ee(a.shape,i);return p.length>0&&(d=bt(d,p)),B(d,a.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XS={kernelName:oc,inputsToSave:["x","alpha"],gradFunc:(n,t)=>{const[e,s]=t,r=ls(e,0);return{x:()=>bn(r,n,P(n,s)),alpha:()=>{let o=bn(r,Ot(n),P(n,e));const a=Ee(s.shape,n.shape);return a.length>0&&(o=bt(o,a)),B(o,s.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YS={kernelName:Jo,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,r=Rt(e.shape,s.shape);return{a:()=>{const i=gt(n,ut(s,"float32")),l=Ee(e.shape,r);return l.length>0?B(bt(i,l),e.shape):i},b:()=>{let i=P(n,ut(e,"float32"));const l=Ee(s.shape,r);l.length>0&&(i=B(bt(i,l),s.shape));const c=se(s);return Ie(gt(i,ut(c,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JS={kernelName:ga,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>gt(n,Ie(se(e)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZS={kernelName:ba,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t,s=P(eo(e,6),Ga(e));return{x:()=>P(n,ut(s,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QS={kernelName:ya,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>P(n,ut(Ga(e),"float32"))}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tT={kernelName:ac,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>B(n,e.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eT={kernelName:lc,inputsToSave:["images"],gradFunc:(n,t,e)=>{const[s]=t,r={dy:n,images:s};return{images:()=>A.runKernel(cd,r,e)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nT={kernelName:ic,inputsToSave:["images"],gradFunc:(n,t,e)=>{const[s]=t,r={dy:n,images:s};return{images:()=>A.runKernel(ld,r,e)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sT={kernelName:cc,gradFunc:(n,t,e)=>{const{dims:s}=e,r=Et(s,n.shape);return{x:()=>xs(n,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rT={kernelName:xa,gradFunc:n=>({x:()=>Ot(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oT={kernelName:wa,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Ie(gt(n,P(pr(e,1.5),2)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aT={kernelName:uc,inputsToSave:["condition"],gradFunc:(n,t)=>{const[e]=t;return{condition:()=>ut(Ot(e),"float32"),t:()=>P(n,ut(e,n.dtype)),e:()=>P(n,ut(Nc(e),n.dtype))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iT={kernelName:va,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>{const s=ls(e,Nt(0)),r=Nt(zc),o=Nt(Bc),a=P(n,o),i=P(P(n,r),bs(ut(e,"float32")));return bn(s,a,i)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lT={kernelName:Na,outputsToSave:[!0],gradFunc:(n,t)=>{const[e]=t;return{x:()=>P(n,P(e,xt(Nt(1),e)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cT={kernelName:Ca,gradFunc:n=>({x:()=>Ot(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uT={kernelName:$a,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>P(kc(ut(e,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hT={kernelName:ka,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>P(_d(ut(e,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dT={kernelName:hc,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{begin:r,size:o}=e,a=s.shape,[i,l]=wc(s,r,o),c=[];for(let u=0;u<n.rank;u++)c.push([i[u],a[u]-i[u]-l[u]]);return{x:()=>Tc(n,c)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pT={kernelName:mc,outputsToSave:[!0],gradFunc:(n,t,e)=>{const[s]=t,{dim:r}=e,o=!0,a=P(n,s);return{logits:()=>xt(a,P(bt(a,[r],o),s))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fT={kernelName:Ia,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>P(n,to(e))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yf={kernelName:pc,gradFunc:(n,t,e)=>{const{blockShape:s,paddings:r}=e;return{x:()=>$c(n,s,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jf={kernelName:fc,gradFunc:(n,t,e)=>{const{axis:s}=e;return{x:()=>Ue(n,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mT={kernelName:Sa,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>gt(n,P(Xe(ut(e,"float32")),2))}}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gT={kernelName:hd,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>P(n,P(ut(e,"float32"),2))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yT={kernelName:Ta,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,r=Nt(2);return{a:()=>P(n,P(r,xt(e,s))),b:()=>P(n,P(r,xt(s,e)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bT={kernelName:Fa,gradFunc:n=>({x:()=>Ot(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xT={kernelName:Ea,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,r=Rt(e.shape,s.shape);return{a:()=>{let i=n;const l=Ee(e.shape,r);return l.length>0&&(i=bt(i,l)),B(i,e.shape)},b:()=>{let i=n;const l=Ee(s.shape,r);return l.length>0&&(i=bt(i,l)),B(Ie(i),s.shape)}}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wT={kernelName:dc,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,r=s.shape.slice(),{axis:o}=e;Et(o,s.shape).forEach(c=>{r[c]=1});const i=B(n,r),l=P(i,Gs(s.shape,"float32"));return{x:()=>l}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vT={kernelName:Aa,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>gt(n,se(kc(e)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $T={kernelName:Da,outputsToSave:[!0],gradFunc:(n,t)=>{const[e]=t;return{x:()=>P(xt(Nt(1),se(e)),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kT={kernelName:Ra,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{reps:r}=e;return{x:()=>{let a=Ot(s);if(s.rank===1)for(let i=0;i<r[0];++i)a=nt(a,Qt(n,[i*s.shape[0]],[s.shape[0]]));else if(s.rank===2)for(let i=0;i<r[0];++i)for(let l=0;l<r[1];++l)a=nt(a,Qt(n,[i*s.shape[0],l*s.shape[1]],[s.shape[0],s.shape[1]]));else if(s.rank===3)for(let i=0;i<r[0];++i)for(let l=0;l<r[1];++l)for(let c=0;c<r[2];++c)a=nt(a,Qt(n,[i*s.shape[0],l*s.shape[1],c*s.shape[2]],[s.shape[0],s.shape[1],s.shape[2]]));else if(s.rank===4)for(let i=0;i<r[0];++i)for(let l=0;l<r[1];++l)for(let c=0;c<r[2];++c)for(let u=0;u<r[3];++u)a=nt(a,Qt(n,[i*s.shape[0],l*s.shape[1],c*s.shape[2],u*s.shape[3]],[s.shape[0],s.shape[1],s.shape[2],s.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${s.rank} tensors yet.`);return a}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CT={kernelName:gc,gradFunc:(n,t,e)=>{const s=e,{perm:r}=s,o=no(r);return{x:()=>Kt(n,o)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NT={kernelName:yc,gradFunc:(n,t,e)=>{const s=e,{axis:r}=s;return{value:()=>Fn(n,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IT={kernelName:bc,inputsToSave:["segmentIds"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>ST(n,e)}}};function ST(n,t){const e=ks(t,Ot(t)),s=So(n,e);let r=wr(t,Nt(0,"int32"));const o=s.rank-r.rank;for(let i=0;i<o;++i)r=Sn(r,i+1);r=as(r,Gs(s.shape,"bool"));const a=Ot(s);return bn(r,s,a)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TT={kernelName:xc,gradFunc:n=>({x:()=>Ot(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ET=[mb,EI,AI,DI,RI,FI,OI,_I,LI,PI,zI,BI,WI,HI,jI,qI,KI,XI,YI,JI,ZI,QI,eS,tS,rS,oS,aS,iS,lS,cS,YS,uS,hS,dS,pS,fS,gS,mS,yS,bS,xS,wS,vS,$S,kS,CS,NS,IS,SS,AS,Kf,Kf,DS,OS,PS,zS,BS,MS,VS,WS,US,GS,HS,jS,qS,Xf,Xf,KS,XS,JS,ZS,QS,tT,eT,nT,sT,rT,oT,aT,iT,lT,cT,uT,hT,dT,pT,fT,Yf,Yf,Jf,Jf,mT,yT,gT,bT,xT,wT,vT,$T,kT,CT,NT,IT,TT];for(const n of ET)Ww(n);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.abs=function(){return this.throwIfDisposed(),Ze(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.acos=function(){return this.throwIfDisposed(),gy(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.acosh=function(){return this.throwIfDisposed(),yy(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.add=function(n){return this.throwIfDisposed(),nt(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.all=function(n,t){return this.throwIfDisposed(),Ed(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.any=function(n,t){return this.throwIfDisposed(),Yi(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.argMax=function(n){return this.throwIfDisposed(),Ji(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.argMin=function(n){return this.throwIfDisposed(),by(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.asScalar=function(){return this.throwIfDisposed(),N(this.size===1,()=>"The array must have only 1 element."),B(this,[])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.asType=function(n){return this.throwIfDisposed(),ut(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.as1D=function(){return this.throwIfDisposed(),B(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.as2D=function(n,t){return this.throwIfDisposed(),B(this,[n,t])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.as3D=function(n,t,e){return this.throwIfDisposed(),B(this,[n,t,e])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.as4D=function(n,t,e,s){return this.throwIfDisposed(),B(this,[n,t,e,s])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.as5D=function(n,t,e,s,r){return this.throwIfDisposed(),B(this,[n,t,e,s,r])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.asin=function(){return this.throwIfDisposed(),xy(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.asinh=function(){return this.throwIfDisposed(),wy(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.atan=function(){return this.throwIfDisposed(),vy(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.atan2=function(n){return this.throwIfDisposed(),$y(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.atanh=function(){return this.throwIfDisposed(),ky(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.avgPool=function(n,t,e,s){return this.throwIfDisposed(),vc(this,n,t,e,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.batchToSpaceND=function(n,t){return this.throwIfDisposed(),$c(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.batchNorm=function(n,t,e,s,r){return this.throwIfDisposed(),Ur(this,n,t,e,s,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.broadcastTo=function(n){return this.throwIfDisposed(),Qi(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.cast=function(n){return this.throwIfDisposed(),ut(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.ceil=function(){return this.throwIfDisposed(),Ny(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.clipByValue=function(n,t){return this.throwIfDisposed(),un(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.concat=function(n,t){return this.throwIfDisposed(),n instanceof pe&&(n=[n]),Ue([this,...n],t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.conv1d=function(n,t,e,s,r,o){return this.throwIfDisposed(),Rd(this,n,t,e,s,r,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.conv2dTranspose=function(n,t,e,s,r){return this.throwIfDisposed(),Od(this,n,t,e,s,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.conv2d=function(n,t,e,s,r,o){return this.throwIfDisposed(),_s(this,n,t,e,s,r,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.cos=function(){return this.throwIfDisposed(),kc(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.cosh=function(){return this.throwIfDisposed(),_d(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.cumsum=function(n,t,e){return this.throwIfDisposed(),Ld(this,n,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.depthToSpace=function(n,t){return this.throwIfDisposed(),Sy(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.depthwiseConv2d=function(n,t,e,s,r,o){return this.throwIfDisposed(),Ba(this,n,t,e,s,r,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.dilation2d=function(n,t,e,s,r){return this.throwIfDisposed(),Ty(this,n,t,e,s,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.divNoNan=function(n){return this.throwIfDisposed(),Ey(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.div=function(n){return this.throwIfDisposed(),gt(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.dot=function(n){return this.throwIfDisposed(),ck(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.elu=function(){return this.throwIfDisposed(),Ma(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.equal=function(n){return this.throwIfDisposed(),xr(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.erf=function(){return this.throwIfDisposed(),Ay(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.exp=function(){return this.throwIfDisposed(),bs(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.expandDims=function(n){return this.throwIfDisposed(),Sn(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.expm1=function(){return this.throwIfDisposed(),Dy(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.fft=function(){return this.throwIfDisposed(),Qd(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.flatten=function(){return this.throwIfDisposed(),B(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.floor=function(){return this.throwIfDisposed(),Va(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.floorDiv=function(n){return this.throwIfDisposed(),Td(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.gather=function(n,t){return this.throwIfDisposed(),So(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.greaterEqual=function(n){return this.throwIfDisposed(),wr(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.greater=function(n){return this.throwIfDisposed(),ls(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.ifft=function(){return this.throwIfDisposed(),nl(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.irfft=function(){return this.throwIfDisposed(),jy(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.isFinite=function(){return this.throwIfDisposed(),kk(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.isInf=function(){return this.throwIfDisposed(),Nk(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.isNaN=function(){return this.throwIfDisposed(),Sk(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.leakyRelu=function(n){return this.throwIfDisposed(),Cc(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.lessEqual=function(n){return this.throwIfDisposed(),eo(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.less=function(n){return this.throwIfDisposed(),Bd(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.localResponseNormalization=function(n,t,e,s){return this.throwIfDisposed(),Fy(this,n,t,e,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.logSigmoid=function(){return this.throwIfDisposed(),Bk(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.logSoftmax=function(n){return this.throwIfDisposed(),Md(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.logSumExp=function(n,t){return this.throwIfDisposed(),Hk(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.log=function(){return this.throwIfDisposed(),jn(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.log1p=function(){return this.throwIfDisposed(),Oy(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.logicalAnd=function(n){return this.throwIfDisposed(),as(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.logicalNot=function(){return this.throwIfDisposed(),Nc(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.logicalOr=function(n){return this.throwIfDisposed(),Wd(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.logicalXor=function(n){return this.throwIfDisposed(),Yk(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.matMul=function(n,t,e){return this.throwIfDisposed(),Wt(this,n,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.maxPool=function(n,t,e,s){return this.throwIfDisposed(),Ic(this,n,t,e,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.max=function(n,t){return this.throwIfDisposed(),Rn(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.maximum=function(n){return this.throwIfDisposed(),ks(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.mean=function(n,t){return this.throwIfDisposed(),ge(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.min=function(n,t){return this.throwIfDisposed(),To(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.minimum=function(n){return this.throwIfDisposed(),Sc(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.mirrorPad=function(n,t){return this.throwIfDisposed(),Py(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.mod=function(n){return this.throwIfDisposed(),zy(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.mul=function(n){return this.throwIfDisposed(),P(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.neg=function(){return this.throwIfDisposed(),Ie(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.norm=function(n,t,e){return this.throwIfDisposed(),np(this,n,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.notEqual=function(n){return this.throwIfDisposed(),Eo(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.oneHot=function(n,t=1,e=0){return this.throwIfDisposed(),$d(this,n,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.onesLike=function(){return this.throwIfDisposed(),xn(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.pad=function(n,t){return this.throwIfDisposed(),Tc(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.pool=function(n,t,e,s,r){return this.throwIfDisposed(),bC(this,n,t,e,s,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.pow=function(n){return this.throwIfDisposed(),pr(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.prelu=function(n){return this.throwIfDisposed(),Ac(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.prod=function(n,t){return this.throwIfDisposed(),Gd(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.reciprocal=function(){return this.throwIfDisposed(),Vy(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.relu=function(){return this.throwIfDisposed(),vr(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.relu6=function(){return this.throwIfDisposed(),jd(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.reshapeAs=function(n){return this.throwIfDisposed(),B(this,n.shape)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.reshape=function(n){return this.throwIfDisposed(),B(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.resizeBilinear=function(n,t,e){return this.throwIfDisposed(),rb(this,n,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.resizeNearestNeighbor=function(n,t,e){return this.throwIfDisposed(),ob(this,n,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.reverse=function(n){return this.throwIfDisposed(),xs(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.rfft=function(){return this.throwIfDisposed(),qy(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.round=function(){return this.throwIfDisposed(),Wy(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.rsqrt=function(){return this.throwIfDisposed(),qd(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.selu=function(){return this.throwIfDisposed(),Kd(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.separableConv2d=function(n,t,e,s,r,o){return this.throwIfDisposed(),Uy(this,n,t,e,s,r,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.sigmoid=function(){return this.throwIfDisposed(),to(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.sign=function(){return this.throwIfDisposed(),Gy(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.sin=function(){return this.throwIfDisposed(),Xd(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.sinh=function(){return this.throwIfDisposed(),Yd(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.slice=function(n,t){return this.throwIfDisposed(),Qt(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.softmax=function(n){return this.throwIfDisposed(),Dc(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.softplus=function(){return this.throwIfDisposed(),Wa(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.spaceToBatchND=function(n,t){return this.throwIfDisposed(),Ec(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.split=function(n,t){return this.throwIfDisposed(),gn(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.sqrt=function(){return this.throwIfDisposed(),Xe(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.square=function(){return this.throwIfDisposed(),se(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.squaredDifference=function(n){return this.throwIfDisposed(),Ky(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.squeeze=function(n){return this.throwIfDisposed(),Gr(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.stack=function(n,t){this.throwIfDisposed();const e=n instanceof pe?[this,n]:[this,...n];return Fn(e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.step=function(n){return this.throwIfDisposed(),Ga(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.stridedSlice=function(n,t,e,s,r,o,a,i){return this.throwIfDisposed(),Xy(this,n,t,e,s,r,o,a,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.sub=function(n){return this.throwIfDisposed(),xt(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.sum=function(n,t){return this.throwIfDisposed(),bt(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.tan=function(){return this.throwIfDisposed(),Yy(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.tanh=function(){return this.throwIfDisposed(),Dd(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.tile=function(n){return this.throwIfDisposed(),or(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.toBool=function(){return this.throwIfDisposed(),ut(this,"bool")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.toFloat=function(){return this.throwIfDisposed(),ut(this,"float32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.toInt=function(){return this.throwIfDisposed(),ut(this,"int32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.topk=function(n,t){return this.throwIfDisposed(),Jy(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.transpose=function(n){return this.throwIfDisposed(),Kt(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.unique=function(n){return this.throwIfDisposed(),Ku(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.unsortedSegmentSum=function(n,t){return this.throwIfDisposed(),Zy(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.unstack=function(n){return this.throwIfDisposed(),Kn(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.where=function(n,t){return this.throwIfDisposed(),bn(n,this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.zerosLike=function(){return this.throwIfDisposed(),Ot(this)};/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let pu;function Ne(){return pu==null&&(pu=Hv().epsilon()),pu}function Xn(){return"channelsLast"}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Qn extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Qn.prototype)}}class En extends Error{constructor(t){super(t),Object.setPrototypeOf(this,En.prototype)}}class D extends Error{constructor(t){super(t),Object.setPrototypeOf(this,D.prototype)}}class kt extends Error{constructor(t){super(t),Object.setPrototypeOf(this,kt.prototype)}}class Ep extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Ep.prototype)}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function fr(n,t){if(Array.isArray(n)){let e=[];for(let s=0;s<t;s++)e=e.concat(n);return e}else{const e=new Array(t);return e.fill(n),e}}function ts(n,t){if(!n)throw new Ep(t)}function Zf(n,t){let e=0;for(const s of n)s===t&&e++;return e}function sn(n){return n.length===1?n[0]:n}function oe(n){return Array.isArray(n)?n:[n]}function ds(n){const e=n.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return e[0]!=="_"?e:"private"+e}function Zs(n){return n.length<=1||n.indexOf("_")===-1?n:n.replace(/[_]+(\w|$)/g,(t,e)=>e.toUpperCase())}let Cn={};function Ap(n){if(n==null)return null;const t={};return t.className=n.getClassName(),t.config=n.getConfig(),t}function Yu(n){if(!(n==null||typeof n!="object"))if(Array.isArray(n))n.forEach(t=>Yu(t));else{const t=Object.keys(n);for(const e of t){const s=n[e];s!=null&&typeof s=="object"&&(!Array.isArray(s)&&s.type==="ndarray"&&typeof s.value=="number"?n[e]=s.value:Yu(s))}}}function Ka(n,t={},e={},s="object",r=!1){if(typeof n=="string"){const o=n;let a;if(o in e)a=e[o];else if(o in Cn)a=Cn[o];else if(a=t[o],a==null)throw new D(`Unknown ${s}: ${n}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return a}else{const o=n;if(o.className==null||o.config==null)throw new D(`${s}: Improper config format: ${JSON.stringify(o)}.
'className' and 'config' must set.`);const a=o.className;let i,l;if(a in e?[i,l]=e[a]:a in Cn?[i,l]=Cn.className:a in t&&([i,l]=t[a]),i==null)throw new D(`Unknown ${s}: ${a}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(l!=null){const c={};for(const p of Object.keys(Cn))c[p]=Cn[p];for(const p of Object.keys(e))c[p]=e[p];const u=o.config;u.customObjects=c;const h=Object.assign({},Cn);for(const p of Object.keys(e))Cn[p]=e[p];Yu(o.config);const d=l(i,o.config,e,r);return Cn=Object.assign({},h),d}else{const c=Object.assign({},Cn);for(const h of Object.keys(e))Cn[h]=e[h];const u=new i(o.config);return Cn=Object.assign({},c),u}}}function AT(n,t){return n<t?-1:n>t?1:0}function ui(n,t){return-1*AT(n,t)}function Ds(n){if(n==null)return n;const t=[];for(const e of n)t.indexOf(e)===-1&&t.push(e);return t}function DT(n){if(n==null)throw new D(`Invalid value in obj: ${JSON.stringify(n)}`);for(const t in n)if(n.hasOwnProperty(t))return!1;return!0}function $r(n,t,e){if(e!=null&&n.indexOf(e)<0)throw new D(`${e} is not a valid ${t}.  Valid values are ${n} or null/undefined.`)}function Dp(n,t,e=0,s=1/0){return ts(e>=0),ts(s>=e),Array.isArray(n)&&n.length>=e&&n.length<=s&&n.every(r=>typeof r===t)}function Oe(n,t){Array.isArray(n)?(N(n.length>0,()=>`${t} is unexpectedly an empty array.`),n.forEach((e,s)=>Oe(e,`element ${s+1} of ${t}`))):N(Number.isInteger(n)&&n>0,()=>`Expected ${t} to be a positive integer, but got ${yb(n)}.`)}function yb(n){return n===null?"null":Array.isArray(n)?"["+n.map(t=>yb(t)).join(",")+"]":typeof n=="string"?`"${n}"`:`${n}`}function RT(n,t){let e=nn(),s;return(...o)=>{const a=nn();return a-e<t||(e=a,s=n(...o)),s}}function bb(n){return n==="relu"?"relu":n==="linear"?"linear":n==="elu"?"elu":null}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Rp(n,t){return _(()=>Xe(bt(P(n,n),t,!0)))}class Xa extends Qr{getConfig(){return{}}}class xb extends Xa{constructor(t){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=t.maxValue!=null?t.maxValue:this.defaultMaxValue,this.axis=t.axis!=null?t.axis:this.defaultAxis}apply(t){return _(()=>{const e=Rp(t,this.axis),s=un(e,0,this.maxValue);return P(t,gt(s,nt(Ne(),e)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}xb.className="MaxNorm";Y(xb);class wb extends Xa{constructor(t){super(),this.defaultAxis=0,this.axis=t.axis!=null?t.axis:this.defaultAxis}apply(t){return _(()=>gt(t,nt(Ne(),Rp(t,this.axis))))}getConfig(){return{axis:this.axis}}}wb.className="UnitNorm";Y(wb);class vb extends Xa{apply(t){return vr(t)}}vb.className="NonNeg";Y(vb);class $b extends Xa{constructor(t){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=t.minValue!=null?t.minValue:this.defaultMinValue,this.maxValue=t.maxValue!=null?t.maxValue:this.defaultMaxValue,this.rate=t.rate!=null?t.rate:this.defaultRate,this.axis=t.axis!=null?t.axis:this.defaultAxis}apply(t){return _(()=>{const e=Rp(t,this.axis),s=nt(P(this.rate,un(e,this.minValue,this.maxValue)),P(1-this.rate,e));return P(t,gt(s,nt(Ne(),e)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}$b.className="MinMaxNorm";Y($b);const Qf={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Se(n){return Ap(n)}function tm(n,t={}){return Ka(n,Tn.getMap().classNameMap,t,"constraint")}function Te(n){if(n==null)return null;if(typeof n=="string"){const e={className:n in Qf?Qf[n]:n,config:{}};return tm(e)}else return n instanceof Xa?n:tm(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const FT=["channelsFirst","channelsLast"],OT=["nearest","bilinear"],_T=["valid","same","causal"],LT=["max","avg"],PT=["sum","mul","concat","ave"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const Ar=new Map;function be(n){$r(FT,"DataFormat",n)}function zT(n){$r(OT,"InterpolationFormat",n)}function wn(n){$r(_T,"PaddingMode",n)}function kb(n){$r(LT,"PoolMode",n)}const ko=[],em="/";function ir(n,t){ko.push(n);try{const e=t();return ko.pop(),e}catch(e){throw ko.pop(),e}}function BT(){return ko.length===0?"":ko.join(em)+em}function Cb(n){if(!Ib(n))throw new Error("Not a valid tensor name: '"+n+"'");return BT()+n}function Nb(n){if(!Ib(n))throw new Error("Not a valid tensor name: '"+n+"'");Ar.has(n)||Ar.set(n,0);const t=Ar.get(n);if(Ar.set(n,Ar.get(n)+1),t>0){const e=`${n}_${t}`;return Ar.set(e,1),e}else return n}const MT=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function Ib(n){return!!n.match(MT)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function VT(n){return n===parseInt(n.toString(),10)}function Rs(n,t,e){t==null&&(t=0),e==null&&(e=n.length);let s=1;for(let r=t;r<e;++r)s*=n[r];return s}function Sb(n){return n=Array.isArray(n)?new Float32Array(n):n,qn(n)}function Hr(n){return To(Sb(n)).dataSync()[0]}function Ps(n){return Rn(Sb(n)).dataSync()[0]}function Yn(n,t){if(t<n)throw new D(`end (${t}) < begin (${n}) is forbidden.`);const e=[];for(let s=n;s<t;++s)e.push(s);return e}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Ya(n,t){return n.asType(t)}function Ja(n,t=-1){const e=n.shape.slice();return t<0&&(t=e.length+t+1),e.splice(t,0,1),n.reshape(e)}function WT(n,t){return _(()=>{if(n.shape.length!==2)throw new D(`repeat() expects a rank-2 tensor, but received a rank-${n.shape.length} tensor.`);const e=Ja(n,1);return Ju(e,[1,t,1])})}function UT(n){const t=[Rs(n.shape)];return n.reshape(t)}function GT(n){if(n.rank<=1)throw new D(`batchFlatten requires a minimum rank of 2. Got rank: ${n.rank}.`);const t=[n.shape[0],Rs(n.shape,1)];return n.reshape(t)}function lr(n,t,e){return _(()=>{switch(n.rank){case 1:return Jd(n,t,e);case 2:return Hy(n,[t,0],[e,n.shape[1]]);case 3:return Zd(n,[t,0,0],[e,n.shape[1],n.shape[2]]);case 4:return el(n,[t,0,0,0],[e,n.shape[1],n.shape[2],n.shape[3]]);case 5:return Qt(n,[t,0,0,0,0],[e,n.shape[1],n.shape[2],n.shape[3],n.shape[4]]);case 6:return Qt(n,[t,0,0,0,0,0],[e,n.shape[1],n.shape[2],n.shape[3],n.shape[4],n.shape[5]]);default:throw new D(`sliceAlongFirstAxis() received an unsupported tensor rank: ${n.rank}`)}})}function fu(n,t,e){return _(()=>{switch(n.rank){case 1:return Jd(n,t,e);case 2:return Hy(n,[0,t],[n.shape[0],e]);case 3:return Zd(n,[0,0,t],[n.shape[0],n.shape[1],e]);case 4:return el(n,[0,0,0,t],[n.shape[0],n.shape[1],n.shape[2],e]);default:throw new D(`sliceAlongLastAxis() received an unsupported tensor rank: ${n.rank}`)}})}function hi(n,t,e,s){return _(()=>{switch(n.rank){case 1:return Jd(n,t,e);case 2:switch(s){case 1:return lr(n,t,e);case 2:return fu(n,t,e);default:throw new D(`The axis is not within the rank of the tensor ${s}`)}case 3:switch(s){case 1:return lr(n,t,e);case 2:return Zd(n,[0,t,0],[n.shape[0],e,n.shape[2]]);case 3:return fu(n,t,e);default:throw new D(`The axis is not within the rank of the tensor ${s}`)}case 4:switch(s){case 1:return lr(n,t,e);case 2:return el(n,[0,t,0,0],[n.shape[0],e,n.shape[2],n.shape[3]]);case 3:return el(n,[0,0,t,0],[n.shape[0],n.shape[1],e,n.shape[3]]);case 4:return fu(n,t,e);default:throw new D(`The axis is not within the rank of the tensor ${s}`)}default:throw new D(`sliceAlongLastAxis() received an unsupported tensor rank: ${n.rank}`)}})}function Fp(n,t=-1){let e;return t<0&&(e=n[0].rank,e!==0?t=e:t=0),t===n[0].rank&&(t=-1),Ue(n,t)}function nm(n,t){switch(n.rank){case 1:return L$([n,t]);case 2:return z$([n,t],0);case 3:return M$([n,t],0);case 4:return W$([n,t],0);default:throw new D(`concatAlongFirstAxis() received an unsupported tensor rank: ${n.rank}`)}}function Ju(n,t){if(Array.isArray(t)||(t=[t]),n.rank!==t.length)throw new D(`The length of input n (${t.length}) does not match the number of dimensions in input x (${n.rank})`);return or(n,t)}function Mc(n,t=0,e=1,s,r){return MC(n,t,e,s,r)}function rs(n,t,e,s){if(n.rank<2||t.rank<2)throw new kt(`dot requires both inputs to be rank >= 2 but got x shape = ${n.shape} and y shape = ${t.shape}`);if(t.rank>=3){const r=n.shape.slice(-1)[0],o=t.shape.slice(-2)[0];if(r!==o)throw new kt(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${n.shape} and  y shape = ${t.shape}`)}if(n.rank===2&&t.rank===2)return Xu({a:n,b:t,transposeA:!1,transposeB:!1,bias:s?Zu(n.rank,s,Xn()):null,activation:e});{const r=n.shape.slice(),o=r.pop();n=n.reshape([-1,o]);const a=t.shape.slice(),i=a.pop(),l=a.pop(),c=[...a,i],u=Array.from({length:t.rank},(f,m)=>m===0?t.rank-2:m<=t.rank-2?m-1:m);t=t.transpose(u).reshape([l,-1]);const h=[...r,...c];return Xu({a:n,b:t,transposeA:!1,transposeB:!1,bias:s?Zu(n.rank,s,Xn()):null,activation:e}).reshape(h)}}function Tb(n,t,e){return _(()=>(Array.isArray(t)?t=qn(t,"int32"):t=t.toInt(),So(n,t,e)))}function Za(n){return P(n,n)}function Zu(n,t,e){const s=t.shape;if(t.rank!==1&&t.rank!==n)throw new D(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${n}`);if(n===5){if(e==="channelsFirst")return s.length===1?t.reshape([1,s[0],1,1,1]):t.reshape([1,s[3],s[0],s[1],s[2]]);if(e==="channelsLast")return s.length===1?t.reshape([1,1,1,1,s[0]]):t.reshape([1].concat(s))}else if(n===4){if(e==="channelsFirst")return s.length===1?t.reshape([1,s[0],1,1]):t.reshape([1,s[2],s[0],s[1]]);if(e==="channelsLast")return s.length===1?t.reshape([1,1,1,s[0]]):t.reshape([1].concat(s))}else if(n===3){if(e==="channelsFirst")return s.length===1?t.reshape([1,s[0],1]):t.reshape([1,s[1],s[0]]);if(e==="channelsLast")return s.length===1?t.reshape([1,1,s[0]]):t.reshape([1].concat(s))}else if(n<3)return t;throw new D(`Unsupported input rank by biasAdd: ${t.rank}`)}function cs(n,t,e){return _(()=>(e==null&&(e=Xn()),be(e),n.add(Zu(n.rank,t,e))))}function HT(n,t=1){if(t!==1)throw new kt(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return Ma(n)}function jT(n){return _(()=>gt(n,Ze(n).add(1)))}function Eb(n,t,e,s){return _(()=>LN(n,t,e,s))}function qT(n){return _(()=>{const t=nt(.5,P(.2,n));return un(t,0,1)})}function Qa(n,t,e=!1){return e?n():t()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const KT=["fanIn","fanOut","fanAvg"],XT=["normal","uniform","truncatedNormal"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function YT(n){$r(KT,"FanMode",n)}function JT(n){$r(XT,"Distribution",n)}class Ln extends Qr{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class Ab extends Ln{apply(t,e){return xe(t,e)}}Ab.className="Zeros";Y(Ab);class Op extends Ln{apply(t,e){return Gs(t,e)}}Op.className="Ones";Y(Op);class Db extends Ln{constructor(t){if(super(),typeof t!="object")throw new D(`Expected argument of type ConstantConfig but got ${t}`);if(t.value===void 0)throw new D(`config must have value set but got ${t}`);this.value=t.value}apply(t,e){return _(()=>P(Nt(this.value),Gs(t,e)))}getConfig(){return{value:this.value}}}Db.className="Constant";Y(Db);class Rb extends Ln{constructor(t){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=t.minval||this.DEFAULT_MINVAL,this.maxval=t.maxval||this.DEFAULT_MAXVAL,this.seed=t.seed}apply(t,e){return Ua(t,this.minval,this.maxval,e)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}Rb.className="RandomUniform";Y(Rb);class Fb extends Ln{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if(e=e||"float32",e!=="float32"&&e!=="int32")throw new kt(`randomNormal does not support dType ${e}.`);return Mc(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Fb.className="RandomNormal";Y(Fb);class Ob extends Ln{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if(e=e||"float32",e!=="float32"&&e!=="int32")throw new kt(`truncatedNormal does not support dType ${e}.`);return tp(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Ob.className="TruncatedNormal";Y(Ob);class _b extends Ln{constructor(t){super(),this.gain=t.gain!=null?t.gain:1}apply(t,e){return _(()=>{if(t.length!==2||t[0]!==t[1])throw new D("Identity matrix initializer can only be used for 2D square matrices.");return P(this.gain,Ry(t[0]))})}getConfig(){return{gain:this.gain}}}_b.className="Identity";Y(_b);function ZT(n,t="channelsLast"){let e,s;if(be(t),n.length===2)e=n[0],s=n[1];else if([3,4,5].indexOf(n.length)!==-1){if(t==="channelsFirst"){const r=Rs(n,2);e=n[1]*r,s=n[0]*r}else if(t==="channelsLast"){const r=Rs(n,0,n.length-2);e=n[n.length-2]*r,s=n[n.length-1]*r}}else{const r=Rs(n);e=Math.sqrt(r),s=Math.sqrt(r)}return[e,s]}class hn extends Ln{constructor(t){if(super(),t.scale<0)throw new D(`scale must be a positive float. Got: ${t.scale}`);this.scale=t.scale==null?1:t.scale,this.mode=t.mode==null?"fanIn":t.mode,YT(this.mode),this.distribution=t.distribution==null?"normal":t.distribution,JT(this.distribution),this.seed=t.seed}apply(t,e){const s=ZT(t),r=s[0],o=s[1];let a=this.scale;if(this.mode==="fanIn"?a/=Math.max(1,r):this.mode==="fanOut"?a/=Math.max(1,o):a/=Math.max(1,(r+o)/2),this.distribution==="normal"){const i=Math.sqrt(a);if(e=e||"float32",e!=="float32"&&e!=="int32")throw new kt(`${this.getClassName()} does not support dType ${e}.`);return tp(t,0,i,e,this.seed)}else{const i=Math.sqrt(3*a);return Ua(t,-i,i,e)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}hn.className="VarianceScaling";Y(hn);class _p extends hn{constructor(t){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:t==null?null:t.seed})}getClassName(){return hn.className}}_p.className="GlorotUniform";Y(_p);class Lp extends hn{constructor(t){super({scale:1,mode:"fanAvg",distribution:"normal",seed:t==null?null:t.seed})}getClassName(){return hn.className}}Lp.className="GlorotNormal";Y(Lp);class Pp extends hn{constructor(t){super({scale:2,mode:"fanIn",distribution:"normal",seed:t==null?null:t.seed})}getClassName(){return hn.className}}Pp.className="HeNormal";Y(Pp);class zp extends hn{constructor(t){super({scale:2,mode:"fanIn",distribution:"uniform",seed:t==null?null:t.seed})}getClassName(){return hn.className}}zp.className="HeUniform";Y(zp);class Bp extends hn{constructor(t){super({scale:1,mode:"fanIn",distribution:"normal",seed:t==null?null:t.seed})}getClassName(){return hn.className}}Bp.className="LeCunNormal";Y(Bp);class Mp extends hn{constructor(t){super({scale:1,mode:"fanIn",distribution:"uniform",seed:t==null?null:t.seed})}getClassName(){return hn.className}}Mp.className="LeCunNormal";Y(Mp);class Lb extends Ln{constructor(t){if(super(),this.DEFAULT_GAIN=1,this.gain=t.gain==null?this.DEFAULT_GAIN:t.gain,this.seed=t.seed,this.seed!=null)throw new kt("Random seed is not implemented for Orthogonal Initializer yet.")}apply(t,e){return _(()=>{if(t.length<2)throw new kt("Shape must be at least 2D.");t[0]*t[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${t[0]*t[1]}) elements: Slowness may result.`);const s=t[0]>t[1]?[t[1],t[0]]:t,r=Mc(s,0,1,"float32");let o=CI.gramSchmidt(r);return t[0]>t[1]&&(o=o.transpose()),P(this.gain,o)})}getConfig(){return{gain:this.gain,seed:this.seed}}}Lb.className="Orthogonal";Y(Lb);const sm={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function rm(n,t={}){return Ka(n,Tn.getMap().classNameMap,t,"initializer")}function he(n){return Ap(n)}function ae(n){if(typeof n=="string"){const t=n in sm?sm[n]:n;if(t==="GlorotNormal")return new Lp;if(t==="GlorotUniform")return new _p;if(t==="HeNormal")return new Pp;if(t==="HeUniform")return new zp;if(t==="LeCunNormal")return new Bp;if(t==="LeCunUniform")return new Mp;{const e={};return e.className=t,e.config={},rm(e)}}else return n instanceof Ln?n:rm(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let QT=0;function Pb(){return QT++}const di={};function Vc(n=""){return n in di||(di[n]=0),di[n]+=1,n+di[n].toString()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Qu(n){return Array.isArray(n)&&Array.isArray(n[0])}function sl(n){return n.length===0?[]:Array.isArray(n[0])?n:[n]}function Ct(n){let t;if(Array.isArray(n)){if(n.length!==1)throw new D(`Expected Tensor length to be 1; got ${n.length}`);t=n[0]}else t=n;return t}function ee(n){if(Array.isArray(n)&&Array.isArray(n[0])){if(n.length===1)return n=n,n[0];throw new D(`Expected exactly 1 Shape; got ${n.length}`)}else return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function rl(n){let t=0;for(const e of n)e.shape.length===0?t+=1:t+=e.shape.reduce((s,r)=>s*r);return t}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const om="Variable";class t2{constructor(t,e="float32",s=om,r=!0,o=null){this.dtype=e??"float32",this.shape=t.shape,this.id=Pb(),s=s??om,this.originalName=Cb(s),this.name=Nb(this.originalName),this.trainable_=r,this.constraint=o,this.val=CN(t,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(t){return this.assertNotDisposed(),e2(this.val,t),this.val.id!==t.id&&(this.val.assign(t),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(t){this.trainable_=t,this.val.trainable=t}}function e2(n,t){if(n.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(n.shape)+" vs. "+JSON.stringify(t.shape))}function th(n){return n.map(t=>t.read())}function Vp(n){n.forEach(t=>{t[0].write(t[1])})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class We{constructor(t){this.dtype=t.dtype,this.shape=t.shape,t.shape!=null?this.ndim=t.shape.length:this.ndim=t.ndim,this.maxNDim=t.maxNDim,this.minNDim=t.minNDim,this.axes=t.axes||{}}}class ns{constructor(t,e,s,r,o,a,i){this.dtype=t,this.shape=e,this.sourceLayer=s,this.inputs=r,this.callArgs=o,this.outputTensorIndex=i,this.id=Pb(),a!=null&&(this.originalName=Cb(a),this.name=Nb(this.originalName)),this.rank=e.length}}let n2=0;class Wc{constructor(t,e){this.callArgs=e,this.id=n2++,this.outboundLayer=t.outboundLayer,this.inboundLayers=t.inboundLayers,this.nodeIndices=t.nodeIndices,this.tensorIndices=t.tensorIndices,this.inputTensors=t.inputTensors,this.outputTensors=t.outputTensors,this.inputMasks=t.inputMasks,this.outputMasks=t.outputMasks,this.inputShapes=t.inputShapes,this.outputShapes=t.outputShapes;for(const s of t.inboundLayers)s!=null&&s.outboundNodes.push(this);t.outboundLayer.inboundNodes.push(this)}getConfig(){const t=[];for(const e of this.inboundLayers)e!=null?t.push(e.name):t.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:t,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let s2=0;class _t extends Qr{constructor(t={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=s2++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let e=t.name;if(!e){const s=this.getClassName();e=ds(s)+"_"+Vc(s)}if(this.name=e,this.trainable_=t.trainable==null?!0:t.trainable,t.inputShape!=null||t.batchInputShape!=null){let s;if(t.batchInputShape!=null)s=t.batchInputShape;else if(t.inputShape!=null){let o=null;t.batchSize!=null&&(o=t.batchSize),s=[o].concat(t.inputShape)}this.batchInputShape=s;let r=t.dtype;r==null&&(r=t.inputDType),r==null&&(r="float32"),this.dtype=r}t.weights!=null?this.initialWeights=t.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(t,e){return t.name+"_ib-"+e.toString()}getNodeAtIndex(t,e){if(this.inboundNodes.length===0)throw new En(`The layer has never been called and thus has no defined ${e}.`);if(this.inboundNodes.length<=t)throw new D(`Asked to get ${e} at node ${t}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[t]}getInputAt(t){return sn(this.getNodeAtIndex(t,"input").inputTensors)}getOutputAt(t){return sn(this.getNodeAtIndex(t,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Qn(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new Qn(`Layer ${this.name} is not connected, no input to return.`);return sn(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new Qn(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new Qn(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return sn(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(t=>t())}get updates(){return this._updates}get built(){return this._built}set built(t){this._built=t}get trainable(){return this.trainable_}set trainable(t){this._trainableWeights.forEach(e=>e.trainable=t),this.trainable_=t}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(t=>t.trainable):[]}set trainableWeights(t){this._trainableWeights=t}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(t=>!t.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(t){this._nonTrainableWeights=t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(t){if(t=oe(t),this.inputSpec==null||this.inputSpec.length===0)return;const e=oe(this.inputSpec);if(t.length!==e.length)throw new D(`Layer ${this.name} expects ${e.length} inputs, but it received ${t.length} input tensors. Input received: ${t}`);for(let s=0;s<t.length;s++){const r=t[s],o=e[s];if(o==null)continue;const a=r.rank;if(o.ndim!=null&&a!==o.ndim)throw new D(`Input ${s} is incompatible with layer ${this.name}: expected ndim=${o.ndim}, found ndim=${a}`);if(o.maxNDim!=null&&a>o.maxNDim)throw new D(`Input ${s} is incompatible with layer ${this.name}: expected max_ndim=${o.maxNDim}, found ndim=${a}`);if(o.minNDim!=null&&a<o.minNDim)throw new D(`Input ${s} is incompatible with layer ${this.name}: expected min_ndim=${o.minNDim}, found ndim=${a}.`);if(o.dtype!=null&&r.dtype!==o.dtype)throw new D(`Input ${s} is incompatible with layer ${this.name} : expected dtype=${o.dtype}, found dtype=${r.dtype}.`);if(o.axes){const i=r.shape;for(const l in o.axes){const c=Number(l),u=o.axes[l],h=c>=0?i[c]:i[i.length+c];if(u!=null&&[u,null].indexOf(h)===-1)throw new D(`Input ${s} is incompatible with layer ${this.name}: expected axis ${c} of input shape to have value ${u} but got shape ${i}.`)}}if(o.shape!=null)for(let i=0;i<o.shape.length;++i){const l=o.shape[i],c=r.shape[i];if(l!=null&&c!=null&&l!==c)throw new D(`Input ${s} is incompatible with layer ${this.name}: expected shape=${o.shape}, found shape=${r.shape}.`)}}}call(t,e){return t}invokeCallHook(t,e){this._callHook!=null&&this._callHook(t,e)}setCallHook(t){this._callHook=t}clearCallHook(){this._callHook=null}apply(t,e){e=e||{},this.assertNotDisposed();const s=oe(t);let r=!0;for(const a of s)if(!(a instanceof ns)){r=!1;break}let o=!0;for(const a of s)if(a instanceof ns){o=!1;break}if(r===o)throw new D("Arguments to apply() must be all SymbolicTensors or all Tensors");return ir(this.name,()=>{if(!this.built){this.assertInputCompatibility(t);const a=[];for(const i of oe(t))a.push(i.shape);this.build(sn(a)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&o&&(this._refCount=1)}if(this.assertInputCompatibility(t),o){let a=this.call(t,e);const i=oe(a),l=[];for(let c of i)s.indexOf(c)!==-1&&(c=c.clone()),l.push(c);if(a=sn(l),this.activityRegularizer!=null)throw new kt("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}else{const a=r2(t),i=this.computeOutputShape(a);let l;const c=o2(t);if(this.warnOnIncompatibleInputShape(Array.isArray(t)?a[0]:a),i!=null&&i.length>0&&Array.isArray(i[0])?l=i.map((u,h)=>new ns(c,u,this,oe(t),e,this.name,h)):l=new ns(c,i,this,oe(t),e,this.name),this.addInboundNode(t,l,null,null,a,i,e),this._refCount++,this.activityRegularizer!=null)throw new kt("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return l}})}warnOnIncompatibleInputShape(t){if(this.batchInputShape!=null)if(t.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(t)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let e=!1;this.batchInputShape.forEach((s,r)=>{s!=null&&t[r]!=null&&t[r]!==s&&(e=!0)}),e&&console.warn(`The shape of the input tensor (${JSON.stringify(t)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new Qn(`The layer ${this.name} has never been called and thus has no defined output shape.`);const t=[];for(const e of this.inboundNodes){const s=JSON.stringify(e.outputShapes);t.indexOf(s)===-1&&t.push(s)}if(t.length===1){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&e.length===1?e[0]:e}else throw new Qn(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new En(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return rl(this.weights)}build(t){this.built=!0}getWeights(t=!1){return th(t?this.trainableWeights:this.weights)}setWeights(t){_(()=>{const e=this.weights;if(e.length!==t.length)throw new D(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${t.length}, but the layer was expecting ${e.length} weights. Provided weights: ${t}...`);if(e.length===0)return;const s=[],r=th(e);for(let o=0;o<r.length;++o){const a=r[o],i=e[o],l=t[o];if(!Gt(a.shape,l.shape))throw new D(`Layer weight shape ${a.shape} not compatible with provided weight shape ${l.shape}`);s.push([i,l])}Vp(s)})}addWeight(t,e,s,r,o,a,i){if(this._addedWeightNames.indexOf(t)!==-1)throw new D(`Duplicate weight name ${t} for layer ${this.name}`);this._addedWeightNames.push(t),s==null&&(s="float32"),this.fastWeightInitDuringBuild&&(r=ae("zeros"));const l=r.apply(e,s),c=new t2(l,s,t,a,i);return l.dispose(),o!=null&&this.addLoss(()=>o.apply(c.read())),a==null&&(a=!0),a?this._trainableWeights.push(c):this._nonTrainableWeights.push(c),c}setFastWeightInitDuringBuild(t){this.fastWeightInitDuringBuild=t}addLoss(t){t==null||Array.isArray(t)&&t.length===0||(t=oe(t),this._losses!==void 0&&this._losses!==null&&this.losses.push(...t))}computeOutputShape(t){return t}computeMask(t,e){if(!this.supportsMasking){if(e!=null)if(Array.isArray(e))e.forEach(s=>{if(s!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return e}addInboundNode(t,e,s,r,o,a,i=null){const l=oe(t);e=oe(e),s=oe(s),r=oe(r),o=sl(o),a=sl(a);const c=[],u=[],h=[];for(const d of l)c.push(d.sourceLayer),u.push(d.nodeIndex),h.push(d.tensorIndex);new Wc({outboundLayer:this,inboundLayers:c,nodeIndices:u,tensorIndices:h,inputTensors:l,outputTensors:e,inputMasks:s,outputMasks:r,inputShapes:o,outputShapes:a},i);for(let d=0;d<e.length;d++)e[d].sourceLayer=this,e[d].nodeIndex=this.inboundNodes.length-1,e[d].tensorIndex=d}getConfig(){const t={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(t.batchInputShape=this.batchInputShape),this.dtype!=null&&(t.dtype=this.dtype),t}disposeWeights(){return this.weights.forEach(t=>t.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let t=0;return--this._refCount===0&&(t=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:t}}}function r2(n){n=oe(n);const t=[];for(const e of n)t.push(e.shape);return sn(t)}function o2(n){return"float32"}function zb(n,t,e){if((t==null||e!=null&&e>0)&&(t=n.sourceLayer,e=n.nodeIndex),t.inboundNodes.length===0)return[n];{const s=t.inboundNodes[e];if(s.inboundLayers.length===0)return s.inputTensors;{const r=[];for(let o=0;o<s.inboundLayers.length;o++){const a=s.inputTensors[o],i=s.inboundLayers[o],l=s.nodeIndices[o],c=zb(a,i,l);for(const u of c)r.indexOf(u)===-1&&r.push(u)}return r}}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class ti extends _t{constructor(t){if(super({dtype:t.dtype,name:t.name!=null?t.name:Vc("input").toString()}),t.batchSize==null&&(t.batchSize=null),t.sparse==null&&(t.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=t.sparse,t.inputShape!=null&&t.batchInputShape!=null)throw new D("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let e=t.batchInputShape;if(e==null){if(t.inputShape==null)throw new D("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");e=[t.batchSize].concat(t.inputShape)}else if(t.batchSize!=null)throw new D("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const s=t.dtype||"float32";this.batchInputShape=e,this.dtype=s,this.inputSpec=[{shape:e}];const r=new ns(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new Wc({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[e],outputShapes:[e]})}apply(t,e){throw new D(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}ti.className="InputLayer";Y(ti);function a2(n){if(n.batchShape==null&&n.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(n.batchShape!=null&&n.shape!=null)throw new D("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=n.batchShape;n.shape!=null&&t==null&&(t=[null].concat(n.shape));let e=n.dtype;return e==null&&(e="float32"),new ti({batchInputShape:t,name:n.name,dtype:e,sparse:n.sparse}).inboundNodes[0].outputTensors[0]}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */async function Xs(n){if(n==null)return;const t=[],e=[],s=[];for(const r in n){const o=n[r];if(typeof o!="number"){const a=o;t.push(a.data()),e.push(r),s.push(a)}}if(t.length>0){const r=await Promise.all(t);for(let o=0;o<r.length;++o)n[e[o]]=r[o][0];$t(s)}}function Bb(n){if(n!=null)for(const t in n){const e=n[t];typeof e!="number"&&e.dispose()}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var am;(function(n){n[n.SILENT=0]="SILENT",n[n.VERBOSE=1]="VERBOSE"})(am||(am={}));const i2=125;class Ao{constructor(){this.validationData=null}setParams(t){this.params=t}async onEpochBegin(t,e){}async onEpochEnd(t,e){}async onBatchBegin(t,e){}async onBatchEnd(t,e){}async onTrainBegin(t){}async onTrainEnd(t){}setModel(t){}}class l2{constructor(t,e=10){t==null&&(t=[]),this.callbacks=t,this.queueLength=e}append(t){this.callbacks.push(t)}setParams(t){for(const e of this.callbacks)e.setParams(t)}setModel(t){for(const e of this.callbacks)e.setModel(t)}async onEpochBegin(t,e){e==null&&(e={});for(const s of this.callbacks)await s.onEpochBegin(t,e)}async onEpochEnd(t,e){e==null&&(e={});for(const s of this.callbacks)await s.onEpochEnd(t,e)}async onBatchBegin(t,e){e==null&&(e={});for(const s of this.callbacks)await s.onBatchBegin(t,e)}async onBatchEnd(t,e){e==null&&(e={});for(const s of this.callbacks)await s.onBatchEnd(t,e)}async onTrainBegin(t){t==null&&(t={});for(const e of this.callbacks)await e.onTrainBegin(t)}async onTrainEnd(t){t==null&&(t={});for(const e of this.callbacks)await e.onTrainEnd(t)}}class c2 extends Ao{constructor(){super()}async onEpochBegin(t){this.seen=0,this.totals={}}async onBatchEnd(t,e){e==null&&(e={});const s=e.size==null?0:e.size;this.seen+=s;for(const r in e){const o=e[r];if(typeof o=="number")this.totals.hasOwnProperty(r)||(this.totals[r]=0),this.totals[r]=this.totals[r]+o*s;else{let a;r in this.totals?a=this.totals[r]:this.totals[r]=0;const i=_(()=>nt(this.totals[r],P(o,s)));this.totals[r]=i,a!=null&&a.dispose()}}}async onEpochEnd(t,e){if(e!=null)for(const s of this.params.metrics)this.totals[s]!=null&&(typeof this.totals[s]=="number"?e[s]=this.totals[s]/this.seen:_(()=>{const r=P(gt(1,this.seen),this.totals[s]);e[s]=r,this.totals[s].dispose(),Ve(e[s])}))}}class u2 extends Ao{async onTrainBegin(t){this.epoch=[],this.history={}}async onEpochEnd(t,e){e==null&&(e={}),this.epoch.push(t);for(const s in e)this.history[s]==null&&(this.history[s]=[]),this.history[s].push(e[s])}async syncData(){const t=[],e=[],s=[];for(const o in this.history){const a=this.history[o];for(let i=0;i<a.length;++i)if(typeof a[i]!="number"){const l=a[i];t.push(l.data()),e.push(o),s.push(i)}}const r=await Promise.all(t);for(let o=0;o<r.length;++o)this.history[e[o]][s[o]].dispose(),this.history[e[o]][s[o]]=r[o][0]}}class h2 extends Ao{constructor(t,e){if(super(),this.currentEpoch=0,this.yieldEvery=e||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=i2),this.yieldEvery==="never"&&t.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");Du(this.yieldEvery)&&(this.maybeWait=RT(this.maybeWait.bind(this),this.yieldEvery)),this.trainBegin=t.onTrainBegin,this.trainEnd=t.onTrainEnd,this.epochBegin=t.onEpochBegin,this.epochEnd=t.onEpochEnd,this.batchBegin=t.onBatchBegin,this.batchEnd=t.onBatchEnd,this.yield=t.onYield}async maybeWait(t,e,s){const r=[];this.yield!=null&&(await Xs(s),r.push(this.yield(t,e,s))),r.push(du()),await Promise.all(r)}async onEpochBegin(t,e){this.currentEpoch=t,this.epochBegin!=null&&(await Xs(e),await this.epochBegin(t,e))}async onEpochEnd(t,e){const s=[];this.epochEnd!=null&&(await Xs(e),s.push(this.epochEnd(t,e))),this.yieldEvery==="epoch"&&s.push(du()),await Promise.all(s)}async onBatchBegin(t,e){this.batchBegin!=null&&(await Xs(e),await this.batchBegin(t,e))}async onBatchEnd(t,e){const s=[];this.batchEnd!=null&&(await Xs(e),s.push(this.batchEnd(t,e))),this.yieldEvery==="batch"?s.push(du()):Du(this.yieldEvery)&&s.push(this.maybeWait(this.currentEpoch,t,e)),await Promise.all(s)}async onTrainBegin(t){this.trainBegin!=null&&(await Xs(t),await this.trainBegin(t))}async onTrainEnd(t){this.trainEnd!=null&&(await Xs(t),await this.trainEnd(t))}}function Mb(n,t){return n==null&&(n={}),n instanceof Ao?[n]:Array.isArray(n)&&n[0]instanceof Ao?n:oe(n).map(s=>new h2(s,t))}class Nn{constructor(){}static registerCallbackConstructor(t,e){N(t>=0&&Number.isInteger(t),()=>`Verbosity level is expected to be an integer >= 0, but got ${t}`),Nn.checkForDuplicate(e),Nn.constructors[t]==null&&(Nn.constructors[t]=[]),Nn.constructors[t].push(e)}static checkForDuplicate(t){for(const e in Nn.constructors)Nn.constructors[+e].forEach(r=>{if(r===t)throw new D("Duplicate callback constructor.")})}static clear(){Nn.constructors={}}static createCallbacks(t){const e=[];for(const s in Nn.constructors){const r=+s;t>=r&&e.push(...Nn.constructors[r])}return e.map(s=>new s)}}Nn.constructors={};function Vb(n,t,e,s,r,o,a,i,l){const c=new u2,u=[new c2,...Nn.createCallbacks(t)];n!=null&&u.push(...n),u.push(c);const h=new l2(u);return h.setParams({epochs:e,initialEpoch:s,samples:r,steps:o,batchSize:a,verbose:t,doValidation:i,metrics:l}),{callbackList:h,history:c}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function ys(n,t={},e=!1){return Ka(n,Tn.getMap().classNameMap,t,"layer",e)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function ol(n,t){return _(()=>{n.dtype!=="float32"&&(n=n.asType("float32"));const e=bt(Za(n),t,!0),s=Pd(e.shape,Ne()),r=Xe(ks(e,s));return gt(n,r)})}function Uc(n,t){return _(()=>ge(Za(xt(t,n)),-1))}function Wp(n,t){return _(()=>ge(Ze(xt(t,n)),-1))}function Up(n,t){return _(()=>{const e=xt(n,t),s=un(Ze(n),Ne(),Number.MAX_VALUE),r=Ze(gt(e,s));return P(100,ge(r,-1))})}function d2(n,t){return _(()=>{const e=un(t,Ne(),Number.MAX_VALUE),s=jn(nt(1,e)),r=un(n,Ne(),Number.MAX_VALUE),o=jn(nt(1,r));return ge(Za(xt(s,o)),-1)})}function p2(n,t){return _(()=>{const e=ks(0,xt(1,P(n,t)));return ge(Za(e),-1)})}function f2(n,t){return _(()=>{const e=ks(0,xt(1,P(n,t)));return ge(e,-1)})}function m2(n,t){return _(()=>{const e=bt(P(n,t),-1),s=Rn(P(xt(1,n),t),-1);return ks(0,nt(1,xt(s,e)))})}function g2(n,t){return _(()=>{const e=Math.log(2),s=xt(t,n),r=xt(nt(s,Wa(P(-2,s))),e);return ge(r,-1)})}function Do(n,t,e=!1){return _(()=>{if(e)t=Dc(t);else{const s=bt(t,t.shape.length-1,!0);t=gt(t,s)}return t=un(t,Ne(),1-Ne()),Ie(bt(P(n.toFloat(),jn(t)),t.shape.length-1))})}function al(n,t,e=!1){return _(()=>{const s=Va(UT(n)).toInt();t=un(t,Ne(),1-Ne());const r=t.shape,o=$d(s,r[r.length-1]).reshape(r);return Do(o,t,e)})}function y2(n,t){if(!Gt(n.shape,t.shape))throw new D(`logits and labels must have the same shape, but got shapes ${JSON.stringify(n.shape)} and ${JSON.stringify(t.shape)}`);return _(()=>{const e=t.relu(),s=t.abs().neg();return e.sub(t.mul(n)).add(s.exp().log1p())})}function Gc(n,t){return _(()=>{let e;return e=un(t,Ne(),1-Ne()),e=jn(gt(e,xt(1,e))),ge(y2(n,e),-1)})}function b2(n,t){return _(()=>{const e=un(n,Ne(),1),s=un(t,Ne(),1);return bt(P(n,jn(gt(e,s))),-1)})}function x2(n,t){return _(()=>{const e=jn(nt(Ne(),t));return ge(xt(t,P(n,e)),-1)})}function Wb(n,t){return _(()=>{const e=ol(n,-1),s=ol(t,-1),r=P(e,s);return Ie(bt(r,-1))})}const il={meanSquaredError:Uc,meanAbsoluteError:Wp,meanAbsolutePercentageError:Up,meanSquaredLogarithmicError:d2,squaredHinge:p2,hinge:f2,categoricalHinge:m2,logcosh:g2,categoricalCrossentropy:Do,sparseCategoricalCrossentropy:al,binaryCrossentropy:Gc,kullbackLeiblerDivergence:b2,poisson:x2,cosineProximity:Wb};function mu(n){if(typeof n=="string"){if(n in il)return il[n];let t=`Unknown loss ${n}`;throw n.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${n}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new D(t)}else return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Ub(n,t){return _(()=>{const e=P(.5,xn(t)),s=Ya(ls(t,e),n.dtype);return ge(xr(n,s),-1)})}function Gb(n,t){return _(()=>Ya(xr(Ji(n,-1),Ji(t,-1)),"float32"))}function w2(n,t){return _(()=>as(n.equal(1),t.equal(1)).sum().cast("float32"))}function v2(n,t){return _(()=>as(n.equal(0),t.equal(1)).sum().cast("float32"))}function $2(n,t){return _(()=>{const e=w2(n,t),s=v2(n,t),r=e.add(s);return bn(ls(r,0),e.div(r),0).cast("float32")})}function k2(n,t){return Gc(n,t)}function C2(n,t){return n.rank===t.rank&&(n=n.squeeze([n.rank-1])),t=t.argMax(-1),t.dtype!==n.dtype&&(t=t.asType(n.dtype)),xr(n,t).asType("float32")}const N2=Uc,I2=Uc,S2=Wp,T2=Wp,E2=Up,A2=Up,Hb=Do,D2=Wb,jb=al,ll={binaryAccuracy:Ub,categoricalAccuracy:Gb,precision:$2,categoricalCrossentropy:Hb,sparseCategoricalCrossentropy:jb,mse:N2,MSE:I2,mae:S2,MAE:T2,mape:E2,MAPE:A2,cosine:D2};function R2(n){if(typeof n=="string"&&n in ll)return ll[n];if(typeof n!="string"&&n!=null)return n;throw new D(`Unknown metric ${n}`)}function pi(n){if(ts(n!==null,`Unknown LossOrMetricFn ${n}`),typeof n=="string")return n;{let t;for(const e of Object.keys(il))if(il[e]===n){t=e;break}if(t!==void 0)return t;for(const e of Object.keys(ll))if(ll[e]===n){t=e;break}return t!==void 0?t:n.name}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function F2(n){const t={Adagrad:()=>Er.adagrad(.01),Adadelta:()=>Er.adadelta(1,.95,Ne()),Adam:()=>Er.adam(.001,.9,.999,Ne()),Adamax:()=>Er.adamax(.002,.9,.999,Ne(),0),RMSProp:()=>Er.rmsprop(.001,.9,0,Ne()),SGD:()=>Er.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,n in t)return t[n]();throw new D(`Unknown Optimizer ${n}`)}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const im=1*1024*1024;function lm(n,t,e=!1){if(n==null||typeof n!="object"||Object.getPrototypeOf(n)!==Object.prototype||!eh(n))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(e){const s=JSON.stringify(n);s.length>im&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${s.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${im}.`)}}function eh(n){if(n===null)return!0;if(typeof n=="object")if(Object.getPrototypeOf(n)===Object.prototype){const t=Object.keys(n);for(const e of t)if(typeof e!="string"||!eh(n[e]))return!1;return!0}else if(Array.isArray(n)){for(const t of n)if(!eh(t))return!1;return!0}else return!1;else{const t=typeof n;return t==="string"||t==="number"||t==="boolean"}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function O2(n,t,e,s=console.log){const r=L2(n),o=["Layer (type)","Output shape","Param #"];r?(t=t||65,e=e||[.45,.85,1]):(t=t||98,e=e||[.33,.55,.67,1]),e[e.length-1]<=1&&(e=e.map(u=>Math.floor(t*u)));let a;if(!r){o.push("Receives inputs"),a=[];for(const u in n.nodesByDepth)a.push(...n.nodesByDepth[u])}s("_".repeat(t)),cl(o,e,s),s("=".repeat(t));const i=n.layers;for(let u=0;u<i.length;++u)r?P2(i[u],e,s):z2(i[u],e,a,s),s((u===i.length-1?"=":"_").repeat(t));n.checkTrainableWeightsConsistency();const l=_2(n),c=rl(n.nonTrainableWeights);s(`Total params: ${l+c}`),s(`Trainable params: ${l}`),s(`Non-trainable params: ${c}`),s("_".repeat(t))}function _2(n){let t;return n.collectedTrainableWeights!=null?t=rl(n.collectedTrainableWeights):t=rl(n.trainableWeights),t}function L2(n){let t=!0;const e=[],s=[];for(const r in n.nodesByDepth)e.push(n.nodesByDepth[r]);for(const r of e){if(r.length>1||r.length===1&&r[0].inboundLayers.length>1){t=!1;break}s.push(...r)}if(t)for(const r of n.layers){let o=!1;for(const a of r.inboundNodes)if(s.indexOf(a)!==-1)if(o){t=!1;break}else o=!0;if(!t)break}return t}function cl(n,t,e=console.log){let s="";for(let r=0;r<n.length;++r)r>0&&(s=s.slice(0,s.length-1)+" "),s+=n[r],s=s.slice(0,t[r]),s+=" ".repeat(t[r]-s.length);e(s)}function P2(n,t,e){let s;try{s=JSON.stringify(n.outputShape)}catch{s="multiple"}const r=n.name,o=n.getClassName(),a=[`${r} (${o})`,s,n.countParams().toString()];cl(a,t,e)}function z2(n,t,e,s){let r;try{r=JSON.stringify(n.outputShape)}catch{r="multiple"}const o=[];for(const u of n.inboundNodes)if(!(e!=null&&e.length>0&&e.indexOf(u)===-1))for(let h=0;h<u.inboundLayers.length;++h){const d=u.inboundLayers[h].name,p=u.nodeIndices[h],f=u.tensorIndices[h];o.push(`${d}[${p}][${f}]`)}const a=n.name,i=n.getClassName(),l=o.length===0?"":o[0],c=[`${a} (${i})`,r,n.countParams().toString(),l];cl(c,t,s);for(let u=1;u<o.length;++u)cl(["","","",o[u]],t,s)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function qb(n,t,e){return(n==="inboundNodes"||n==="outputLayers"||n==="inputLayers")&&t===0&&typeof e=="string"}function nh(n,t){if(n===null)return null;if(typeof n=="string")return Zs(n);if(typeof n=="number"||typeof n=="boolean")return n;if(n instanceof Array){const e=[],s=n.length;for(let r=0;r<s;++r){const o=n[r];qb(t,r,o)?e.push(o):e.push(nh(o,t))}return e}else{const e={};for(const s of Object.keys(n)){const r=n[s];if(s==="name"&&typeof r=="string")e[s]=r;else{const o=Zs(s);e[o]=nh(r,o)}}return e}}function sh(n,t){if(n==null)return null;if(typeof n=="string")return ds(n);if(typeof n=="number"||typeof n=="boolean")return n;if(n instanceof Array){const e=[],s=n.length;for(let r=0;r<s;++r){const o=n[r];qb(t,r,o)?e.push(o):e.push(sh(o,t))}return e}else{const e={};for(const s of Object.keys(n)){const r=n[s],o=ds(s);(s==="name"||s==="className")&&typeof r=="string"?e[o]=r:e[o]=sh(r,s)}return e}}/** @license See the LICENSE file. */const Kb="3.3.0";/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function B2(n,t){if(n.dtype==null||n.dtype===t.dtype)return t;try{return ut(t,n.dtype)}catch{throw new D(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${n.name}' (${n.dtype}).`)}}class As{constructor(t){if(this.id2Value={},this.id2Mask={},this.name2Id={},t instanceof As)for(const e in t.id2Value)this.id2Value[e]=t.id2Value[e],e in t.id2Mask&&(this.id2Mask[e]=t.id2Mask[e]);else{if(t==null)return;for(const e of t)this.add(e.key,e.value)}}add(t,e,s){if(this.id2Value[t.id]==null)this.id2Value[t.id]=B2(t,e),this.name2Id[t.name]=t.id,s!=null&&(this.id2Mask[t.id]=s);else throw new D(`Duplicate key: name=${t.name}, id=${t.id}`);return this}addFeed(t){this.add(t.key,t.value)}hasKey(t){return this.id2Value[t.id]!=null}names(){return Object.keys(this.name2Id)}getValue(t){if(t instanceof ns){if(this.id2Value[t.id]==null)throw new D(`Nonexistent key: ${t.name}`);return this.id2Value[t.id]}else{const e=this.name2Id[t];if(e==null)throw new D(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Value[e]}}getMask(t){if(t instanceof ns){if(this.id2Value[t.id]==null)throw new D(`Nonexistent key: ${t.name}`);return this.id2Mask[t.id]}else{const e=this.name2Id[t];if(e==null)throw new D(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Mask[e]}}disposeMasks(){this.id2Mask!=null&&$t(this.id2Mask)}}const gu={},cm={};function wo(n,t,e,s){const r=e==null?!1:e.training,o=Array.isArray(n),a=o?n:[n],i=a.map(f=>f.name),l=[],c=t.names();for(const f of i)c.indexOf(f)!==-1?l.push(t.getValue(f)):l.push(null);const u=i.join(",")+"|"+t.names().join(",");let h,d;if(gu[u]==null){const f=M2(a,t);h=f.sorted,d=f.recipientCounts,gu[u]=h,cm[u]=d}h=gu[u],d={},r||Object.assign(d,cm[u]);const p=new As(t);for(let f=0;f<h.length;++f){const m=h[f],g=m.sourceLayer;if(g instanceof ti)continue;const y=[],b=[],$=[];let x=!1;for(const S of m.inputs){const E=p.getValue(S),R=p.getMask(S);y.push(E),b.push(R),R!=null&&(x=!0),r||(d[S.name]--,d[S.name]===0&&!t.hasKey(S)&&i.indexOf(S.name)===-1&&!E.isDisposed&&S.sourceLayer.stateful!==!0&&$.push(E))}x&&(e=e||{},e.mask=b[0]);const w=oe(g.apply(y,e));let C=null;g.supportsMasking&&(C=g.computeMask(y,b));const k=W2(m),I=Array.isArray(k)?k:[k];for(let S=0;S<I.length;++S){p.hasKey(I[S])||p.add(I[S],w[S],Array.isArray(C)?C[0]:C);const E=i.indexOf(I[S].name);E!==-1&&(l[E]=w[S])}r||$t($)}return p.disposeMasks(),o?l:l[0]}function M2(n,t){N(n!=null&&n.length>0,()=>"Expected at least one fetch, got none");let e=[],s={};if(n.length===1){const r=um(n[0],t);e=r.sorted,s=r.recipientMap}else{const r=new Set;for(const o of n){const{sorted:a,recipientMap:i}=um(o,t);for(const l of a)r.has(l.name)||(e.push(l),r.add(l.name));for(const l in i)s[l]==null&&(s[l]=new Set),i[l].forEach(c=>s[l].add(c))}}return{sorted:e,recipientCounts:V2(s)}}function V2(n){const t={};for(const e in n)t[e]=n[e].size;return t}function um(n,t){const e=new Set,s=[],r={};for(const i of t.names())e.add(i);const o=[],a=[];for(o.push(n);o.length>0;){const i=o[o.length-1];if(e.has(i.name)){o.pop();continue}const l=a[a.length-1]===o.length-1;if(i.inputs.length===0||l)o.pop(),s.push(i),e.add(i.name),l&&a.pop();else{a.push(o.length-1);for(const c of i.inputs)r[c.name]==null&&(r[c.name]=new Set),r[c.name].add(i.name),!e.has(c.name)&&o.push(c)}}return{sorted:s,recipientMap:r}}function W2(n){let t;if(n.sourceLayer.inboundNodes.length===1)t=n.sourceLayer.output;else{let e=null;for(let s=0;s<n.sourceLayer.inboundNodes.length;++s)for(const r of n.sourceLayer.inboundNodes[s].outputTensors)if(r.id===n.id){e=s;break}t=n.sourceLayer.getOutputAt(e)}return t}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Wn extends _t{constructor(t){if(super({}),this.containerNodes=new Set,this.name=t.name,this.name==null){const b=this.getClassName().toLowerCase();this.name=Vc(b)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(t.inputs)?this.inputs=t.inputs.slice():this.inputs=[t.inputs],Array.isArray(t.outputs)?this.outputs=t.outputs.slice():this.outputs=[t.outputs],Ds(this.inputs).length!==this.inputs.length)throw new D(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(b=>b.name)}`);Ds(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(b=>b.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const b of this.outputs){const $=b.sourceLayer,x=b.nodeIndex,w=b.tensorIndex;this.outputLayers.push($),this.outputLayersNodeIndices.push(x),this.outputLayersTensorIndices.push(w)}for(const b of this.inputs){const $=b.sourceLayer,x=b.nodeIndex,w=b.tensorIndex;ts(x===0,"input layer has >1 nodes"),ts(w===0,"input layer has >1 tensors"),this.inputLayers.push($),this.inputLayersNodeIndices.push(x),this.inputLayersTensorIndices.push(w)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let b=0;b<this.inputLayers.length;b++){const $=this.inputLayers[b];if(!($ instanceof ti))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${t.inputs}. Input ${b} (0-based) originates from layer type ${$.getClassName()}.`);this.inputNames.push($.name),this.feedInputShapes.push($.batchInputShape),this.feedInputNames.push($.name)}for(const b of this.outputLayers)this.outputNames.push(b.name);this.internalInputShapes=this.inputs.map(b=>b.shape),this.internalOutputShapes=this.outputs.map(b=>b.shape);const e={},s={},r={},o={},a={},i=[],l=(b,$,x,w,C,k)=>{(w==null||C==null||k==null)&&(w=b.sourceLayer,C=b.nodeIndex,k=b.tensorIndex);const I=w.inboundNodes[C];if(x.indexOf(I)!==-1)throw new En(`The tensor ${b.name} at layer "${w.name}" is part of a cycle.`);if($.indexOf(I)!==-1)return;this.containerNodes.add(Wn.nodeKey(w,C)),w.id in a||(a[w.id]=Object.keys(a).length),x.indexOf(I)===-1&&x.push(I);const S=I.inboundLayers.length;for(let E=0;E<S;E++){const R=I.inputTensors[E],L=I.inboundLayers[E],O=I.nodeIndices[E],z=I.tensorIndices[E];l(R,$,x,L,O,z)}for($.push(I);x.indexOf(I)>=0;)x.splice(x.indexOf(I),1);i.push(I)},c=[],u=[];for(const b of this.outputs)l(b,c,u);const h=i.slice().reverse();for(const b of h){s[b.id]=b,b.id in e||(e[b.id]=0);let $=e[b.id];const x=r[b.outboundLayer.id]==null?0:r[b.outboundLayer.id];$=Math.max($,x),r[b.outboundLayer.id]=$,o[b.outboundLayer.id]=b.outboundLayer,e[b.id]=$;for(let w=0;w<b.inboundLayers.length;w++){const C=b.inboundLayers[w],k=b.nodeIndices[w],I=C.inboundNodes[k],S=e[I.id]==null?0:e[I.id];e[I.id]=Math.max($+1,S),s[I.id]=I}}const d={};for(const b in e){const $=e[b];$ in d||(d[$]=[]),d[$].push(s[b])}const p={};for(const b in r){const $=r[b];$ in p||(p[$]=[]),p[$].push(o[b])}let f=Object.keys(p).map(b=>parseInt(b,10)).sort(ui);this.layers=[];for(const b of f){const $=p[b];$.sort((x,w)=>{const C=a[x.id],k=a[w.id];return C<k?-1:C>k?1:0});for(const x of $)x instanceof Wn&&this.internalContainerRefs.push(x),this.layers.push(x)}this.layersByDepth=p,f=Object.keys(d).map(b=>parseInt(b,10)).sort(ui);const m=this.inputs.slice(),g=[];for(const b of f)for(const $ of d[b]){const x=$.outboundLayer;if(x!=null){for(const w of $.inputTensors)if(m.indexOf(w)===-1)throw new En(`Graph disconnected: cannot obtain value for tensor ${w} at layer "${x.name}". The following previous layers were accessed without issue: ${g}`);for(const w of $.outputTensors)m.push(w);g.push(x.name)}}this.nodesByDepth=d;const y=this.layers.map(b=>b.name);for(const b of y){const $=y.filter(x=>x===b).length;if($!==1)throw new En(`The name "${b}" is used ${$} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(y))}this.outboundNodes=[],this.inboundNodes=[],new Wc({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(b=>null),outputMasks:this.outputs.map(b=>null),inputShapes:this.inputs.map(b=>b.shape),outputShapes:this.outputs.map(b=>b.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const t={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount===0){for(const e of this.layers)t.numDisposedVariables+=e.dispose().numDisposedVariables;for(const e of this.internalContainerRefs)t.numDisposedVariables+=e.dispose().numDisposedVariables}return t.refCountAfterDispose=this._refCount,t}get trainable(){return this.trainable_}set trainable(t){this.layers.forEach(e=>{e._trainableWeights.forEach(s=>s.trainable=t)}),this.trainable_=t}get trainableWeights(){if(this._trainableWeights.length>0)throw new D("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let t=[];for(const e of this.layers)t=t.concat(e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.layers)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const s of this.layers)e.push(...s.trainableWeights);return e.concat(t)}return t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(t,e=!0){const s={};let r=0;for(const a of this.layers)for(const i of a.weights){if(s[i.originalName]!=null)throw new D(`Duplicate weight name: ${i.originalName}`);s[i.originalName]=i,r++}const o=[];for(const a in t){let i=a;if(s[a]==null){const l=a.split("/");i=l.slice(0,-2).concat([l[l.length-1]]).join("/")}if(s[i]!=null)o.push([s[i],t[a]]);else if(e)throw new D(`Provided weight data has no target variable: ${a}`);delete s[i]}if(e){const a=[];for(const i in s)a.push(i);if(a.length>0)throw new D(`${a.length} of ${r} weights are not set: ${a}`)}Vp(o)}updatedConfig(){const t=this.getConfig(),e={};return e.className=this.getClassName(),e.config=t,e.kerasVersion=`tfjs-layers ${Kb}`,e.backend="TensorFlow.js",e}toJSON(t,e=!0){const s=sh(this.updatedConfig());return e?JSON.stringify(s):s}call(t,e){return _(()=>{t=oe(t);const s=new As;for(let r=0;r<this.inputs.length;++r)s.add(this.inputs[r],t[r]);return wo(this.outputs,s,e)})}computeMask(t,e){return _(()=>{t=oe(t);let s;return e==null?s=fr(null,t.length):s=oe(e),this.runInternalGraph(t,s)[1]})}computeOutputShape(t){const e=sl(t);if(e.length!==this.inputLayers.length)throw new D(`Invalid inputShape argument ${t}: model has ${this.inputLayers.length} tensor inputs.`);const s={};for(let i=0;i<e.length;i++){const l=this.inputLayers[i],c=e[i],u=l.name+"_0_0";s[u]=c}const r=Object.keys(this.nodesByDepth).map(i=>parseInt(i,10)).sort(ui);if(r.length>1)for(const i of r){const l=this.nodesByDepth[i];for(const c of l){const u=c.outboundLayer;if(this.inputLayers.map(m=>m.id).indexOf(u.id)!==-1)continue;const h=[];for(let m=0;m<c.inboundLayers.length;m++){const g=c.inboundLayers[m],y=c.nodeIndices[m],b=c.tensorIndices[m],$=`${g.name}_${y}_${b}`,x=s[$];h.push(x)}const d=u.computeOutputShape(sn(h)),p=sl(d),f=u.inboundNodes.indexOf(c);for(let m=0;m<p.length;m++){const g=`${u.name}_${f}_${m}`;s[g]=p[m]}}}const o=[],a=[];for(let i=0;i<this.outputLayers.length;i++){const l=this.outputLayers[i],c=this.outputLayersNodeIndices[i],u=this.outputLayersTensorIndices[i],h=`${l.name}_${c}_${u}`;a.push(h)}for(let i=0;i<a.length;i++){const l=a[i];ts(l in s),o.push(s[l])}return sn(o)}runInternalGraph(t,e){e==null&&(e=fr(null,t.length));const s={};for(let l=0;l<this.inputs.length;++l){const c=this.inputs[l],u=t[l],h=e[l];s[c.id]=[u,h]}const r=Object.keys(this.nodesByDepth).map(l=>parseInt(l,10)).sort(ui);for(const l of r){const c=this.nodesByDepth[l];for(const u of c){const h=u.outboundLayer,d=u.inputTensors,p=u.outputTensors,f=new Array;for(const m of d)m.id in s&&f.push(s[m.id]);if(f.length===d.length){let m={},g,y,b,$;if(u.callArgs!=null&&(m=u.callArgs),f.length===1){const[x,w]=f[0];m.mask==null&&(m.mask=w),b=oe(h.call(x,m)),$=oe(h.computeMask(x,w)),g=[x],y=[w]}else g=f.map(x=>x[0]),y=f.map(x=>x[1]),m.mask==null&&(m.mask=y),b=oe(h.call(g,m)),$=oe(h.computeMask(g,y));if(h.activityRegularizer)throw new kt("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let x=0;x<p.length;++x){const w=p[x],C=b[x],k=$[x];s[w.id]=[C,k]}}}}const o=[],a=[],i=[];for(const l of this.outputs){ts(l.id in s,`Could not compute output ${l.name} : ${l.id}`);const[c,u]=s[l.id];i.push(c.shape),o.push(c),a.push(u)}return[o,a,i]}buildNodeConversionMap(t){const e={};let s;for(const r of this.layers){s=r instanceof Wn?1:0;for(let o=0;o<r.inboundNodes.length;o++){const a=Wn.nodeKey(r,o);this.containerNodes.has(a)&&(e[a]=s,s+=1)}}return e}getLayer(t,e){if(e!=null){if(this.layers.length<=e)throw new D(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}else if(t==null)throw new D("Provide either a layer name or layer index");for(const s of this.layers)if(s.name===t)return s;throw new D(`No such layer: ${t}`)}calculateLosses(){return _(()=>{const t=[];for(const e of this.layers)for(let s=0;s<e.inboundNodes.length;++s){const r=Wn.nodeKey(e,s);this.containerNodes.has(r)&&t.push(...e.calculateLosses())}return t})}getConfig(){const t={name:this.name},e=this.buildNodeConversionMap(this.layers),s=[];for(const a of this.layers){const i=a.getClassName(),l=a.getConfig(),c=[];for(let h=0;h<a.inboundNodes.length;h++){const d=a.inboundNodes[h],p=Wn.nodeKey(a,h);let f={};if(this.containerNodes.has(p)){if(d.callArgs)try{JSON.stringify(d.callArgs),f=d.callArgs}catch{console.warn(`Layer ${a.name} was passed non-serializable keyword arguments: ${d.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),f={}}if(d.inboundLayers.length>0){const m=[];for(let g=0;g<d.inboundLayers.length;g++){const y=d.inboundLayers[g],b=d.nodeIndices[g],$=d.tensorIndices[g],x=Wn.nodeKey(y,b);let w=e[x];w==null&&(w=0),m.push([y.name,w,$,f])}c.push(m)}}}const u={};u.name=a.name,u.className=i,u.config=l,u.inboundNodes=c,s.push(u)}t.layers=s;const r=[];for(let a=0;a<this.inputLayers.length;a++){const i=this.inputLayers[a],l=this.inputLayersNodeIndices[a],c=Wn.nodeKey(i,l);if(!this.containerNodes.has(c))continue;let u=e[c];u==null&&(u=0);const h=this.inputLayersTensorIndices[a];r.push([i.name,u,h])}t.inputLayers=r;const o=[];for(let a=0;a<this.outputLayers.length;a++){const i=this.outputLayers[a],l=this.outputLayersNodeIndices[a],c=Wn.nodeKey(i,l);if(!this.containerNodes.has(c))continue;let u=e[c];u==null&&(u=0);const h=this.outputLayersTensorIndices[a];o.push([i.name,u,h])}return t.outputLayers=o,t}static fromConfig(t,e,s={},r=!1){const o={},a={};function i(g,y){g.name in a?a[g.name].push(y):a[g.name]=[y]}function l(g,y){const b=[];let $;for(const x of y){const w=x[0],C=x[1],k=x[2];if($=x[3]==null?{}:x[3],!(w in o)){i(g,y);return}const I=o[w];if(I.inboundNodes.length<=C){i(g,y);return}const S=I.inboundNodes[C];b.push(S.outputTensors[k])}b.length>0&&g.apply(sn(b),$)}function c(g){const y=g.name,b=ys(g,e.customObjects!=null?e.customObjects:{});b.setFastWeightInitDuringBuild(r),o[y]=b,g.inboundNodes.forEach(x=>{if(!(x instanceof Array))throw new D(`Corrupted configuration, expected array for nodeData: ${x}`);i(b,x)})}const u=e.name,h=e.layers;for(const g of h)c(g);for(;!DT(a);)for(const g of h){const y=o[g.name];if(y.name in a){const b=a[y.name];delete a[y.name];for(const $ of b)l(y,$)}}const d=[],p=[],f=e.inputLayers;for(const g of f){const y=g[0],b=g[1],$=g[2];ts(y in o);const w=o[y].inboundNodes[b].outputTensors;d.push(w[$])}const m=e.outputLayers;for(const g of m){const y=g[0],b=g[1],$=g[2];ts(y in o);const w=o[y].inboundNodes[b].outputTensors;p.push(w[$])}return new t({inputs:d,outputs:p,name:u})}get stateful(){if(this._stateful)throw new D("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const t of this.layers)if(t.stateful)return!0;return!1}resetStates(){_(()=>{this.layers.forEach(t=>{t.stateful&&t.resetStates()})})}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function U2(n,t,e){const s=t.length;if(n==null||Array.isArray(n)&&n.length===0)return t.map(r=>null);if(s===1)return Array.isArray(n)&&n.length===1?n:typeof n=="object"&&t[0]in n?[n[t[0]]]:[n];if(Array.isArray(n)){if(n.length!==s)throw new Error(`Provided ${e} is an array of ${n.length} element(s), but the model has ${s} outputs. Make sure a set of weights is provided for each model output.`);return n}else if(typeof n=="object"&&Object.keys(n).length>0&&typeof n[Object.keys(n)[0]]=="object"){const r=[];return t.forEach(o=>{o in n?r.push(n[o]):r.push(null)}),r}else throw new Error(`The model has multiple (${s}) outputs, so ${e} must be either an array with ${s} elements or an object with ${t} keys. Provided ${e} not understood: ${JSON.stringify(n)}`)}function Xb(n,t){return U2(n,t,"classWeight")}async function Yb(n,t,e,s){if(e!=null){const r=_(()=>{if(n.shape.length===1)return n.clone();if(n.shape.length===2){if(n.shape[1]>1)return n.argMax(1);if(n.shape[1]===1)return n.reshape([n.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${n.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${n.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),o=Array.from(await r.data());$t(r);const a=[];return o.forEach(i=>{if(e[i]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${i} exists in the data but not in classWeight`);a.push(e[i])}),qn(a,"float32")}else return null}function G2(n,t){return P(n,t)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const H2=32;function Jb(n,t){let e,s;const r=t;e=r.xs,s=r.ys,N(e!=null&&s!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`);const o=hm("input",n.inputNames,e),a=hm("output",n.outputNames,s),i=o[0].shape[0];N(o.length===n.inputs.length,()=>`LayersModel has ${n.inputs.length} inputs, but the dataset provides ${o.length} inputs.  (Expected input keys: ${JSON.stringify(n.inputNames)})`),N(a.length===n.outputs.length,()=>`LayersModel has ${n.outputs.length} outputs, but the dataset provides ${a.length} outputs.  (Expected output keys: ${JSON.stringify(n.outputNames)})`);for(let l=0;l<o.length;l++)N(o[l].shape[0]===i,()=>`Batch size mismatch: input ${n.inputNames[l]} has ${o[l].shape[0]}; expected  ${i} based on input ${n.inputNames[0]}.`);for(let l=0;l<a.length;l++)N(a[l].shape[0]===i,()=>`Batch size mismatch: output ${n.outputNames[l]} has ${a[l].shape[0]}; expected  ${i} based on input ${n.inputNames[0]}.`);return{xs:o,ys:a}}function hm(n,t,e){if(e instanceof pe)return[e];if(Array.isArray(e))return N(e.length===t.length,()=>`Received an array of ${e.length} Tensors, but expected ${t.length} to match the ${n} keys ${t}.`),e;{const s=[];for(const r of t){if(e[r]==null)throw new D(`The feature data generated by the dataset lacks the required ${n} key '${r}'.`);s.push(e[r])}return s}}function j2(n){if(n.length===3)throw new kt("Validation with sample weights is not implemented yet.");return{xs:n[0],ys:n[1]}}async function q2(n,t,e){const s=e.batchesPerEpoch!=null;if(N(n.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),N(e!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),N(e.epochs!=null&&e.epochs>0&&Number.isInteger(e.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${e.epochs}`),N(!s||e.batchesPerEpoch>0&&Number.isInteger(e.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${e.batchesPerEpoch}`),N(e.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),n.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");n.isTraining=!0;try{const r=e.validationData!=null;let o,a;if(r)if(dm(e.validationData))N(e.validationBatches==null||e.validationBatches>0&&Number.isInteger(e.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${e.validationBatches}`);else{const g=j2(e.validationData);o=g.xs,a=g.ys}const i=n.makeTrainFunction(),l=n.getDedupedMetricsNames();let c;r?c=l.slice().concat(l.map(g=>"val_"+g)):c=l.slice();const u=Mb(e.callbacks,e.yieldEvery),h=e.verbose==null?1:e.verbose,{callbackList:d,history:p}=Vb(u,h,e.epochs,null,null,K2(t,e),null,r,c);d.setModel(n),n.history=p,await d.onTrainBegin(),n.stopTraining_=!1;let f=e.initialEpoch==null?0:e.initialEpoch,m=await t.iterator();for(;f<e.epochs;){const g={};await d.onEpochBegin(f);let y=0,b=0;for(s||(m=await t.iterator());!s||y<e.batchesPerEpoch;){const $=await m.next();if(s&&$.done){console.warn(`You provided \`batchesPerEpoch\` as ${e.batchesPerEpoch}, but your dataset iterator ran out of data after ${y} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${e.batchesPerEpoch*e.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if($.value!=null){const{xs:x,ys:w}=Jb(n,$.value),C={};C.batch=b,C.size=x[0].shape[0],await d.onBatchBegin(b,C);const k=[];if(e.classWeight!=null){const E=Xb(e.classWeight,n.outputNames);for(let R=0;R<E.length;++R)k.push(await Yb(w[R],null,E[R]))}const I=x.concat(w).concat(k),S=i(I);$t(I);for(let E=0;E<l.length;++E){const R=l[E],L=S[E];C[R]=L,Ve(L)}await d.onBatchEnd(b,C),Bb(C),b++,y++}if(s?y>=e.batchesPerEpoch:$.done){if(r){let x;dm(e.validationData)?x=oe(await n.evaluateDataset(e.validationData,{batches:e.validationBatches})):x=oe(n.evaluate(o,a,{batchSize:e.validationBatchSize==null?H2:e.validationBatchSize,verbose:0}));for(let w=0;w<n.metricsNames.length;++w)g[`val_${n.metricsNames[w]}`]=x[w]}break}if(n.stopTraining_)break}if(await d.onEpochEnd(f,g),f++,n.stopTraining_)break}return await d.onTrainEnd(),await n.history.syncData(),n.history}finally{n.isTraining=!1}}function K2(n,t){let e=null;return t.batchesPerEpoch!=null?e=t.batchesPerEpoch:Number.isFinite(n.size)&&(e=n.size),e}function dm(n){return typeof n.iterator=="function"}function X2(n){return typeof n.next=="function"}async function Y2(n,t,e){e=e||{};const s=e.batches!=null,r=n.testFunction;let o=[];if(e.verbose>0)throw new kt("Verbose mode is not implemented yet.");N(!s||e.batches>0&&Number.isInteger(e.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(e.batches)}`);const a=X2(t)?t:await t.iterator();let i=0,l=0;for(;!s||l<e.batches;){const c=await a.next();if(o=_(()=>{if(c.value){const{xs:u,ys:h}=Jb(n,c.value),d=u.concat(h),p=_(()=>r(d));if($t(d),l===0)for(let m=0;m<p.length;++m)o.push(Nt(0));const f=d[0].shape[0];for(let m=0;m<p.length;++m){const g=p[m],y=o[m];o[m]=_(()=>nt(o[m],P(f,g))),l>0&&$t(y)}$t(p),i+=f,++l}return o}),c.done){s&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${e.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let c=0;c<o.length;++c){const u=o[c];o[c]=gt(o[c],i),$t(u)}return sn(o)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function rh(n){N(n>0&&Number.isInteger(n),()=>`batchSize is required to be a positive integer, but got ${n}`)}function vo(n,t,e){return n==null?[null]:Array.isArray(n)?n.map(s=>lr(s,t,e-t)):lr(n,t,e-t)}function Gp(n,t){return _(()=>n==null?null:Array.isArray(n)?n.map(e=>Gp(e,t)):Tb(n,t.dtype==="int32"?t:t.toInt()))}function oh(n,t){const e=[];let s=0,r=null;for(;s<n;)r=s+t,r>=n&&(r=n),e.push([s,r]),s=r;return e}async function J2(n,t,e,s,r,o,a,i,l,c,u,h,d,p,f){r==null&&(r=32),o==null&&(o=1),u==null&&(u=!0),d==null&&(d=0);let m=!1;l!=null&&c!=null&&(m=!0);const g=n.checkNumSamples(e,r,p,"steps_per_epoch");let y;g!=null&&(y=Yn(0,g)),a==null&&(a=1);const{callbackList:b,history:$}=Vb(i,a,o,d,g,p,r,m,h);b.setModel(n),n.history=$,await b.onTrainBegin(),n.stopTraining_=!1;for(let x=d;x<o;++x){await b.onEpochBegin(x);const w={};{if(u==="batch")throw new kt("batch shuffling is not implemneted yet");u&&Tw(y);const C=qn(y),k=oh(g,r);for(let I=0;I<k.length;++I){const S={};if(await b.onBatchBegin(I,S),_(()=>{const E=k[I][0],R=k[I][1],L=lr(C,E,R-E);S.batch=I,S.size=R-E;const O=Gp(e,L),z=t(O);for(let M=0;M<s.length;++M){const V=s[M],K=z[M];S[V]=K,Ve(K)}if(I===k.length-1&&m){const M=n.testLoop(l,c,r);for(let V=0;V<s.length;++V){const K=s[V],G=M[V];Ve(G),w["val_"+K]=G}}}),await b.onBatchEnd(I,S),Bb(S),n.stopTraining_)break}C.dispose()}if(await b.onEpochEnd(x,w),n.stopTraining_)break}return await b.onTrainEnd(),await n.history.syncData(),n.history}async function Z2(n,t,e,s={}){if(n.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");n.isTraining=!0;let r,o,a,i,l,c,u;try{const h=s.batchSize==null?32:s.batchSize;rh(h);const p=await n.standardizeUserData(t,e,s.sampleWeight,s.classWeight,!1,h);r=p[0],o=p[1],u=p[2];let f=!1,m;if(s.validationData!=null&&s.validationData.length>0){if(f=!0,s.validationData.length===2)a=s.validationData[0],i=s.validationData[1];else throw s.validationData.length===3?new kt("validationData including sample weights is not supported yet."):new D(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${s.validationData} is invalid.`);const I=await n.standardizeUserData(a,i,null,null,!0,h);l=I[0],c=I[1],m=l.concat(c)}else if(s.validationSplit!=null&&s.validationSplit>0&&s.validationSplit<1){f=!0;const k=Math.floor(r[0].shape[0]*(1-s.validationSplit)),I=r[0].shape[0];l=vo(r,k,I),r=vo(r,0,k),c=vo(o,k,I),o=vo(o,0,k),m=l.concat(c)}else s.validationSteps!=null&&(f=!0);const g=r.concat(o).concat(u);n.checkTrainableWeightsConsistency();const y=n.makeTrainFunction(),b=n.getDedupedMetricsNames();let $,x;f?(n.makeTestFunction(),$=n.testFunction,x=b.slice().concat(b.map(k=>"val_"+k))):($=null,m=[],x=b.slice());const w=Mb(s.callbacks,s.yieldEvery);return await J2(n,y,g,b,h,s.epochs,s.verbose,w,$,m,s.shuffle,x,s.initialEpoch,null,null)}finally{n.isTraining=!1,er(r,t),er(o,e),er(l,a),er(c,i),u!=null&&$t(u)}}function Zb(n){const t=[];n instanceof pe&&(n=[n]);for(let e=0;e<n.length;++e){const s=n[e];if(s.rank===1)t.push(Ja(s,1));else{if(s.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(s)}}return t}function er(n,t){if(n==null)return;const e=[];if(t instanceof pe)e.push(t.id);else if(Array.isArray(t))t.forEach(r=>e.push(r.id));else if(t!=null)for(const r in t){const o=t[r];e.push(o.id)}const s=[];if(n instanceof pe)e.indexOf(n.id)===-1&&s.push(n);else if(Array.isArray(n))n.forEach(r=>{e.indexOf(r.id)===-1&&s.push(r)});else if(n!=null)for(const r in n){const o=n[r];e.indexOf(o.id)===-1&&s.push(o)}s.forEach(r=>{r.isDisposed||r.dispose()})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Q2(n){return n instanceof pe}function ah(n){return Array.isArray(n)}function pm(n){return!Q2(n)&&!ah(n)}function fm(n,t,e,s=!0,r=""){if(t==null||t.length===0){if(n!=null){let a=!1;if(ah(n)&&n.length>0)a=!0;else if(pm(n)){for(const i in n)if(n.hasOwnProperty(i)){a=!0;break}}else a=!0;if(a)throw new D(`Error when checking model ${r} expected no data, but got ${n}`)}return[]}if(n==null)return t.map(a=>null);let o;if(pm(n)){n=n,o=[];for(const a of t){if(n[a]==null)throw new D(`No data provided for "${a}". Need data for each key in: ${t}`);o.push(n[a])}}else if(ah(n)){if(n=n,n.length!==t.length)throw new D(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${n}`);o=n}else{if(n=n,t.length>1)throw new D(`The model ${r} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${n.shape}`);o=[n]}if(o=Zb(o),e!=null)for(let a=0;a<t.length;++a){if(e[a]==null)continue;const i=o[a];if(i.shape.length!==e[a].length)throw new D(`Error when checking ${r}: expected ${t[a]} to have ${e[a].length} dimension(s). but got array with shape ${i.shape}`);for(let l=0;l<e[a].length;++l){if(l===0&&!s)continue;const c=i.shape[l],u=e[a][l];if(u!=null&&u>=0&&c!==u)throw new D(`Error when checking ${r}: expected ${t[a]} to have shape [${e[a]}], but got array with shape [${i.shape}].`)}}return o}function tE(n,t,e){const s=Ds(n.map(o=>o.shape[0]));s.sort();const r=Ds(t.map(o=>o.shape[0]));if(r.sort(),s.length>1)throw new D(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(n.map(o=>o.shape))}`);if(r.length>1)throw new D(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map(o=>o.shape))}`);if(s.length>0&&r.length>0&&!Gt(s,r))throw new D(`Input Tensors should have the same number of samples as target Tensors. Found ${s[0]} input sample(s) and ${r[0]} target sample(s).`)}function eE(n,t,e){const s=[Uc,Gc,Do];for(let r=0;r<n.length;++r){const o=n[r],a=t[r],i=e[r];if(a!=null){if(a===Do&&o.shape[o.shape.length-1]===1)throw new D(`You are passing a target array of shape ${o.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(s.indexOf(a)!==-1){const l=o.shape.slice(1),c=i.slice(1);for(let u=0;u<l.length;++u){const h=l[u],d=c[u];if(d!=null&&h!==d)throw new D(`A target Tensor with shape ${o.shape} was passed for an output of shape ${i}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function mm(n,t,e,s=!0,r=""){let o;if(Array.isArray(n)){if(n.length!==t.length)throw new D(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${n.length} Tensors(s).`);o=n}else{if(t.length>1)throw new D(`The model expects ${t.length} ${r} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(n.shape)}.`);o=[n]}if(e!=null)for(let a=0;a<t.length;++a){if(e[a]==null)continue;const i=o[a];if(i.shape.length!==e[a].length)throw new D(`Error when checking ${r}: expected ${t[a]} to have ${e[a].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let l=0;l<e[a].length;++l){if(l===0&&!s)continue;const c=i.shape[l],u=e[a][l];if(u!=null&&u!==c)throw new D(`Error when checking ${r}: expected ${t[a]} to have shape ${JSON.stringify(e[a])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}function nE(n,t){if(n==null||Array.isArray(n)&&n.length===0)return t.map(s=>[]);let e;if(typeof n=="string"||typeof n=="function")e=[n];else if(Array.isArray(n)||typeof n=="object")e=n;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${n}`);if(Array.isArray(e))return t.map(s=>e);{const s=[];for(const r of t){let o=e.hasOwnProperty(r)?e[r]:[];Array.isArray(o)||(o=[o]),s.push(o)}return s}}const sE="layers-model";class Pr extends Wn{constructor(t){super(t),this.isTraining=!1}summary(t,e,s=console.log){if(!this.built)throw new D("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");O2(this,t,e,s)}compile(t){if(t.loss==null&&(t.loss=[]),this.loss=t.loss,typeof t.optimizer=="string")this.optimizer_=F2(t.optimizer),this.isOptimizerOwned=!0;else{if(!(t.optimizer instanceof Hs))throw new D("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=t.optimizer,this.isOptimizerOwned=!1}let e=[];if(!Array.isArray(t.loss)&&typeof t.loss!="string"&&typeof t.loss!="function"){t.loss=t.loss;for(const a in t.loss)if(this.outputNames.indexOf(a)===-1)throw new D(`Unknown entry in loss dictionary: "${a}". Only expected the following keys: ${this.outputNames}`);for(const a of this.outputNames)t.loss[a]==null&&console.warn(`Output "${a}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${a} during training`),e.push(mu(t.loss[a]))}else if(Array.isArray(t.loss)){if(t.loss.length!==this.outputs.length)throw new D(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${t.loss}.`);e=t.loss.map(i=>mu(i))}else{const a=mu(t.loss);this.outputs.forEach(i=>{e.push(a)})}this.lossFunctions=e,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let a=0;a<this.outputs.length;++a){const i=this.internalOutputShapes[a],l=this.outputNames[a];this.feedOutputNames.push(l),this.feedOutputShapes.push(i),this.feedLossFns.push(this.lossFunctions[a])}const s=[];this.metrics=t.metrics,this.metricsNames=["loss"],this.metricsTensors=[],ir("loss",()=>{for(let a=0;a<this.outputs.length;++a){if(s.indexOf(a)!==-1)continue;const i=this.lossFunctions[a];this.outputs.length>1&&(this.metricsTensors.push([i,a]),this.metricsNames.push(this.outputNames[a]+"_loss"))}});const r=nE(t.metrics,this.outputNames),o=(a,i,l)=>{this.outputNames.length>1&&(i=this.outputNames[a]+"_"+i),this.metricsNames.push(i),this.metricsTensors.push([l,a])};ir("metric",()=>{for(let a=0;a<this.outputs.length;++a){if(s.indexOf(a)!==-1)continue;const i=r[a];(c=>{let h,d,p;for(const f of c){if(typeof f=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(f)!==-1){const g=this.internalOutputShapes[a];g[g.length-1]===1||this.lossFunctions[a]===Gc?["accuracy","acc"].indexOf(f)!==-1?d=Ub:["crossentropy","ce"].indexOf(f)!==-1&&(d=k2):this.lossFunctions[a]===al?["accuracy","acc"].indexOf(f)!==-1?d=C2:["crossentropy","ce"].indexOf(f)!==-1&&(d=jb):["accuracy","acc"].indexOf(f)!==-1?d=Gb:["crossentropy","ce"].indexOf(f)!==-1&&(d=Hb);let y;["accuracy","acc"].indexOf(f)!==-1?y="acc":["crossentropy","ce"].indexOf(f)!==-1&&(y="ce"),p=d,h=""+y}else p=R2(f),h=""+pi(f);let m;ir(h,()=>{m=p}),o(a,h,m)}})(i)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(t,e,s={}){const r=s.batchSize==null?32:s.batchSize;rh(r);const a=this.standardizeUserDataXY(t,e,!0,r);try{const i=a[0].concat(a[1]);this.makeTestFunction();const l=this.testFunction,c=this.testLoop(l,i,r,s.verbose,s.steps);return sn(c)}finally{er(a[0],t),er(a[1],e)}}async evaluateDataset(t,e){return this.makeTestFunction(),Y2(this,t,e)}checkNumSamples(t,e,s,r="steps"){let o;if(s!=null){if(o=null,e!=null)throw new D(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${e}`)}else if(t!=null)Array.isArray(t)?o=t[0].shape[0]:o=t.shape[0];else throw new D(`Either the input data should have a defined shape, or ${r} shoud be specified.`);return o}execute(t,e){if(Array.isArray(e)&&e.length===0)throw new D("`outputs` is an empty Array, which is not allowed.");const s=Array.isArray(e),r=s?e:[e],o=this.retrieveSymbolicTensors(r),a=new As;if(t instanceof pe&&(t=[t]),Array.isArray(t)){if(t.length!==this.inputs.length)throw new D(`The number of inputs provided (${t.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let l=0;l<this.inputs.length;++l)a.add(this.inputs[l],t[l])}else for(const l of this.inputs){const c=t[l.name];if(c==null)throw new D(`No value is provided for the model's input ${l.name}`);a.add(l,c)}const i=wo(o,a);return s?i:i[0]}retrieveSymbolicTensors(t){const e=fr(null,t.length);let s=t.length;for(const r of this.layers){const o=Array.isArray(r.output)?r.output:[r.output],a=o.map(i=>i.name);for(let i=0;i<t.length;++i){const l=a.indexOf(t[i]);if(l!==-1&&(e[i]=o[l],s--),s===0)break}if(s===0)break}if(s>0){const r=[];throw e.forEach((o,a)=>{o==null&&r.push(t[a])}),new D(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(r)}`)}return e}predictLoop(t,e=32,s=!1){return _(()=>{const r=this.checkNumSamples(t);if(s)throw new kt("Verbose predictLoop() is not implemented yet.");const o=oh(r,e),a=this.outputs.map(i=>[]);for(let i=0;i<o.length;++i)_(()=>{const c=o[i][0],u=o[i][1],h=vo(t,c,u),d=[];if(Array.isArray(h))for(let f=0;f<h.length;++f)d.push({key:this.inputs[f],value:h[f]});else d.push({key:this.inputs[0],value:h});const p=new As(d);return wo(this.outputs,p)}).forEach((c,u)=>a[u].push(c));return sn(a.map(i=>Ue(i,0)))})}predict(t,e={}){const s=Zb(t);mm(s,this.inputNames,this.feedInputShapes,!1);try{const r=e.batchSize==null?32:e.batchSize;return rh(r),this.predictLoop(s,r)}finally{er(s,t)}}predictOnBatch(t){mm(t,this.inputNames,this.feedInputShapes,!0);const e=(Array.isArray(t)?t[0]:t).shape[0];return this.predictLoop(t,e)}standardizeUserDataXY(t,e,s=!0,r){if(this.optimizer_==null)throw new En("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const o=[];for(let a=0;a<this.feedOutputShapes.length;++a){const i=this.feedOutputShapes[a];this.feedLossFns[a]===al?o.push(i.slice(0,i.length-1).concat([1])):o.push(i)}if(t=fm(t,this.feedInputNames,this.feedInputShapes,!1,"input"),e=fm(e,this.feedOutputNames,o,!1,"target"),tE(t,e),eE(e,this.feedLossFns,this.feedOutputShapes),this.stateful&&r!=null&&r>0&&t[0].shape[0]%r!==0)throw new D(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${t[0].shape[0]} sample(s).`);return[t,e]}async standardizeUserData(t,e,s,r,o=!0,a){const[i,l]=this.standardizeUserDataXY(t,e,o,a);if(s!=null)throw new Error("sample weight is not supported yet.");let c=null;if(r!=null){const u=Xb(r,this.outputNames);c=[];for(let h=0;h<u.length;++h)c.push(await Yb(l[h],null,u[h]))}return[i,l,c]}testLoop(t,e,s,r=0,o){return _(()=>{const a=this.checkNumSamples(e,s,o,"steps"),i=[];if(r>0)throw new kt("Verbose mode is not implemented yet.");if(o!=null)throw new kt("steps mode in testLoop() is not implemented yet");{const l=oh(a,s),c=qn(Yn(0,a));for(let u=0;u<l.length;++u){const h=l[u][0],d=l[u][1],p=lr(c,h,d-h),f=Gp(e,p),m=t(f);if(u===0)for(let g=0;g<m.length;++g)i.push(Nt(0));for(let g=0;g<m.length;++g){const y=m[g];i[g]=nt(i[g],P(d-h,y))}}for(let u=0;u<i.length;++u)i[u]=gt(i[u],a)}return i})}getDedupedMetricsNames(){const t=this.metricsNames,e=[];for(let s=0;s<t.length;++s){const r=t[s];let o=r;if(Zf(t,r)>1){const a=Zf(t.slice(0,s),r);o+=`_${a}`}e.push(o)}return e}makeTrainFunction(){return t=>{const e=[],s=t.slice(0,this.inputs.length),r=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),o=t.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),a=[],i=()=>{const h=[];for(let m=0;m<this.inputs.length;++m)h.push({key:this.inputs[m],value:s[m]});const d=new As(h),p=wo(this.outputs,d,{training:!0});let f;for(let m=0;m<this.lossFunctions.length;++m){const g=this.lossFunctions[m];let y=g(r[m],p[m]);o[m]!=null&&(y=G2(y,o[m]));const b=ge(y);e.push(b),m===0?f=y:f=nt(f,y)}for(let m=0;m<this.metricsTensors.length;++m){let g;if(this.outputs.length>1&&m<this.outputs.length)g=e[m];else{const y=this.metricsTensors[m][0],b=this.metricsTensors[m][1];g=ge(y(r[b],p[b]))}Ve(g),a.push(g)}return f=ge(f),this.calculateLosses().forEach(m=>{f=nt(f,m)}),f},l=this.collectedTrainableWeights.map(h=>h.read());return[this.optimizer_.minimize(i,!0,l)].concat(a)}}makeTestFunction(){this.testFunction=t=>_(()=>{const e=[];let s;const r=t.slice(0,this.inputs.length),o=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=[];for(let c=0;c<this.inputs.length;++c)a.push({key:this.inputs[c],value:r[c]});const i=new As(a),l=wo(this.outputs,i);for(let c=0;c<this.lossFunctions.length;++c){const u=this.lossFunctions[c],h=ge(u(o[c],l[c]));c===0?s=h:s=nt(s,h),e.push(s)}for(let c=0;c<this.metricsTensors.length;++c){const u=this.metricsTensors[c][0],h=this.metricsTensors[c][1],d=ge(u(o[h],l[h]));e.push(d)}return e})}async fit(t,e,s={}){return Z2(this,t,e,s)}async fitDataset(t,e){return q2(this,t,e)}async trainOnBatch(t,e){const s=await this.standardizeUserData(t,e),r=s[0],o=s[1],i=this.makeTrainFunction()(r.concat(o)),l=[];for(const c of i){const u=await c.data();l.push(u[0])}return $t(i),sn(l)}getNamedWeights(t){const e=[],s=t!=null&&t.trainableOnly,r=s?this.trainableWeights:this.weights,o=this.getWeights(s);for(let a=0;a<r.length;++a)s&&!r[a].trainable||e.push({name:r[a].originalName,tensor:o[a]});return e}set stopTraining(t){this.stopTraining_=t}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(t){this.optimizer_!==t&&(this.optimizer_=t,this.isOptimizerOwned=!1)}dispose(){const t=super.dispose();if(t.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){const e=Of().numTensors;this.optimizer_.dispose(),t.numDisposedVariables+=e-Of().numTensors}return t}getLossIdentifiers(){let t;if(typeof this.loss=="string")t=ds(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if(typeof e!="string")throw new Error("Serialization of non-string loss is not supported.");t=this.loss.map(e=>ds(e))}else{const e=Object.keys(this.loss);t={};const s=this.loss;for(const r of e)if(typeof s[r]=="string")t[r]=ds(s[r]);else throw new Error("Serialization of non-string loss is not supported.")}return t}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[ds(pi(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(t=>ds(pi(t)));{const t={};for(const e in this.metrics)t[e]=ds(pi(this.metrics[e]));return t}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(t){if(t.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(t.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(t.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");const e=nh(t.optimizer_config),s=ys(e);let r;if(typeof t.loss=="string")r=Zs(t.loss);else if(Array.isArray(t.loss))r=t.loss.map(a=>Zs(a));else if(t.loss!=null){r={};for(const a in t.loss)r[a]=Zs(t.loss[a])}let o;if(Array.isArray(t.metrics))o=t.metrics.map(a=>Zs(a));else if(t.metrics!=null){o={};for(const a in t.metrics)o[a]=Zs(t.metrics[a])}this.compile({loss:r,metrics:o,optimizer:s})}async save(t,e){if(typeof t=="string"){const c=Xg(t);if(c.length===0)throw new D(`Cannot find any save handlers for URL '${t}'`);if(c.length>1)throw new D(`Found more than one (${c.length}) save handlers for URL '${t}'`);t=c[0]}if(t.save==null)throw new D("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const s=await Tf(this.getNamedWeights(e)),i={modelTopology:this.toJSON(null,!1),format:sE,generatedBy:`TensorFlow.js tfjs-layers v${Kb}`,convertedBy:null};if((e==null?!1:e.includeOptimizer)&&this.optimizer!=null){i.trainingConfig=this.getTrainingConfig();const c="optimizer",{data:u,specs:h}=await Tf(await this.optimizer.getWeights(),c);s.specs.push(...h),s.data=Kg([s.data,u])}return this.userDefinedMetadata!=null&&(lm(this.userDefinedMetadata,this.name,!0),i.userDefinedMetadata=this.userDefinedMetadata),i.weightData=s.data,i.weightSpecs=s.specs,t.save(i)}setUserDefinedMetadata(t){lm(t,this.name),this.userDefinedMetadata=t}getUserDefinedMetadata(){return this.userDefinedMetadata}}Pr.className="Model";Y(Pr);class Qb extends Pr{}Qb.className="Functional";Y(Qb);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Ro extends Pr{constructor(t){if(super({inputs:[],outputs:[]}),t=t||{},this.trainable=!0,this.built=!1,this.name=t.name!=null?t.name:Vc("sequential_"),t.layers!=null)for(const e of t.layers)this.add(e)}checkShape(t){if(t.inboundNodes[0].outputTensors[0].shape.some(s=>s<0))throw new D(`Negative dimension size caused by adding layer ${t.name} with input shape [${t.inboundNodes[0].inputTensors[0].shape}]`)}add(t){const e=t instanceof Ro||t instanceof Pr;let s;if(e){if(s=t,s.outputs.length!==1)throw new D("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(s.inputs.length!==1)throw new D("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(t.inboundNodes.length===0){if(t.batchInputShape==null)throw new D("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const r=a2({batchShape:t.batchInputShape,dtype:t.dtype,name:t.name+"_input"});t.apply(r)}if(e)this.outputs=s.outputs,this.inputs=s.inputs;else{if(t.inboundNodes.length!==1)throw new D(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${t.name} which has ${t.inboundNodes.length} pre-existing inbound connections.`);if(t.inboundNodes[0].outputTensors.length!==1)throw new D("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[t.inboundNodes[0].outputTensors[0]],this.inputs=zb(this.outputs[0])}this.inboundNodes=[],new Wc({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:fr(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(r=>r.shape),outputShapes:this.outputs[0].shape})}else{const r=t.apply(this.outputs[0]);if(Array.isArray(r))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[r],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(t),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const t=this.layers.length-1;this.layers[t].outboundNodes=[],this.outputs=[this.layers[t].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(t,e){return this.model==null&&this.build(),this.model.call(t,e)}build(t){if(ee(t),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Pr({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(t,e,s=console.log){this.built||this.build(),super.summary(t,e,s)}setWeights(t){this.model==null&&this.build(),this.model.setWeights(t)}evaluate(t,e,s={}){if(!this.built)throw new En("The model needs to be compiled before being used.");return this.model.evaluate(t,e,s)}async evaluateDataset(t,e){if(!this.built)throw new En("The model needs to be compiled before being used.");return this.model.evaluateDataset(t,e)}predict(t,e={}){return this.model==null&&this.build(),this.model.predict(t,e)}predictOnBatch(t){return this.model==null&&this.build(),this.model.predictOnBatch(t)}compile(t){this.build(),this.model.compile(t),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(t){this.model.optimizer=t}async fit(t,e,s={}){if(!this.built)throw new En("The model needs to be compiled before being used.");return this.model.fit(t,e,s)}async fitDataset(t,e){if(!this.built)throw new En("The model needs to be compiled before being used.");return this.model.fitDataset(t,e)}async trainOnBatch(t,e){return this.model.trainOnBatch(t,e)}static fromConfig(t,e,s={},r=!1){let o,a={};if(e instanceof Array){if(e[0].className==null||e[0].className==="Merge")throw new D("Legacy serialization format not supported yet.");o=e}else N(e.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),o=e.layers,delete e.layers,a=e;const i=new t(a);if(!(i instanceof Ro))throw new kt(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(const l of o){const u=ys(l,void 0,r);r&&u.setFastWeightInitDuringBuild(!0),i.add(u)}return i}set stopTraining(t){if(this.model==null)throw new D("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=t}get stopTraining(){if(this.model==null)throw new D("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const t=[];for(const e of this.layers){const s={};s.className=e.getClassName(),s.config=e.getConfig(),t.push(s)}return{name:this.name,layers:t}}}Ro.className="Sequential";Y(Ro);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let pn=class extends Qr{getConfig(){return{}}};class tx extends pn{apply(t,e=1){return HT(t,e)}}tx.className="elu";Y(tx);class ex extends pn{apply(t){return Kd(t)}}ex.className="selu";Y(ex);class nx extends pn{apply(t){return vr(t)}}nx.className="relu";Y(nx);class sx extends pn{apply(t){return _(()=>Sc(6,vr(t)))}}sx.className="relu6";Y(sx);class rx extends pn{apply(t){return t}}rx.className="linear";Y(rx);class ox extends pn{apply(t){return to(t)}}ox.className="sigmoid";Y(ox);class ax extends pn{apply(t){return qT(t)}}ax.className="hardSigmoid";Y(ax);class ix extends pn{apply(t){return Wa(t)}}ix.className="softplus";Y(ix);class lx extends pn{apply(t){return jT(t)}}lx.className="softsign";Y(lx);class cx extends pn{apply(t){return Dd(t)}}cx.className="tanh";Y(cx);let Hp=class extends pn{apply(t,e=-1){return Dc(t,e)}};Hp.className="softmax";Y(Hp);class ux extends pn{apply(t,e=-1){return Md(t,e)}}ux.className="logSoftmax";Y(ux);class hx extends pn{apply(t,e=1){return _(()=>to(t.mul(e)).mul(t))}}hx.className="swish";Y(hx);function zs(n){return n.getClassName()}function yu(n,t={}){return Ka(n,Tn.getMap().classNameMap,t,"activation")}function Bs(n){if(n==null){const t={};return t.className="linear",t.config={},yu(t)}if(typeof n=="string"){const t={};return t.className=n,t.config={},yu(t)}else return n instanceof pn?n:yu(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function rE(n){if(n!=null&&typeof n!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${n}`)}class dx extends Qr{}class px extends dx{constructor(t){super(),rE(t),this.l1=t==null||t.l1==null?.01:t.l1,this.l2=t==null||t.l2==null?.01:t.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(t){return _(()=>{let e=xe([1]);return this.hasL1&&(e=nt(e,bt(P(this.l1,Ze(t))))),this.hasL2&&(e=nt(e,bt(P(this.l2,Za(t))))),e.asScalar()})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(t,e){return new t({l1:e.l1,l2:e.l2})}}px.className="L1L2";Y(px);const gm={l1l2:"L1L2"};function te(n){return Ap(n)}function ym(n,t={}){return Ka(n,Tn.getMap().classNameMap,t,"regularizer")}function ie(n){if(n==null)return null;if(typeof n=="string"){const e={className:n in gm?gm[n]:n,config:{}};return ym(e)}else return n instanceof dx?n:ym(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class fx extends _t{constructor(t){super(t??{}),this.supportsMasking=!0,t!=null&&(this.maxValue=t.maxValue)}call(t,e){t=Ct(t);let s=vr(t);return this.maxValue!=null&&(s=un(s,0,this.maxValue)),s}computeOutputShape(t){return t}getConfig(){const t={maxValue:this.maxValue},e=super.getConfig();return Object.assign(t,e),t}}fx.className="ReLU";Y(fx);class mx extends _t{constructor(t){super(t??{}),this.DEFAULT_ALPHA=.3,t==null&&(t={}),this.alpha=t.alpha==null?this.DEFAULT_ALPHA:t.alpha}call(t,e){const s=Ct(t);return Cc(s,this.alpha)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}mx.className="LeakyReLU";Y(mx);class gx extends _t{constructor(t){if(super(t??{}),this.DEFAULT_ALPHA_INITIALIZER="zeros",t==null&&(t={}),this.supportsMasking=!0,this.alphaInitializer=ae(t.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=ie(t.alphaRegularizer),this.alphaConstraint=Te(t.alphaConstraint),t.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(t.sharedAxes))this.sharedAxes=t.sharedAxes;else if(typeof t.sharedAxes=="number")this.sharedAxes=[t.sharedAxes];else throw new D(`Expected sharedAxes to be a number or an array of numbers, but got ${t.sharedAxes}`)}build(t){t=ee(t);const e=t.slice(1);if(this.sharedAxes!=null)for(const r of this.sharedAxes)e[r-1]=1;this.alpha=this.addWeight("alpha",e,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const s={};if(this.sharedAxes!=null)for(let r=1;r<t.length;++r)s[r]=t[r];this.inputSpec=[new We({ndim:t.length,axes:s})],this.built=!0}call(t,e){return t=Ct(t),Ac(t,this.alpha.read())}getConfig(){const t={alphaInitializer:he(this.alphaInitializer),alphaRegularizer:te(this.alphaRegularizer),alphaConstraint:Se(this.alphaConstraint),sharedAxes:this.sharedAxes},e=super.getConfig();return Object.assign(t,e),t}}gx.className="PReLU";Y(gx);let yx=class extends _t{constructor(t){if(super(t??{}),this.DEFAULT_ALPHA=1,t==null&&(t={}),t.alpha!=null&&t.alpha!==this.DEFAULT_ALPHA)throw new kt(`Non-default alpha value (${t.alpha}) is not supported by the ELU layer yet.`);this.alpha=t.alpha==null?this.DEFAULT_ALPHA:t.alpha}call(t,e){const s=Ct(t);return Ma(s)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}};yx.className="ELU";Y(yx);class bx extends _t{constructor(t){super(t??{}),this.DEFAULT_THETA=1,t==null&&(t={}),this.theta=t.theta==null?this.DEFAULT_THETA:t.theta}call(t,e){const s=Ct(t);return s.mul(Ya(s.greater(this.theta),"float32"))}computeOutputShape(t){return t}getConfig(){const t={theta:this.theta},e=super.getConfig();return Object.assign(t,e),t}}bx.className="ThresholdedReLU";Y(bx);class xx extends _t{constructor(t){super(t??{}),this.DEFAULT_AXIS=1,t==null&&(t={}),this.softmax=new Hp().apply,this.axis=t.axis==null?this.DEFAULT_AXIS:t.axis}call(t,e){const s=Ct(t);return this.softmax(s,this.axis)}computeOutputShape(t){return t}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}xx.className="Softmax";Y(xx);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function zr(n,t,e){if(typeof n=="number")return fr(n,t);if(n.length!==t)throw new D(`The ${e} argument must be an integer or tuple of ${t} integers. Received: ${n.length} elements.`);for(let s=0;s<t;++s){const r=n[s];if(!VT(r))throw new D(`The ${e} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(n)} including a non-integer number ${r}`)}return n}function Gn(n,t,e,s,r=1){if(n==null)return n;const o=t+(t-1)*(r-1);let a;return e==="same"?a=n:a=n-o+1,Math.floor((a+s-1)/s)}function fi(n,t,e,s){if(n==null)return null;if(s==="valid")n=n*t+Ps([e-t,0]);else if(s==="same")n=n*t;else throw new D(`Unsupport padding mode: ${s}.`);return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function jp(n,t){return _(()=>(be(t),t==="channelsFirst"?Kt(n,[0,2,3,1]):n))}function wx(n,t){return _(()=>(be(t),t==="channelsFirst"?Kt(n,[0,2,3,4,1]):n))}function oE(n,t,e,s=1,r="valid",o,a=1){return _(()=>{if(o==null&&(o=Xn()),be(o),n.shape.length!==3)throw new D(`The input of a conv1dWithBias operation should be 3, but is ${n.shape.length} instead.`);if(t.shape.length!==3)throw new D(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(e!=null&&e.shape.length!==1)throw new D(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if(o==="channelsFirst"&&(n=Kt(n,[0,2,1])),r==="causal")throw new kt("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let i=Rd(n,t,s,r==="same"?"same":"valid","NWC",a);return e!=null&&(i=cs(i,e)),i})}function bm(n,t,e,s=[1,1],r="valid",o,a,i=null){return _(()=>{if(o==null&&(o=Xn()),be(o),n.rank!==3&&n.rank!==4)throw new D(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${n.rank}.`);if(t.rank!==3&&t.rank!==4)throw new D(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${n.rank}.`);let l=jp(n,o);if(r==="causal")throw new kt("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=eb({x:l,filter:t,strides:s,pad:r==="same"?"same":"valid",dilations:a,dataFormat:"NHWC",bias:e,activation:i}),o==="channelsFirst"&&(l=Kt(l,[0,3,1,2])),l})}function aE(n,t,e,s=[1,1,1],r="valid",o,a){return _(()=>{if(o==null&&(o=Xn()),be(o),n.rank!==4&&n.rank!==5)throw new D(`conv3dWithBias expects input to be of rank 4 or 5, but received ${n.rank}.`);if(t.rank!==4&&t.rank!==5)throw new D(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${n.rank}.`);let i=wx(n,o);if(r==="causal")throw new kt("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return i=Iy(i,t,s,r==="same"?"same":"valid","NDHWC",a),e!=null&&(i=cs(i,e)),o==="channelsFirst"&&(i=Kt(i,[0,4,1,2,3])),i})}class Hc extends _t{constructor(t,e){if(super(e),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Hc.verifyArgs(e),this.rank=t,Oe(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new kt(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=zr(e.kernelSize,t,"kernelSize"),this.strides=zr(e.strides==null?1:e.strides,t,"strides"),this.padding=e.padding==null?"valid":e.padding,wn(this.padding),this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,be(this.dataFormat),this.activation=Bs(e.activation),this.useBias=e.useBias==null?!0:e.useBias,this.biasInitializer=ae(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Te(e.biasConstraint),this.biasRegularizer=ie(e.biasRegularizer),this.activityRegularizer=ie(e.activityRegularizer),this.dilationRate=zr(e.dilationRate==null?1:e.dilationRate,t,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new D(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new D(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new D(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(t){if(ts("kernelSize"in t,"required key 'kernelSize' not in config"),typeof t.kernelSize!="number"&&!Dp(t.kernelSize,"number",1,3))throw new D(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(t.kernelSize)}.`)}getConfig(){const t={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:zs(this.activation),useBias:this.useBias,biasInitializer:he(this.biasInitializer),biasRegularizer:te(this.biasRegularizer),activityRegularizer:te(this.activityRegularizer),biasConstraint:Se(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}class oo extends Hc{constructor(t,e){super(t,e),this.kernel=null,oo.verifyArgs(e),this.filters=e.filters,Oe(this.filters,"filters"),this.kernelInitializer=ae(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Te(e.kernelConstraint),this.kernelRegularizer=ie(e.kernelRegularizer)}build(t){t=ee(t);const e=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[e]==null)throw new D(`The channel dimension of the input should be defined. Found ${t[e]}`);const s=t[e],r=this.kernelSize.concat([s,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[e]:s}}],this.built=!0}call(t,e){return _(()=>{t=Ct(t);let s;const r=this.bias==null?null:this.bias.read(),o=bb(this.activation.getClassName());if(o!=null&&this.rank===2)s=bm(t,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate,o);else{if(this.rank===1)s=oE(t,this.kernel.read(),r,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)s=bm(t,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)s=aE(t,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new kt("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(s=this.activation.apply(s))}return s})}computeOutputShape(t){t=ee(t);const e=[],s=this.dataFormat==="channelsLast"?t.slice(1,t.length-1):t.slice(2);for(let o=0;o<s.length;++o){const a=Gn(s[o],this.kernelSize[o],this.padding,this.strides[o],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[o]);e.push(a)}let r=[t[0]];return this.dataFormat==="channelsLast"?(r=r.concat(e),r.push(this.filters)):(r.push(this.filters),r=r.concat(e)),r}getConfig(){const t={filters:this.filters,kernelInitializer:he(this.kernelInitializer),kernelRegularizer:te(this.kernelRegularizer),kernelConstraint:Se(this.kernelConstraint)},e=super.getConfig();return Object.assign(t,e),t}static verifyArgs(t){if(!("filters"in t)||typeof t.filters!="number"||t.filters<1)throw new D(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(t.filters)}`)}}class ei extends oo{constructor(t){super(2,t),ei.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if(typeof t.kernelSize!="number"&&!Dp(t.kernelSize,"number",1,2))throw new D(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(t.kernelSize)}.`)}}ei.className="Conv2D";Y(ei);class jc extends oo{constructor(t){super(3,t),jc.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if(typeof t.kernelSize!="number"&&!(Array.isArray(t.kernelSize)&&(t.kernelSize.length===1||t.kernelSize.length===3)))throw new D(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(t.kernelSize)}.`)}}jc.className="Conv3D";Y(jc);class vx extends ei{constructor(t){if(super(t),this.inputSpec=[new We({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new D(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(t){if(t=ee(t),t.length!==4)throw new D("Input should have rank 4; Received input shape: "+JSON.stringify(t));const e=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[e]==null)throw new D("The channel dimension of the inputs should be defined. Found `None`.");const s=t[e],r=this.kernelSize.concat([this.filters,s]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new We({ndim:4,axes:{[e]:s}})],this.built=!0}call(t,e){return _(()=>{let s=Ct(t);if(s.shape.length!==4)throw new D(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${s.shape.length}`);const r=s.shape,o=r[0];let a,i;this.dataFormat==="channelsFirst"?(a=2,i=3):(a=1,i=2);const l=r[a],c=r[i],u=this.kernelSize[0],h=this.kernelSize[1],d=this.strides[0],p=this.strides[1],f=fi(l,d,u,this.padding),m=fi(c,p,h,this.padding),g=[o,f,m,this.filters];this.dataFormat!=="channelsLast"&&(s=Kt(s,[0,2,3,1]));let y=Od(s,this.kernel.read(),g,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(y=Kt(y,[0,3,1,2])),this.bias!=null&&(y=cs(y,this.bias.read(),this.dataFormat)),this.activation!=null&&(y=this.activation.apply(y)),y})}computeOutputShape(t){t=ee(t);const e=t.slice();let s,r,o;this.dataFormat==="channelsFirst"?(s=1,r=2,o=3):(s=3,r=1,o=2);const a=this.kernelSize[0],i=this.kernelSize[1],l=this.strides[0],c=this.strides[1];return e[s]=this.filters,e[r]=fi(e[r],l,a,this.padding),e[o]=fi(e[o],c,i,this.padding),e}getConfig(){const t=super.getConfig();return delete t.dilationRate,t}}vx.className="Conv2DTranspose";Y(vx);class $x extends oo{constructor(t,e){if(super(t,e),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,e.filters==null)throw new D("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(e.kernelInitializer!=null||e.kernelRegularizer!=null||e.kernelConstraint!=null)throw new D("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(e.padding!=null&&e.padding!=="same"&&e.padding!=="valid")throw new D(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(e.padding)}`);this.depthMultiplier=e.depthMultiplier==null?1:e.depthMultiplier,this.depthwiseInitializer=ae(e.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=ie(e.depthwiseRegularizer),this.depthwiseConstraint=Te(e.depthwiseConstraint),this.pointwiseInitializer=ae(e.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=ie(e.pointwiseRegularizer),this.pointwiseConstraint=Te(e.pointwiseConstraint)}build(t){if(t=ee(t),t.length<this.rank+2)throw new D(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(t)}`);const e=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[e]==null||t[e]<0)throw new D(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(t[e])}`);const s=t[e],r=this.kernelSize.concat([s,this.depthMultiplier]),o=[];for(let i=0;i<this.rank;++i)o.push(1);o.push(s*this.depthMultiplier,this.filters);const a=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,a,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",o,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,a,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,a,this.biasConstraint):this.bias=null,this.inputSpec=[new We({ndim:this.rank+2,axes:{[e]:s}})],this.built=!0}call(t,e){return _(()=>{t=Ct(t);let s;if(this.rank===1)throw new kt("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(t=Kt(t,[0,2,3,1])),s=Uy(t,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(s=cs(s,this.bias.read(),this.dataFormat)),this.activation!=null&&(s=this.activation.apply(s)),this.dataFormat==="channelsFirst"&&(s=Kt(s,[0,3,1,2])),s})}getConfig(){const t=super.getConfig();return delete t.rank,delete t.kernelInitializer,delete t.kernelRegularizer,delete t.kernelConstraint,t.depthwiseInitializer=he(this.depthwiseInitializer),t.pointwiseInitializer=he(this.pointwiseInitializer),t.depthwiseRegularizer=te(this.depthwiseRegularizer),t.pointwiseRegularizer=te(this.pointwiseRegularizer),t.depthwiseConstraint=Se(this.depthwiseConstraint),t.pointwiseConstraint=Se(this.pointwiseConstraint),t}}$x.className="SeparableConv";class kx extends $x{constructor(t){super(2,t)}}kx.className="SeparableConv2D";Y(kx);class qc extends oo{constructor(t){super(1,t),qc.verifyArgs(t),this.inputSpec=[{ndim:3}]}getConfig(){const t=super.getConfig();return delete t.rank,delete t.dataFormat,t}static verifyArgs(t){if(typeof t.kernelSize!="number"&&!Dp(t.kernelSize,"number",1,1))throw new D(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(t.kernelSize)}.`)}}qc.className="Conv1D";Y(qc);class Cx extends _t{constructor(t){super(t),typeof t.cropping=="number"?this.cropping=[[t.cropping,t.cropping],[t.cropping,t.cropping]]:typeof t.cropping[0]=="number"?this.cropping=[[t.cropping[0],t.cropping[0]],[t.cropping[1],t.cropping[1]]]:this.cropping=t.cropping,this.dataFormat=t.dataFormat===void 0?"channelsLast":t.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(t){return this.dataFormat==="channelsFirst"?[t[0],t[1],t[2]-this.cropping[0][0]-this.cropping[0][1],t[3]-this.cropping[1][0]-this.cropping[1][1]]:[t[0],t[1]-this.cropping[0][0]-this.cropping[0][1],t[2]-this.cropping[1][0]-this.cropping[1][1],t[3]]}call(t,e){return _(()=>{if(t=Ct(t),this.dataFormat==="channelsLast"){const s=hi(t,this.cropping[0][0],t.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return hi(s,this.cropping[1][0],t.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{const s=hi(t,this.cropping[0][0],t.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return hi(s,this.cropping[1][0],t.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){const t={cropping:this.cropping,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}Cx.className="Cropping2D";Y(Cx);class Nx extends _t{constructor(t){super(t),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=t.size==null?this.DEFAULT_SIZE:t.size,this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,be(this.dataFormat),this.interpolation=t.interpolation==null?"nearest":t.interpolation,zT(this.interpolation)}computeOutputShape(t){if(this.dataFormat==="channelsFirst"){const e=t[2]==null?null:this.size[0]*t[2],s=t[3]==null?null:this.size[1]*t[3];return[t[0],t[1],e,s]}else{const e=t[1]==null?null:this.size[0]*t[1],s=t[2]==null?null:this.size[1]*t[2];return[t[0],e,s,t[3]]}}call(t,e){return _(()=>{let s=Ct(t);const r=s.shape;if(this.dataFormat==="channelsFirst"){s=Kt(s,[0,2,3,1]);const o=this.size[0]*r[2],a=this.size[1]*r[3],i=this.interpolation==="nearest"?s.resizeNearestNeighbor([o,a]):s.resizeBilinear([o,a]);return Kt(i,[0,3,1,2])}else{const o=this.size[0]*r[1],a=this.size[1]*r[2];return this.interpolation==="nearest"?s.resizeNearestNeighbor([o,a]):s.resizeBilinear([o,a])}})}getConfig(){const t={size:this.size,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}Nx.className="UpSampling2D";Y(Nx);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function iE(n,t,e=[1,1],s="valid",r,o){return _(()=>{r==null&&(r=Xn()),be(r);let a=jp(n,r);if(n.rank!==4)throw new D(`Input for depthwiseConv2d is required to be 4-D, but is instead ${n.rank}-D`);if(t.rank!==4)throw new D(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return a=Ba(a,t,e,s==="same"?"same":"valid","NHWC",o),r==="channelsFirst"&&(a=Kt(a,[0,3,1,2])),a})}class Ix extends Hc{constructor(t){super(2,t),this.depthwiseKernel=null,this.depthMultiplier=t.depthMultiplier==null?1:t.depthMultiplier,this.depthwiseInitializer=ae(t.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Te(t.depthwiseConstraint),this.depthwiseRegularizer=ie(t.depthwiseRegularizer)}build(t){if(t=ee(t),t.length<4)throw new D(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(t)}.`);const e=this.dataFormat==="channelsFirst"?1:3;if(t[e]==null||t[e]<0)throw new D(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${t[e]}).`);const s=t[e],r=[this.kernelSize[0],this.kernelSize[1],s,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[s*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return _(()=>{t=Ct(t);let s=iE(t,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(s=cs(s,this.bias.read(),this.dataFormat)),this.activation!=null&&(s=this.activation.apply(s)),s})}computeOutputShape(t){t=ee(t);const e=this.dataFormat==="channelsFirst"?t[2]:t[1],s=this.dataFormat==="channelsFirst"?t[3]:t[2],r=this.dataFormat==="channelsFirst"?t[1]*this.depthMultiplier:t[3]*this.depthMultiplier,o=Gn(e,this.kernelSize[0],this.padding,this.strides[0]),a=Gn(s,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[t[0],r,o,a]:[t[0],o,a,r]}getConfig(){const t=super.getConfig();return t.depthMultiplier=this.depthMultiplier,t.depthwiseInitializer=he(this.depthwiseInitializer),t.depthwiseRegularizer=te(this.depthwiseRegularizer),t.depthwiseConstraint=Se(this.depthwiseRegularizer),t}}Ix.className="DepthwiseConv2D";Y(Ix);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Sx(n,t,e,s){if(Array.isArray(n)){if(t!=null||e!=null)throw new D("When inputs is an array, neither initialState or constants should be provided");s!=null&&(e=n.slice(n.length-s,n.length),n=n.slice(0,n.length-s)),n.length>1&&(t=n.slice(1,n.length)),n=n[0]}function r(o){return o==null||Array.isArray(o)?o:[o]}return t=r(t),e=r(e),{inputs:n,initialState:t,constants:e}}function Tx(n,t,e,s=!1,r,o,a=!1,i=!1){return _(()=>{const l=t.shape.length;if(l<3)throw new D(`Input should be at least 3D, but is ${l}D.`);const c=[1,0].concat(Yn(2,l));t=Kt(t,c),a&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),r!=null&&(r=r.asType("bool").asType("float32"),r.rank===l-1&&(r=Sn(r,-1)),r=Kt(r,c)),s&&(t=xs(t,0),r!=null&&(r=xs(r,0)));const u=[];let h,d=e;const p=t.shape[0],f=Kn(t);let m;r!=null&&(m=Kn(r));for(let y=0;y<p;++y){const b=f[y],$=_(()=>n(b,d));if(r==null)h=$[0],d=$[1];else{const x=_(()=>{const w=m[y],C=xn(w).sub(w),k=$[0].mul(w).add(d[0].mul(C)),I=d.map((S,E)=>$[1][E].mul(w).add(S.mul(C)));return{output:k,newStates:I}});h=x.output,d=x.newStates}i&&u.push(h)}let g;return i&&(g=Fn(u,1)),[h,g,d]})}class js extends _t{constructor(t){super(t);let e;if(t.cell==null)throw new D("cell property is missing for the constructor of RNN.");if(Array.isArray(t.cell)?e=new Xp({cells:t.cell}):e=t.cell,e.stateSize==null)throw new D("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=e,this.returnSequences=t.returnSequences==null?!1:t.returnSequences,this.returnState=t.returnState==null?!1:t.returnState,this.goBackwards=t.goBackwards==null?!1:t.goBackwards,this._stateful=t.stateful==null?!1:t.stateful,this.unroll=t.unroll==null?!1:t.unroll,this.supportsMasking=!0,this.inputSpec=[new We({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){const t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return Yn(0,t).map(e=>null)}else return this.states_}setStates(t){this.states_=t}computeOutputShape(t){Qu(t)&&(t=t[0]),t=t;let e=this.cell.stateSize;Array.isArray(e)||(e=[e]);const s=e[0];let r;if(this.returnSequences?r=[t[0],t[1],s]:r=[t[0],s],this.returnState){const o=[];for(const a of e)o.push([t[0],a]);return[r].concat(o)}else return r}computeMask(t,e){return _(()=>{Array.isArray(e)&&(e=e[0]);const s=this.returnSequences?e:null;if(this.returnState){const r=this.states.map(o=>null);return[s].concat(r)}else return s})}get states(){if(this.states_==null){const t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,e=[];for(let s=0;s<t;++s)e.push(null);return e}else return this.states_}set states(t){this.states_=t}build(t){if(this.numConstants!=null)throw new kt("Constants support is not implemented in RNN yet.");Qu(t)&&(t=t[0]),t=t;const e=this.stateful?t[0]:null,s=t.slice(2);this.inputSpec[0]=new We({shape:[e,null,...s]});const r=[t[0]].concat(t.slice(2));this.cell.build(r);let o;if(Array.isArray(this.cell.stateSize)?o=this.cell.stateSize:o=[this.cell.stateSize],this.stateSpec!=null){if(!Gt(this.stateSpec.map(a=>a.shape[a.shape.length-1]),o))throw new D(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=o.map(a=>new We({shape:[null,a]}));this.stateful&&this.resetStates()}resetStates(t,e=!1){_(()=>{if(!this.stateful)throw new Qn("Cannot call resetStates() on an RNN Layer that is not stateful.");const s=this.inputSpec[0].shape[0];if(s==null)throw new D("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(r=>xe([s,r])):this.states_=[xe([s,this.cell.stateSize])];else if(t==null)$t(this.states_),this.keptStates!=null&&($t(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(r=>xe([s,r])):this.states_[0]=xe([s,this.cell.stateSize]);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new D(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);e===!0?this.keptStates.push(this.states_.slice()):$t(this.states_);for(let r=0;r<this.states_.length;++r){const o=t[r],a=Array.isArray(this.cell.stateSize)?this.cell.stateSize[r]:this.cell.stateSize,i=[s,a];if(!Gt(o.shape,i))throw new D(`State ${r} is incompatible with layer ${this.name}: expected shape=${i}, received shape=${o.shape}`);this.states_[r]=o}}this.states_=this.states_.map(r=>Ve(r.clone()))})}apply(t,e){let s=e==null?null:e.initialState,r=e==null?null:e.constants;e==null&&(e={});const o=Sx(t,s,r,this.numConstants);t=o.inputs,s=o.initialState,r=o.constants;let a=[],i=[];if(s!=null){e.initialState=s,a=a.concat(s),this.stateSpec=[];for(const c of s)this.stateSpec.push(new We({shape:c.shape}));i=i.concat(this.stateSpec)}if(r!=null&&(e.constants=r,a=a.concat(r),this.numConstants=r.length),a[0]instanceof ns){const c=[t].concat(a),u=this.inputSpec.concat(i),h=this.inputSpec;this.inputSpec=u;const d=super.apply(c,e);return this.inputSpec=h,d}else return super.apply(t,e)}call(t,e){return _(()=>{const s=e==null?null:e.mask,r=e==null?null:e.training;let o=e==null?null:e.initialState;t=Ct(t),o==null&&(this.stateful?o=this.states_:o=this.getInitialState(t));const a=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(o.length!==a)throw new D(`RNN Layer has ${a} state(s) but was passed ${o.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const i={training:r},c=Tx((f,m)=>{const g=this.cell.call([f].concat(m),i);return[g[0],g.slice(1)]},t,o,this.goBackwards,s,null,this.unroll,this.returnSequences),u=c[0],h=c[1],d=c[2];this.stateful&&this.resetStates(d,r);const p=this.returnSequences?h:u;return this.returnState?[p].concat(d):p})}getInitialState(t){return _(()=>{let e=xe(t.shape);return e=bt(e,[1,2]),e=Ja(e),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(s=>s>1?Ju(e,[1,s]):e):this.cell.stateSize>1?[Ju(e,[1,this.cell.stateSize])]:[e]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(t)}getConfig(){const t=super.getConfig(),e={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(e.numConstants=this.numConstants);const s=this.cell.getConfig();return this.getClassName()===js.className&&(e.cell={className:this.cell.getClassName(),config:s}),Object.assign({},s,t,e)}static fromConfig(t,e,s={}){const r=e.cell,o=ys(r,s);return new t(Object.assign(e,{cell:o}))}}js.className="RNN";Y(js);class Kc extends _t{}class qp extends Kc{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,Oe(this.units,"units"),this.activation=Bs(t.activation==null?this.DEFAULT_ACTIVATION:t.activation),this.useBias=t.useBias==null?!0:t.useBias,this.kernelInitializer=ae(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=ae(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=ae(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=ie(t.kernelRegularizer),this.recurrentRegularizer=ie(t.recurrentRegularizer),this.biasRegularizer=ie(t.biasRegularizer),this.kernelConstraint=Te(t.kernelConstraint),this.recurrentConstraint=Te(t.recurrentConstraint),this.biasConstraint=Te(t.biasConstraint),this.dropout=Hr([1,Ps([0,t.dropout==null?0:t.dropout])]),this.recurrentDropout=Hr([1,Ps([0,t.recurrentDropout==null?0:t.recurrentDropout])]),this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=ee(t),this.kernel=this.addWeight("kernel",[t[t.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return _(()=>{if(t=t,t.length!==2)throw new D(`SimpleRNNCell expects 2 input Tensors, got ${t.length}.`);let s=t[1];t=t[0];const r=e.training==null?!1:e.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Ms({ones:()=>xn(t),rate:this.dropout,training:r})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Ms({ones:()=>xn(s),rate:this.recurrentDropout,training:r}));let o;const a=this.dropoutMask,i=this.recurrentDropoutMask;a!=null?o=rs(P(t,a),this.kernel.read()):o=rs(t,this.kernel.read()),this.bias!=null&&(o=cs(o,this.bias.read())),i!=null&&(s=P(s,i));let l=nt(o,rs(s,this.recurrentKernel.read()));return this.activation!=null&&(l=this.activation.apply(l)),[l,l]})}getConfig(){const t=super.getConfig(),e={units:this.units,activation:zs(this.activation),useBias:this.useBias,kernelInitializer:he(this.kernelInitializer),recurrentInitializer:he(this.recurrentInitializer),biasInitializer:he(this.biasInitializer),kernelRegularizer:te(this.kernelRegularizer),recurrentRegularizer:te(this.recurrentRegularizer),biasRegularizer:te(this.biasRegularizer),activityRegularizer:te(this.activityRegularizer),kernelConstraint:Se(this.kernelConstraint),recurrentConstraint:Se(this.recurrentConstraint),biasConstraint:Se(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},t,e)}}qp.className="SimpleRNNCell";Y(qp);class Ex extends js{constructor(t){t.cell=new qp(t),super(t)}call(t,e){return _(()=>{this.cell.dropoutMask!=null&&($t(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&($t(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=e==null?null:e.mask,r=e==null?null:e.training,o=e==null?null:e.initialState;return super.call(t,{mask:s,training:r,initialState:o})})}static fromConfig(t,e){return new t(e)}}Ex.className="SimpleRNN";Y(Ex);class Kp extends Kc{constructor(t){if(super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",t.resetAfter)throw new D("GRUCell does not support reset_after parameter set to true.");this.units=t.units,Oe(this.units,"units"),this.activation=Bs(t.activation===void 0?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=Bs(t.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=t.useBias==null?!0:t.useBias,this.kernelInitializer=ae(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=ae(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=ae(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=ie(t.kernelRegularizer),this.recurrentRegularizer=ie(t.recurrentRegularizer),this.biasRegularizer=ie(t.biasRegularizer),this.kernelConstraint=Te(t.kernelConstraint),this.recurrentConstraint=Te(t.recurrentConstraint),this.biasConstraint=Te(t.biasConstraint),this.dropout=Hr([1,Ps([0,t.dropout==null?0:t.dropout])]),this.recurrentDropout=Hr([1,Ps([0,t.recurrentDropout==null?0:t.recurrentDropout])]),this.implementation=t.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=ee(t);const e=t[t.length-1];this.kernel=this.addWeight("kernel",[e,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return _(()=>{if(t=t,t.length!==2)throw new D(`GRUCell expects 2 input Tensors (inputs, h, c), got ${t.length}.`);const s=e.training==null?!1:e.training;let r=t[1];t=t[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Ms({ones:()=>xn(t),rate:this.dropout,training:s,count:3})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Ms({ones:()=>xn(r),rate:this.recurrentDropout,training:s,count:3}));const o=this.dropoutMask,a=this.recurrentDropoutMask;let i,l,c;0<this.dropout&&this.dropout<1&&(t=P(t,o[0]));let u=rs(t,this.kernel.read());this.useBias&&(u=cs(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=P(r,a[0]));const h=this.recurrentKernel.read(),[d,p]=gn(h,[2*this.units,this.units],h.rank-1),f=rs(r,d),[m,g,y]=gn(u,3,u.rank-1),[b,$]=gn(f,2,f.rank-1);i=this.recurrentActivation.apply(nt(m,b)),l=this.recurrentActivation.apply(nt(g,$));const x=rs(P(l,r),p);c=this.activation.apply(nt(y,x));const w=nt(P(i,r),P(nt(1,Ie(i)),c));return[w,w]})}getConfig(){const t=super.getConfig(),e={units:this.units,activation:zs(this.activation),recurrentActivation:zs(this.recurrentActivation),useBias:this.useBias,kernelInitializer:he(this.kernelInitializer),recurrentInitializer:he(this.recurrentInitializer),biasInitializer:he(this.biasInitializer),kernelRegularizer:te(this.kernelRegularizer),recurrentRegularizer:te(this.recurrentRegularizer),biasRegularizer:te(this.biasRegularizer),activityRegularizer:te(this.activityRegularizer),kernelConstraint:Se(this.kernelConstraint),recurrentConstraint:Se(this.recurrentConstraint),biasConstraint:Se(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},t,e)}}Kp.className="GRUCell";Y(Kp);class Ax extends js{constructor(t){t.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new Kp(t),super(t)}call(t,e){return _(()=>{this.cell.dropoutMask!=null&&($t(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&($t(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=e==null?null:e.mask,r=e==null?null:e.training,o=e==null?null:e.initialState;return super.call(t,{mask:s,training:r,initialState:o})})}static fromConfig(t,e){return e.implmentation===0&&(e.implementation=1),new t(e)}}Ax.className="GRU";Y(Ax);class Xc extends Kc{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,Oe(this.units,"units"),this.activation=Bs(t.activation===void 0?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=Bs(t.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=t.useBias==null?!0:t.useBias,this.kernelInitializer=ae(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=ae(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=ae(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=t.unitForgetBias,this.kernelRegularizer=ie(t.kernelRegularizer),this.recurrentRegularizer=ie(t.recurrentRegularizer),this.biasRegularizer=ie(t.biasRegularizer),this.kernelConstraint=Te(t.kernelConstraint),this.recurrentConstraint=Te(t.recurrentConstraint),this.biasConstraint=Te(t.biasConstraint),this.dropout=Hr([1,Ps([0,t.dropout==null?0:t.dropout])]),this.recurrentDropout=Hr([1,Ps([0,t.recurrentDropout==null?0:t.recurrentDropout])]),this.implementation=t.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){var e;t=ee(t);const s=t[t.length-1];this.kernel=this.addWeight("kernel",[s,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let r;if(this.useBias){if(this.unitForgetBias){const o=this.biasInitializer,a=this.units;r=new(e=class extends Ln{apply(l,c){const u=o.apply([a]),h=new Op().apply([a]),d=o.apply([a*2]);return nm(nm(u,h),d)}},e.className="CustomInit",e)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(t,e){return _(()=>{const s=e.training==null?!1:e.training;if(t=t,t.length!==3)throw new D(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);let r=t[1];const o=t[2];t=t[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Ms({ones:()=>xn(t),rate:this.dropout,training:s,count:4})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Ms({ones:()=>xn(r),rate:this.recurrentDropout,training:s,count:4}));const a=this.dropoutMask,i=this.recurrentDropoutMask;let l,c,u,h;0<this.dropout&&this.dropout<1&&(t=P(t,a[0]));let d=rs(t,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=P(r,i[0])),d=nt(d,rs(r,this.recurrentKernel.read())),this.useBias&&(d=cs(d,this.bias.read()));const[p,f,m,g]=gn(d,4,d.rank-1);l=this.recurrentActivation.apply(p),c=this.recurrentActivation.apply(f),u=nt(P(c,o),P(l,this.activation.apply(m))),h=this.recurrentActivation.apply(g);const y=P(h,this.activation.apply(u));return[y,y,u]})}getConfig(){const t=super.getConfig(),e={units:this.units,activation:zs(this.activation),recurrentActivation:zs(this.recurrentActivation),useBias:this.useBias,kernelInitializer:he(this.kernelInitializer),recurrentInitializer:he(this.recurrentInitializer),biasInitializer:he(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:te(this.kernelRegularizer),recurrentRegularizer:te(this.recurrentRegularizer),biasRegularizer:te(this.biasRegularizer),activityRegularizer:te(this.activityRegularizer),kernelConstraint:Se(this.kernelConstraint),recurrentConstraint:Se(this.recurrentConstraint),biasConstraint:Se(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},t,e)}}Xc.className="LSTMCell";Y(Xc);class Dx extends js{constructor(t){t.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new Xc(t),super(t)}call(t,e){return _(()=>{this.cell.dropoutMask!=null&&($t(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&($t(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=e==null?null:e.mask,r=e==null?null:e.training,o=e==null?null:e.initialState;return super.call(t,{mask:s,training:r,initialState:o})})}static fromConfig(t,e){return e.implmentation===0&&(e.implementation=1),new t(e)}}Dx.className="LSTM";Y(Dx);class Xp extends Kc{constructor(t){super(t),this.cells=t.cells}get stateSize(){const t=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?t.push(...e.stateSize):t.push(e.stateSize);return t}call(t,e){return _(()=>{t=t;let s=t.slice(1);const r=[];for(const i of this.cells.slice().reverse())Array.isArray(i.stateSize)?r.push(s.splice(0,i.stateSize.length)):r.push(s.splice(0,1));r.reverse();const o=[];let a;for(let i=0;i<this.cells.length;++i){const l=this.cells[i];s=r[i],i===0?a=[t[0]].concat(s):a=[a[0]].concat(s),a=l.call(a,e),o.push(a.slice(1))}s=[];for(const i of o.slice().reverse())s.push(...i);return[a[0]].concat(s)})}build(t){Qu(t)&&(t=t[0]),t=t;let e;this.cells.forEach((s,r)=>{ir(`RNNCell_${r}`,()=>{s.build(t),Array.isArray(s.stateSize)?e=s.stateSize[0]:e=s.stateSize,t=[t[0],e]})}),this.built=!0}getConfig(){const t=super.getConfig(),e=o=>({className:o.getClassName(),config:o.getConfig()}),r={cells:this.cells.map(e)};return Object.assign({},t,r)}static fromConfig(t,e,s={}){const r=[];for(const o of e.cells)r.push(ys(o,s));return new t({cells:r})}get trainableWeights(){if(!this.trainable)return[];const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.cells)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const s of this.cells)e.push(...s.trainableWeights);return e.concat(t)}return t}getWeights(){const t=[];for(const e of this.cells)t.push(...e.weights);return th(t)}setWeights(t){const e=[];for(const s of this.cells){const r=s.weights.length,o=t.splice(r);for(let a=0;a<s.weights.length;++a)e.push([s.weights[a],o[a]])}Vp(e)}}Xp.className="StackedRNNCells";Y(Xp);function Ms(n){const{ones:t,rate:e,training:s=!1,count:r=1}=n,o=()=>Eb(t(),e),a=()=>Qa(o,t,s);return!r||r<=1?Ve(a().clone()):Array(r).fill(void 0).map(a).map(l=>Ve(l.clone()))}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var lE=function(n,t){var e={};for(var s in n)Object.prototype.hasOwnProperty.call(n,s)&&t.indexOf(s)<0&&(e[s]=n[s]);if(n!=null&&typeof Object.getOwnPropertySymbols=="function")for(var r=0,s=Object.getOwnPropertySymbols(n);r<s.length;r++)t.indexOf(s[r])<0&&Object.prototype.propertyIsEnumerable.call(n,s[r])&&(e[s[r]]=n[s[r]]);return e};class Rx extends js{constructor(t){if(t.unroll)throw new kt("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(t.cell))throw new kt("It is not possible at the moment to stack convolutional cells.");super(t),this.inputSpec=[new We({ndim:5})]}call(t,e){return _(()=>{if(this.cell.dropoutMask!=null&&($t(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&($t(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),e&&e.constants)throw new D("ConvRNN2D cell does not support constants");const s=e==null?null:e.mask,r=e==null?null:e.training,o=e==null?null:e.initialState;return super.call(t,{mask:s,training:r,initialState:o})})}computeOutputShape(t){let e=this.computeSingleOutputShape(t);return this.returnSequences||(e=[e[0],...e.slice(2)]),this.returnState&&(e=[e,...Array(2).fill([t[0],...e.slice(-3)])]),e}getInitialState(t){return _(()=>{const{stateSize:e}=this.cell,s=t.shape,r=this.computeSingleOutputShape(s),o=[r[0],...r.slice(2)],a=xe(o);return Array.isArray(e)?Array(e.length).fill(a):[a]})}resetStates(t,e=!1){_(()=>{if(!this.stateful)throw new Qn("Cannot call resetStates() on an RNN Layer that is not stateful.");const s=this.inputSpec[0].shape,r=this.computeSingleOutputShape(s),o=[r[0],...r.slice(2)];if(s[0]==null)throw new D("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>xe(o)):this.states_=[xe(o)];else if(t==null)$t(this.states_),this.keptStates!=null&&($t(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>xe(o)):this.states_[0]=xe(o);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new D(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);e?this.keptStates.push(this.states_.slice()):$t(this.states_);for(let i=0;i<this.states_.length;++i){const l=t[i],c=o;if(!Gt(l.shape,c))throw new D(`State ${i} is incompatible with layer ${this.name}: expected shape=${c}, received shape=${l.shape}`);this.states_[i]=l}}this.states_=this.states_.map(i=>Ve(i.clone()))})}computeSingleOutputShape(t){const{dataFormat:e,filters:s,kernelSize:r,padding:o,strides:a,dilationRate:i}=this.cell,l=e==="channelsFirst",c=t[l?3:2],u=t[l?4:3],h=Gn(c,r[0],o,a[0],i[0]),d=Gn(u,r[1],o,a[1],i[1]);return[...t.slice(0,2),...l?[s,h,d]:[h,d,s]]}}Rx.className="ConvRNN2D";class Yp extends Xc{constructor(t){const{filters:e,kernelSize:s,strides:r,padding:o,dataFormat:a,dilationRate:i}=t;super(Object.assign({},t,{units:e})),this.filters=e,Oe(this.filters,"filters"),this.kernelSize=zr(s,2,"kernelSize"),this.kernelSize.forEach(l=>Oe(l,"kernelSize")),this.strides=zr(r||1,2,"strides"),this.strides.forEach(l=>Oe(l,"strides")),this.padding=o||"valid",wn(this.padding),this.dataFormat=a||"channelsLast",be(this.dataFormat),this.dilationRate=zr(i||1,2,"dilationRate"),this.dilationRate.forEach(l=>Oe(l,"dilationRate"))}build(t){var e;t=ee(t);const s=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[s]==null)throw new D(`The channel dimension of the input should be defined. Found ${t[s]}`);const r=t[s],o=4,a=this.kernelSize.concat([r,this.filters*o]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const i=this.kernelSize.concat([this.filters,this.filters*o]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",i,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let l;if(this.unitForgetBias){const c=this.biasInitializer,u=this.filters;l=new(e=class extends Ln{apply(d,p){const f=c.apply([u]),m=Gs([u]),g=c.apply([u*2]);return Fp([f,m,g])}},e.className="CustomInit",e)}else l=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*o],null,l,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(t,e){return _(()=>{if(t.length!==3)throw new D(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);const s=e.training||!1,r=t[0],o=t[1],a=t[2],i=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Ms({ones:()=>xn(r),rate:this.dropout,training:s,count:i}));const l=this.dropoutMask,c=(J,Z,tt)=>!Z||!Z[tt]?J:P(Z[tt],J);let u=c(r,l,0),h=c(r,l,1),d=c(r,l,2),p=c(r,l,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Ms({ones:()=>xn(o),rate:this.recurrentDropout,training:s,count:i}));const f=this.recurrentDropoutMask;let m=c(o,f,0),g=c(o,f,1),y=c(o,f,2),b=c(o,f,3);const $=3,[x,w,C,k]=gn(this.kernel.read(),i,$),[I,S,E,R]=this.useBias?gn(this.bias.read(),i):[null,null,null,null];u=this.inputConv(u,x,I,this.padding),h=this.inputConv(h,w,S,this.padding),d=this.inputConv(d,C,E,this.padding),p=this.inputConv(p,k,R,this.padding);const[L,O,z,M]=gn(this.recurrentKernel.read(),i,$);m=this.recurrentConv(m,L),g=this.recurrentConv(g,O),y=this.recurrentConv(y,z),b=this.recurrentConv(b,M);const V=this.recurrentActivation.apply(nt(u,m)),K=this.recurrentActivation.apply(nt(h,g)),G=nt(P(K,a),P(V,this.activation.apply(nt(d,y)))),j=P(this.recurrentActivation.apply(nt(p,b)),this.activation.apply(G));return[j,j,G]})}getConfig(){const t=super.getConfig(),{units:e}=t,s=lE(t,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},s,r)}inputConv(t,e,s,r){const o=_s(t,e,this.strides,r||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return s?cs(o,s,this.dataFormat):o}recurrentConv(t,e){return _s(t,e,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}}Yp.className="ConvLSTM2DCell";Y(Yp);class Fx extends Rx{constructor(t){const e=new Yp(t);super(Object.assign({},t,{cell:e}))}static fromConfig(t,e){return new t(e)}}Fx.className="ConvLSTM2D";Y(Fx);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Jp extends _t{constructor(t){super(t),this.rate=Math.max(Math.min(t.rate,1),0),this.noiseShape=t.noiseShape,this.seed=t.seed,this.supportsMasking=!0}getNoiseShape(t){if(this.noiseShape==null)return this.noiseShape;const e=t.shape,s=[];for(let r=0;r<this.noiseShape.length;++r)s.push(this.noiseShape[r]==null?e[r]:this.noiseShape[r]);return s}call(t,e){return _(()=>{this.invokeCallHook(t,e);const s=Ct(t);if(0<this.rate&&this.rate<1){const r=e.training==null?!1:e.training,o=this.getNoiseShape(s);return Qa(()=>Eb(s,this.rate,o,this.seed),()=>s,r)}return t})}getConfig(){const t={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},e=super.getConfig();return Object.assign(t,e),t}dispose(){return super.dispose()}}Jp.className="Dropout";Y(Jp);class Ox extends Jp{constructor(t){super(t),this.inputSpec=[{ndim:3}]}getNoiseShape(t){const e=t.shape;return[e[0],1,e[2]]}}Ox.className="SpatialDropout1D";Y(Ox);class _x extends _t{constructor(t){if(super(t),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",t.batchInputShape==null&&t.inputShape==null&&t.inputDim!=null){let e=null;t.batchSize!=null&&(e=t.batchSize),this.batchInputShape=[e,t.inputDim]}this.units=t.units,Oe(this.units,"units"),this.activation=Bs(t.activation),t.useBias!=null&&(this.useBias=t.useBias),this.kernelInitializer=ae(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=ae(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Te(t.kernelConstraint),this.biasConstraint=Te(t.biasConstraint),this.kernelRegularizer=ie(t.kernelRegularizer),this.biasRegularizer=ie(t.biasRegularizer),this.activityRegularizer=ie(t.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(t){t=ee(t);const e=t[t.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[e,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:e}}],this.built=!0}computeOutputShape(t){t=ee(t);const e=t.slice();return e[e.length-1]=this.units,e}call(t,e){return _(()=>{this.invokeCallHook(t,e);const s=Ct(t),r=bb(this.activation.getClassName());let o;return r!=null?o=rs(s,this.kernel.read(),r,this.bias?this.bias.read():null):(o=rs(s,this.kernel.read()),this.bias!=null&&(o=cs(o,this.bias.read())),this.activation!=null&&(o=this.activation.apply(o))),o})}getConfig(){const t={units:this.units,activation:zs(this.activation),useBias:this.useBias,kernelInitializer:he(this.kernelInitializer),biasInitializer:he(this.biasInitializer),kernelRegularizer:te(this.kernelRegularizer),biasRegularizer:te(this.biasRegularizer),activityRegularizer:te(this.activityRegularizer),kernelConstraint:Se(this.kernelConstraint),biasConstraint:Se(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}_x.className="Dense";Y(_x);class Lx extends _t{constructor(t){t=t||{},super(t),this.inputSpec=[{minNDim:3}],this.dataFormat=t.dataFormat}computeOutputShape(t){t=ee(t);for(const e of t.slice(1))if(e==null)throw new D(`The shape of the input to "Flatten" is not fully defined (got ${t.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[t[0],Rs(t,1)]}call(t,e){return _(()=>{this.invokeCallHook(t,e);let s=Ct(t);if(this.dataFormat==="channelsFirst"&&s.rank>1){const r=[0];for(let o=2;o<s.rank;++o)r.push(o);r.push(1),s=s.transpose(r)}return GT(s)})}getConfig(){const t={};this.dataFormat!=null&&(t.dataFormat=this.dataFormat);const e=super.getConfig();return Object.assign(t,e),t}}Lx.className="Flatten";Y(Lx);class Px extends _t{constructor(t){super(t),this.supportsMasking=!0,this.activation=Bs(t.activation)}call(t,e){return _(()=>{this.invokeCallHook(t,e);const s=Ct(t);return this.activation.apply(s)})}getConfig(){const t={activation:zs(this.activation)},e=super.getConfig();return Object.assign(t,e),t}}Px.className="Activation";Y(Px);class zx extends _t{constructor(t){super(t),this.n=t.n,this.inputSpec=[{ndim:2}]}computeOutputShape(t){return[t[0],this.n,t[1]]}call(t,e){return _(()=>(t=Ct(t),WT(t,this.n)))}getConfig(){const t={n:this.n},e=super.getConfig();return Object.assign(t,e),t}}zx.className="RepeatVector";Y(zx);class Bx extends _t{constructor(t){super(t),this.targetShape=t.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(t){return t<0||t==null}fixUnknownDimension(t,e){const s="Total size of new array must be unchanged.",r=e.slice();let o=1,a=null;for(let l=0;l<r.length;++l){const c=r[l];if(this.isUnknown(c))if(a===null)a=l;else throw new D("Can only specifiy one unknown dimension.");else o*=c}const i=Rs(t);if(a!==null){if(o===0||i%o!==0)throw new D(s);r[a]=i/o}else if(i!==o)throw new D(s);return r}computeOutputShape(t){let e=!1;for(let s=0;s<t.length;++s)if(this.isUnknown(t[s])){e=!0;break}return e?t.slice(0,1).concat(this.targetShape):t.slice(0,1).concat(this.fixUnknownDimension(t.slice(1),this.targetShape))}call(t,e){return _(()=>{this.invokeCallHook(t,e);const s=Ct(t),r=s.shape,o=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return s.reshape(o)})}getConfig(){const t={targetShape:this.targetShape},e=super.getConfig();return Object.assign(t,e),t}}Bx.className="Reshape";Y(Bx);class Mx extends _t{constructor(t){if(super(t),t.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(t.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${t.dims} instead.`);const e=Yn(1,t.dims.length+1);if(!Gt(t.dims.slice().sort(),e))throw new Error("Invalid permutation `dims`: "+JSON.stringify(t.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=t.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new We({ndim:this.dims.length+1})]}computeOutputShape(t){t=ee(t);const e=t.slice();return this.dims.forEach((s,r)=>{e[r+1]=t[s]}),e}call(t,e){return Kt(Ct(t),this.dimsIncludingBatch)}getConfig(){const t={dims:this.dims},e=super.getConfig();return Object.assign(t,e),t}}Mx.className="Permute";Y(Mx);class Vx extends _t{constructor(t){super(t??{}),this.supportsMasking=!0,t!=null?this.maskValue=t.maskValue==null?0:t.maskValue:this.maskValue=0}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={maskValue:this.maskValue};return Object.assign(e,t),e}computeMask(t,e){const s=Ct(t);return Yi(Eo(s,this.maskValue),-1)}call(t,e){return _(()=>{this.invokeCallHook(t,e);const s=Ct(t),a=Yi(Eo(s,this.maskValue),-1,!0);return s.mul(a.asType(s.dtype))})}}Vx.className="Masking";Y(Vx);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Wx extends _t{constructor(t){if(super(t),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",t.batchInputShape==null&&t.inputShape==null){let e=null;t.batchSize!=null&&(e=t.batchSize),t.inputLength==null?this.batchInputShape=[e,null]:this.batchInputShape=[e].concat(oe(t.inputLength))}this.inputDim=t.inputDim,Oe(this.inputDim,"inputDim"),this.outputDim=t.outputDim,Oe(this.outputDim,"outputDim"),this.embeddingsInitializer=ae(t.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=ie(t.embeddingsRegularizer),this.activityRegularizer=ie(t.activityRegularizer),this.embeddingsConstraint=Te(t.embeddingsConstraint),this.maskZero=t.maskZero,this.supportsMasking=t.maskZero,this.inputLength=t.inputLength}build(t){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(t){}computeMask(t,e){return _(()=>this.maskZero?(t=Ct(t),Eo(t,Ot(t))):null)}computeOutputShape(t){if(t=ee(t),this.inputLength==null)return[...t,this.outputDim];const e=oe(this.inputLength);if(e.length!==t.length-1)throw new D(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);{let s=0;for(let r=0;r<e.length;++r){const o=e[r],a=t[r+1];if(o!=null&&a!=null&&o!==a)throw new D(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);o==null&&(e[s]=a),s++}}return[t[0],...e,this.outputDim]}call(t,e){return _(()=>{this.invokeCallHook(t,e);let s=Ct(t);return s.dtype!=="int32"&&(s=Ya(s,"int32")),Tb(this.embeddings.read(),s.as1D()).reshape(ee(this.computeOutputShape(s.shape)))})}getConfig(){const t={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:he(this.embeddingsInitializer),embeddingsRegularizer:te(this.embeddingsRegularizer),activityRegularizer:te(this.activityRegularizer),embeddingsConstraint:Se(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},e=super.getConfig();return Object.assign(t,e),t}}Wx.className="Embedding";Y(Wx);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class kr extends _t{constructor(t){super(t||{}),this.supportsMasking=!0}mergeFunction(t){throw new kt}computeElementwiseOpOutputShape(t,e){if(t==null||e==null)return null;if(t.length<e.length)return this.computeElementwiseOpOutputShape(e,t);if(e.length===0)return t;const s=t.slice(0,t.length-e.length);for(let r=0;r<e.length;++r){const o=t[t.length-e.length+r],a=e[r];if(o==null||a==null||o<0||a<0)s.push(null);else if(o===1)s.push(a);else if(a===1)s.push(o);else{if(o!==a)throw new D("Operands could not be broadcast together with shapes "+JSON.stringify(t)+" "+JSON.stringify(e));s.push(o)}}return s}build(t){if(Array.isArray(t)&&!Array.isArray(t[0])&&(t=[ee(t)]),t=t,t.length<2)throw new D(`A merge layer should be called on an Array of at least 2 inputs. Got ${t.length} input(s).`);let e=[];for(const o of t)o!=null&&o[0]!==null&&e.push(o[0]);if(e=Ds(e),e.length>1)throw new D(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(t)}.`);let s=t[0]==null?null:t[0].slice(1);for(let o=1;o<t.length;++o){const a=t[o]==null?null:t[o].slice(1);s=this.computeElementwiseOpOutputShape(s,a)}const r=t.map(o=>o.length);t.indexOf(null)===-1&&Ds(r).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(t,e){return _(()=>{if(t=t,this.reshapeRequired){const s=[],r=t.map(o=>o.rank);if(r.indexOf(null)===-1){const o=Ps(r);for(let a of t){const i=a.rank;for(let l=0;l<o-i;++l)a=Ja(a,1);s.push(a)}return this.mergeFunction(s)}else{let o=!1;for(const l of t){const c=l.rank;if(c==null){const u=l.shape,h=u[0],d=u.slice(1).concat([h]);let p=l.reshape([h].concat(Rs(u.slice(1))));p=Kt(p,[1,0]),p=p.reshape(d),s.push(p),o=!0}else if(c>1){const u=Yn(1,c).concat([0]);s.push(Kt(l,u)),o=!0}else s.push(l)}let a=this.mergeFunction(s);const i=a.rank;if(o){if(i==null){const l=a.shape,c=l.length,u=l[c-1],h=[u].concat(l.slice(0,l.length-1));a=Kt(a.reshape([-1,u]),[1,0]).reshape(h)}else if(i>1){const l=[i-1].concat(Yn(0,i-1));a=Kt(a,l)}}return a}}else return this.mergeFunction(t)})}computeOutputShape(t){t=t;let e;t[0]==null?e=null:e=t[0].slice(1);for(let r=1;r<t.length;++r){const o=t[r]==null?null:t[r].slice(1);e=this.computeElementwiseOpOutputShape(e,o)}let s=[];for(const r of t)r!=null&&r[0]!==null&&s.push(r[0]);return s=Ds(s),s.length===1?e=s.concat(e):e=[null].concat(e),e}computeMask(t,e){return _(()=>{if(e==null)return null;if(!Array.isArray(e))throw new D("`mask` should be an Array");if(!Array.isArray(t))throw new D("`inputs` should be an Array");if(e.length!==t.length)throw new D(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${t.length} vs ${e.length})`);if(e.every(r=>r==null))return null;e=e.map(r=>r==null?r:Sn(r,0));let s=e[0];for(let r=1;r<e.length-1;++r)s=as(s,e[r]);return s})}}class Ux extends kr{constructor(t){super(t)}mergeFunction(t){return _(()=>{let e=t[0].clone();for(let s=1;s<t.length;++s)e=nt(e,t[s]);return e})}}Ux.className="Add";Y(Ux);class Gx extends kr{constructor(t){super(t)}mergeFunction(t){return _(()=>{let e=t[0].clone();for(let s=1;s<t.length;++s)e=P(e,t[s]);return e})}}Gx.className="Multiply";Y(Gx);class Hx extends kr{constructor(t){super(t)}mergeFunction(t){return _(()=>{let e=t[0].clone();for(let s=1;s<t.length;++s)e=nt(e,t[s]);return P(1/t.length,e)})}}Hx.className="Average";Y(Hx);class jx extends kr{constructor(t){super(t)}mergeFunction(t){return _(()=>{let e=t[0];for(let s=1;s<t.length;++s)e=ks(e,t[s]);return e})}}jx.className="Maximum";Y(jx);class qx extends kr{constructor(t){super(t)}mergeFunction(t){return _(()=>{let e=t[0];for(let s=1;s<t.length;++s)e=Sc(e,t[s]);return e})}}qx.className="Minimum";Y(qx);class Kx extends kr{constructor(t){super(t),this.DEFAULT_AXIS=-1,t==null&&(t={}),this.axis=t.axis==null?this.DEFAULT_AXIS:t.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){if(!(Array.isArray(t)&&Array.isArray(t[0]))||t.length===1)throw new D("A `Concatenate` layer should be called on a list of at least 2 inputs");t=t;let e=!0;for(const r of t)if(r!=null){e=!1;break}if(e)return;const s=[];for(let r=0;r<t.length;++r){const o=t[r].slice();o.splice(this.axis,1);let a=!1;for(const i of s)if(Gt(i,o)){a=!0;break}a||s.push(o)}if(s.length>1)throw new D("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(t))}mergeFunction(t){return _(()=>Fp(t,this.axis))}computeOutputShape(t){if(!(Array.isArray(t)&&Array.isArray(t[0])))throw new D("A `Concatenate` layer should be called on a list of inputs.");const e=t,s=e[0].slice(),r=this.axis<0?s.length+this.axis:this.axis;for(const o of e.slice(1)){if(s[r]==null||o[r]==null){s[r]=null;break}s[r]+=o[r]}return s}computeMask(t,e){if(e==null)return null;if(!Array.isArray(e))throw new D("`mask` should be an array for Concatenate");if(!Array.isArray(t))throw new D("`inputs` should be an array for Concatenate");if(e.length!==t.length)throw new D(`Mismatch in the length of mask (${e.length}) and the legnth of inputs (${t.length})`);return _(()=>{let s=!0;if(e.forEach(a=>{if(a!=null){s=!1;return}}),s)return null;const r=[];for(let a=0;a<t.length;++a)e[a]==null?r.push(xn(t[a]).asType("bool")):e[a].rank<t[a].rank?r.push(Sn(e[a],-1)):r.push(e[a]);const o=Ue(r,this.axis);return Ed(o,-1,!1)})}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}Kx.className="Concatenate";Y(Kx);function go(n,t){for(;n<0;)n+=t;return n}function cE(n,t,e){if(n.shape.length>3||t.shape.length>3)throw new kt("batchDot is not implemented for tensors of 4D or higher rank yet");if(N(n.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${n.shape.length}`),N(n.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`),typeof e=="number"&&(e=[e,e]),n.dtype==="complex64"||t.dtype==="complex64")throw new kt("batchDot is not implemented for complex64-type Tensors yet.");const s=n.shape.length,r=t.shape.length;e==null&&(e=[s-1,r-2]);const o=e;return _(()=>{let a;if(s>r){a=s-r;const l=[];for(let c=0;c<a;++c)l.push(1);t=t.reshape(t.shape.concat(l))}else if(r>s){a=r-s;const l=[];for(let c=0;c<a;++c)l.push(1);n=n.reshape(n.shape.concat(l))}else a=0;let i;if(n.shape.length===2&&t.shape.length===2)o[0]===o[1]?i=n.mul(t).sum(o[0]):i=n.transpose([1,0]).mul(t).sum(o[1]);else{const l=o[0]!==n.shape.length-1,c=o[1]===t.shape.length-1;i=n.matMul(t,l,c)}if(a>0){let l;s>r?l=s+r-3:l=s-1;const c=[];for(let u=l;u<l+a;++u)c.push(u);i=i.squeeze(c)}return i.shape.length===1&&(i=i.expandDims(1)),i})}class Xx extends kr{constructor(t){super(t),this.axes=t.axes,this.normalize=t.normalize==null?!1:t.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){N(Array.isArray(t)&&t.length===2&&Array.isArray(t[0])&&Array.isArray(t[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const e=t[0],s=t[1];if(e.length>3||s.length>3)throw new kt("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(e,s);if(e[r[0]]!==s[r[1]])throw new D(`Dimension incompatibility: ${e[r[0]]} !== ${s[r[1]]}`)}mergeFunction(t){if(t.length!==2)throw new D(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${t.length} input(s).`);let e=t[0],s=t[1],r;return Array.isArray(this.axes)?r=this.axes.map((o,a)=>go(o,t[a].shape.length)):r=[go(this.axes,e.shape.length),go(this.axes,s.shape.length)],this.normalize&&(e=ol(e,r[0]),s=ol(s,r[1])),cE(e,s,r)}interpretAxes(t,e){let s;return Array.isArray(this.axes)?s=this.axes:s=[go(this.axes,t.length),go(this.axes,e.length)],s}computeOutputShape(t){N(Array.isArray(t)&&t.length===2&&Array.isArray(t[0])&&Array.isArray(t[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const e=t[0].slice(),s=t[1].slice();if(e.length>3||s.length>3)throw new kt("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(e,s);e.splice(r[0],1),s.splice(r[1],1),s.splice(0,1);const o=e.concat(s);return o.length===1&&o.push(1),o}computeMask(t,e){return null}getConfig(){const t={axes:this.axes,normalize:this.normalize},e=super.getConfig();return Object.assign(t,e),t}}Xx.className="Dot";Y(Xx);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Yx extends _t{constructor(t){super(t),this.supportsMasking=!0,this.stddev=t.stddev}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={stddev:this.stddev};return Object.assign(e,t),e}call(t,e){return _(()=>{this.invokeCallHook(t,e);const s=Ct(t);return Qa(()=>Mc(s.shape,0,this.stddev).add(s),()=>s,e.training||!1)})}}Yx.className="GaussianNoise";Y(Yx);class Jx extends _t{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return _(()=>{this.invokeCallHook(t,e);const s=Ct(t);return this.rate>0&&this.rate<1?Qa(()=>{const o=Math.sqrt(this.rate/(1-this.rate));return s.mul(Mc(s.shape,1,o))},()=>s,e.training||!1):s})}}Jx.className="GaussianDropout";Y(Jx);class Zx extends _t{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate,this.noiseShape=t.noiseShape}_getNoiseShape(t){return this.noiseShape||Ct(t).shape}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return _(()=>{if(this.rate<1&&this.rate>0){const s=this._getNoiseShape(t);return Qa(()=>{const o=Ct(t),i=-1.6732632423543772*1.0507009873554805;let l=wr(Ua(s),this.rate);l=Ya(l,"float32");const c=((1-this.rate)*(1+this.rate*i**2))**-.5,u=-c*i*this.rate;return o.mul(l).add(l.add(-1).mul(i)).mul(c).add(u)},()=>Ct(t),e.training||!1)}return t})}}Zx.className="AlphaDropout";Y(Zx);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Fo(n,t,e,s,r,o=.001){let a;if(n.rank===2)a=N$(n,t,e,s,r,o);else if(n.rank===3)a=S$(n,t,e,s,r,o);else if(n.rank===4)a=E$(n,t,e,s,r,o);else throw new kt(`batchNormalization is not implemented for array of rank ${n.rank} yet`);return a}function uE(n,t,e,s,r=.001){return _(()=>{const o=Ud(n,s),a=o.mean,i=o.variance;return[Fo(n,a,i,e,t,r),a,i]})}function hE(n,t,e,s,r=.001){return _(()=>{const o=Ud(n,s),a=o.mean,i=o.variance,l=[];for(const f of Yn(0,n.rank))s.indexOf(f)!==-1?l.push(1):l.push(n.shape[f]);const c=a.reshape(l),u=i.reshape(l),h=t==null?null:t.reshape(l),d=e==null?null:e.reshape(l);return[Fo(n,c,u,d,h,r),a,i]})}function dE(n,t,e,s,r=.001){return Gt(s.slice().sort(),Yn(0,n.rank-1))?uE(n,t,e,s,r):hE(n,t,e,s,r)}class Qx extends _t{constructor(t){t==null&&(t={}),super(t),this.supportsMasking=!0,this.axis=t.axis==null?-1:t.axis,this.momentum=t.momentum==null?.99:t.momentum,this.epsilon=t.epsilon==null?.001:t.epsilon,this.center=t.center==null?!0:t.center,this.scale=t.scale==null?!0:t.scale,this.betaInitializer=ae(t.betaInitializer||"zeros"),this.gammaInitializer=ae(t.gammaInitializer||"ones"),this.movingMeanInitializer=ae(t.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=ae(t.movingVarianceInitializer||"ones"),this.betaConstraint=Te(t.betaConstraint),this.gammaConstraint=Te(t.gammaConstraint),this.betaRegularizer=ie(t.betaRegularizer),this.gammaRegularizer=ie(t.gammaRegularizer)}build(t){t=ee(t);const e=this.axis>=0?this.axis:this.axis+t.length,s=t[e];if(s==null)throw new D(`Axis ${e} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(t)}.`);this.inputSpec=[new We({ndim:t.length,axes:{[e]:s}})];const r=[s];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(t,e){return _(()=>{const s=e.training==null?!1:e.training,r=Ct(t),o=r.shape,a=o.length,i=Yn(0,a),l=this.axis>=0?this.axis:this.axis+a;i.splice(l,1);const c=fr(1,a);c[l]=o[l];const u=i.slice();u.sort();const h=!Gt(u,Yn(0,a).slice(0,a-1)),d=()=>{if(h){const b=this.movingMean.read().reshape(c),$=this.movingVariance.read().reshape(c),x=this.center?this.beta.read().reshape(c):null,w=this.scale?this.gamma.read().reshape(c):null;return Fo(r,b,$,x,w,this.epsilon)}else return Fo(r,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!s)return d();const[p,f,m]=dE(r,this.gamma.read(),this.beta.read(),i,this.epsilon),g=(b,$,x)=>{_(()=>{const w=1-x,C=b.read(),k=C.sub($).mul(w);b.write(C.sub(k))})};return(()=>{g(this.movingMean,f,this.momentum),g(this.movingVariance,m,this.momentum)})(),p})}getConfig(){const t={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:he(this.betaInitializer),gammaInitializer:he(this.gammaInitializer),movingMeanInitializer:he(this.movingMeanInitializer),movingVarianceInitializer:he(this.movingVarianceInitializer),betaRegularizer:te(this.betaRegularizer),gammaRegularizer:te(this.gammaRegularizer),betaConstraint:Se(this.betaConstraint),gammaConstraint:Se(this.gammaConstraint)},e=super.getConfig();return Object.assign(t,e),t}}Qx.className="BatchNormalization";Y(Qx);class t0 extends _t{constructor(t){if(t==null&&(t={}),super(t),this.axis=t.axis==null?-1:t.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(const e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=t.epsilon==null?.001:t.epsilon,this.center=t.center==null?!0:t.center,this.scale=t.scale==null?!0:t.scale,this.betaInitializer=ae(t.betaInitializer||"zeros"),this.gammaInitializer=ae(t.gammaInitializer||"ones"),this.betaRegularizer=ie(t.betaRegularizer),this.gammaRegularizer=ie(t.gammaRegularizer),this.supportsMasking=!0}build(t){t=ee(t);const e=t.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let o=0;o<this.axis.length;++o)this.axis[o]<0&&(this.axis[o]+=e);for(const o of this.axis)if(o<0||o>=e)throw new Error(`Invalid axis: ${o}`);if(this.axis.length!==Ds(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const s=this.axis.map(o=>t[o]),r=!0;this.scale?this.gamma=this.addWeight("gamma",s,"float32",this.gammaInitializer,this.gammaRegularizer,r):this.gamma=null,this.center?this.beta=this.addWeight("beta",s,"float32",this.betaInitializer,this.betaRegularizer,r):this.beta=null,this.built=!0}call(t,e){const s=Ct(t),r=s.shape,o=r.length;return _(()=>{let{mean:i,variance:l}=Ud(s,this.axis,!0);const c=fr(1,o);for(const m of this.axis)c[m]=r[m];const u=m=>m!=null&&m.shape.length!==o&&this.axis!==[o-1]?m.reshape(c):m;let h=u(this.gamma.read()),d=u(this.beta.read());const p=[],f=[];for(let m=0;m<o;++m)this.axis.indexOf(m)!==-1?(p.push(r[m]),f.push(1)):(p.push(1),f.push(r[m]));return i=i.tile(p),l=l.tile(p),h=h.tile(f),d=d.tile(f),Fo(s,i,l,d,h,this.epsilon)})}getConfig(){const t={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:he(this.betaInitializer),gammaInitializer:he(this.gammaInitializer),betaRegularizer:te(this.betaRegularizer),gammaRegularizer:te(this.gammaRegularizer)},e=super.getConfig();return Object.assign(t,e),t}}t0.className="LayerNormalization";Y(t0);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function pE(n,t,e){return _(()=>{if(n.rank!==4)throw new D(`temporalPadding expects input tensor to be 4-D, but received a ${n.rank}-D tensor.`);if(t==null&&(t=[[1,1],[1,1]]),t.length!==2||t[0].length!==2||t[1].length!==2)throw new D("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(e==null&&(e=Xn()),e!=="channelsLast"&&e!=="channelsFirst")throw new D(`Unknown data format: ${e}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let s;return e==="channelsFirst"?s=[[0,0],[0,0],t[0],t[1]]:s=[[0,0],t[0],t[1],[0,0]],Tc(n,s)})}class e0 extends _t{constructor(t){if(t==null&&(t={}),super(t),this.dataFormat=t.dataFormat==null?Xn():t.dataFormat,t.padding==null)this.padding=[[1,1],[1,1]];else if(typeof t.padding=="number")this.padding=[[t.padding,t.padding],[t.padding,t.padding]];else{if(t.padding=t.padding,t.padding.length!==2)throw new D(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${t.padding.length} array.`);let e,s;if(typeof t.padding[0]=="number")e=[t.padding[0],t.padding[0]],s=[t.padding[1],t.padding[1]];else{if(t.padding=t.padding,t.padding[0].length!==2)throw new D(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${t.padding[0].length} array.`);if(e=t.padding[0],t.padding[1].length!==2)throw new D(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${t.padding[1].length} array.`);s=t.padding[1]}this.padding=[e,s]}this.inputSpec=[new We({ndim:4})]}computeOutputShape(t){t=ee(t);let e,s;return this.dataFormat==="channelsFirst"?(t[2]!=null&&t[2]>=0?e=t[2]+this.padding[0][0]+this.padding[0][1]:e=null,t[3]!=null&&t[3]>=0?s=t[3]+this.padding[1][0]+this.padding[1][1]:s=null,[t[0],t[1],e,s]):(t[1]!=null&&t[1]>=0?e=t[1]+this.padding[0][0]+this.padding[0][1]:e=null,t[2]!=null&&t[2]>=0?s=t[2]+this.padding[1][0]+this.padding[1][1]:s=null,[t[0],e,s,t[3]])}call(t,e){return _(()=>pE(Ct(t),this.padding,this.dataFormat))}getConfig(){const t={padding:this.padding,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}e0.className="ZeroPadding2D";Y(e0);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Yc(n,t,e,s,r,o){return _(()=>{be(r),kb(o),wn(s),e==null&&(e=[1,1]),s==null&&(s="valid"),r==null&&(r=Xn()),o==null&&(o="max"),n=jp(n,r);let a;const i=s==="same"?"same":"valid";return o==="max"?a=Ic(n,t,e,i):a=vc(n,t,e,i),r==="channelsFirst"&&(a=Kt(a,[0,3,1,2])),a})}function n0(n,t,e,s,r,o){return _(()=>{be(r),kb(o),wn(s),e==null&&(e=[1,1,1]),s==null&&(s="valid"),r==null&&(r=Xn()),o==null&&(o="max"),n=wx(n,r);let a;const i=s==="same"?"same":"valid";return o==="max"?a=Ly(n,t,e,i):a=Cy(n,t,e,i),r==="channelsFirst"&&(a=Kt(a,[0,4,1,2,3])),a})}class s0 extends _t{constructor(t){if(t.poolSize==null&&(t.poolSize=2),super(t),typeof t.poolSize=="number")this.poolSize=[t.poolSize];else if(Array.isArray(t.poolSize)&&t.poolSize.length===1&&typeof t.poolSize[0]=="number")this.poolSize=t.poolSize;else throw new D(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.poolSize)}`);if(Oe(this.poolSize,"poolSize"),t.strides==null)this.strides=this.poolSize;else if(typeof t.strides=="number")this.strides=[t.strides];else if(Array.isArray(t.strides)&&t.strides.length===1&&typeof t.strides[0]=="number")this.strides=t.strides;else throw new D(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.strides)}`);Oe(this.strides,"strides"),this.padding=t.padding==null?"valid":t.padding,wn(this.padding),this.inputSpec=[new We({ndim:3})]}computeOutputShape(t){t=ee(t);const e=Gn(t[1],this.poolSize[0],this.padding,this.strides[0]);return[t[0],e,t[2]]}call(t,e){return _(()=>{this.invokeCallHook(t,e),t=Ja(Ct(t),2);const s=this.poolingFunction(Ct(t),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return Gr(s,[2])})}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides},e=super.getConfig();return Object.assign(t,e),t}}class r0 extends s0{constructor(t){super(t)}poolingFunction(t,e,s,r,o){return be(o),wn(r),Yc(t,e,s,r,o,"max")}}r0.className="MaxPooling1D";Y(r0);class o0 extends s0{constructor(t){super(t)}poolingFunction(t,e,s,r,o){return be(o),wn(r),Yc(t,e,s,r,o,"avg")}}o0.className="AveragePooling1D";Y(o0);class a0 extends _t{constructor(t){if(t.poolSize==null&&(t.poolSize=[2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize],t.strides==null)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(t.strides.length!==2)throw new D(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides];Oe(this.poolSize,"poolSize"),Oe(this.strides,"strides"),this.padding=t.padding==null?"valid":t.padding,this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,be(this.dataFormat),wn(this.padding),this.inputSpec=[new We({ndim:4})]}computeOutputShape(t){t=ee(t);let e=this.dataFormat==="channelsFirst"?t[2]:t[1],s=this.dataFormat==="channelsFirst"?t[3]:t[2];return e=Gn(e,this.poolSize[0],this.padding,this.strides[0]),s=Gn(s,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[t[0],t[1],e,s]:[t[0],e,s,t[3]]}call(t,e){return _(()=>(this.invokeCallHook(t,e),this.poolingFunction(Ct(t),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class i0 extends a0{constructor(t){super(t)}poolingFunction(t,e,s,r,o){return be(o),wn(r),Yc(t,e,s,r,o,"max")}}i0.className="MaxPooling2D";Y(i0);class l0 extends a0{constructor(t){super(t)}poolingFunction(t,e,s,r,o){return be(o),wn(r),Yc(t,e,s,r,o,"avg")}}l0.className="AveragePooling2D";Y(l0);class c0 extends _t{constructor(t){if(t.poolSize==null&&(t.poolSize=[2,2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize,t.poolSize],t.strides==null)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(t.strides.length!==3)throw new D(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides,t.strides];Oe(this.poolSize,"poolSize"),Oe(this.strides,"strides"),this.padding=t.padding==null?"valid":t.padding,this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,be(this.dataFormat),wn(this.padding),this.inputSpec=[new We({ndim:5})]}computeOutputShape(t){t=ee(t);let e=this.dataFormat==="channelsFirst"?t[2]:t[1],s=this.dataFormat==="channelsFirst"?t[3]:t[2],r=this.dataFormat==="channelsFirst"?t[4]:t[3];return e=Gn(e,this.poolSize[0],this.padding,this.strides[0]),s=Gn(s,this.poolSize[1],this.padding,this.strides[1]),r=Gn(r,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[t[0],t[1],e,s,r]:[t[0],e,s,r,t[4]]}call(t,e){return _(()=>(this.invokeCallHook(t,e),this.poolingFunction(Ct(t),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class u0 extends c0{constructor(t){super(t)}poolingFunction(t,e,s,r,o){return be(o),wn(r),n0(t,e,s,r,o,"max")}}u0.className="MaxPooling3D";Y(u0);class h0 extends c0{constructor(t){super(t)}poolingFunction(t,e,s,r,o){return be(o),wn(r),n0(t,e,s,r,o,"avg")}}h0.className="AveragePooling3D";Y(h0);class d0 extends _t{constructor(t){super(t),this.inputSpec=[new We({ndim:3})]}computeOutputShape(t){return[t[0],t[2]]}call(t,e){throw new kt}}class p0 extends d0{constructor(t){super(t||{})}call(t,e){return _(()=>{const s=Ct(t);return ge(s,1)})}}p0.className="GlobalAveragePooling1D";Y(p0);class f0 extends d0{constructor(t){super(t||{})}call(t,e){return _(()=>{const s=Ct(t);return Rn(s,1)})}}f0.className="GlobalMaxPooling1D";Y(f0);class m0 extends _t{constructor(t){super(t),this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,be(this.dataFormat),this.inputSpec=[new We({ndim:4})]}computeOutputShape(t){return t=t,this.dataFormat==="channelsLast"?[t[0],t[3]]:[t[0],t[1]]}call(t,e){throw new kt}getConfig(){const t={dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class g0 extends m0{call(t,e){return _(()=>{const s=Ct(t);return this.dataFormat==="channelsLast"?ge(s,[1,2]):ge(s,[2,3])})}}g0.className="GlobalAveragePooling2D";Y(g0);class y0 extends m0{call(t,e){return _(()=>{const s=Ct(t);return this.dataFormat==="channelsLast"?Rn(s,[1,2]):Rn(s,[2,3])})}}y0.className="GlobalMaxPooling2D";Y(y0);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class b0 extends _t{constructor(t){super(t),this.layer=t.layer}build(t){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(t){this.layer!=null&&(this.layer.trainable=t)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(t){this.layer.setWeights(t)}getConfig(){const t={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},e=super.getConfig();return Object.assign(t,e),t}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(t)}static fromConfig(t,e,s={}){const r=e.layer,o=ys(r,s);delete e.layer;const a={layer:o};return Object.assign(a,e),new t(a)}}class x0 extends b0{constructor(t){super(t),this.supportsMasking=!0}build(t){if(t=ee(t),t.length<3)throw new D(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(t)}`);this.inputSpec=[{shape:t}];const e=[t[0]].concat(t.slice(2));this.layer.built||(this.layer.build(e),this.layer.built=!0),super.build(t)}computeOutputShape(t){t=ee(t);const e=[t[0]].concat(t.slice(2)),s=this.layer.computeOutputShape(e),r=t[1];return[s[0],r].concat(s.slice(1))}call(t,e){return _(()=>(t=Ct(t),Tx((a,i)=>[Ct(this.layer.call(a,e)),[]],t,[],!1,null,null,!1,!0)[1]))}}x0.className="TimeDistributed";Y(x0);function fE(n){$r(PT,"BidirectionalMergeMode",n)}const mE="concat";class w0 extends b0{constructor(t){super(t);const e=t.layer.getConfig(),s={};s.className=t.layer.getClassName(),s.config=e,this.forwardLayer=ys(s),e.goBackwards=e.goBackwards!==!0;const r={};if(r.className=t.layer.getClassName(),r.config=e,this.backwardLayer=ys(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=t.mergeMode===void 0?mE:t.mergeMode,fE(this.mergeMode),t.weights)throw new kt("weights support is not implemented for Bidirectional layer yet.");this._stateful=t.layer.stateful,this.returnSequences=t.layer.returnSequences,this.returnState=t.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=t.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(t){this._trainable=t,this.forwardLayer!=null&&(this.forwardLayer.trainable=t),this.backwardLayer!=null&&(this.backwardLayer.trainable=t)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(t){const e=t.length,s=Math.floor(e/2);this.forwardLayer.setWeights(t.slice(0,s)),this.backwardLayer.setWeights(t.slice(s))}computeOutputShape(t){let e=this.forwardLayer.computeOutputShape(t);Array.isArray(e)&&Array.isArray(e[0])||(e=[e]),e=e;let s,r,o;return this.returnState&&(o=e.slice(1)),s=e[0],s=s,this.mergeMode==="concat"?(s[s.length-1]*=2,r=[s]):this.mergeMode==null?r=[s,s.slice()]:r=[s],this.returnState?this.mergeMode==null?r.concat(o).concat(o.slice()):[s].concat(o).concat(o.slice()):sn(r)}apply(t,e){let s=e==null?null:e.initialState,r=e==null?null:e.constants;e==null&&(e={});const o=Sx(t,s,r,this.numConstants);if(t=o.inputs,s=o.initialState,r=o.constants,Array.isArray(t)&&(s=t.slice(1),t=t[0]),(s==null||s.length===0)&&r==null)return super.apply(t,e);const a=[],i=[];if(s!=null){const c=s.length;if(c%2>0)throw new D("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");e.initialState=s,a.push(...s);const u=s.map(h=>new We({shape:h.shape}));this.forwardLayer.stateSpec=u.slice(0,c/2),this.backwardLayer.stateSpec=u.slice(c/2),i.push(...u)}if(r!=null)throw new kt("Support for constants in Bidirectional layers is not implemented yet.");const l=a[0]instanceof ns;for(const c of a)if(c instanceof ns!==l)throw new D("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(l){const c=[t].concat(a),u=this.inputSpec.concat(i),h=this.inputSpec;this.inputSpec=u;const d=super.apply(c,e);return this.inputSpec=h,d}else return super.apply(t,e)}call(t,e){return _(()=>{const s=e.initialState;let r,o;if(s==null)r=this.forwardLayer.call(t,e),o=this.backwardLayer.call(t,e);else{const l=s.slice(0,s.length/2),c=s.slice(s.length/2);r=this.forwardLayer.call(t,Object.assign(e,{initialState:l})),o=this.backwardLayer.call(t,Object.assign(e,{initialState:c}))}let a;this.returnState&&(Array.isArray(r)&&(a=r.slice(1).concat(o.slice(1))),r=r[0],o=o[0]),this.returnSequences&&(o=xs(o,1));let i;return this.mergeMode==="concat"?i=Fp([r,o]):this.mergeMode==="sum"?i=nt(r,o):this.mergeMode==="ave"?i=P(.5,nt(r,o)):this.mergeMode==="mul"?i=P(r,o):this.mergeMode==null&&(i=[r,o]),this.returnState?this.mergeMode==null?i.concat(a):[i].concat(a):i})}resetStates(t){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(t){ir(this.forwardLayer.name,()=>{this.forwardLayer.build(t)}),ir(this.backwardLayer.name,()=>{this.backwardLayer.build(t)}),this.built=!0}computeMask(t,e){Array.isArray(e)&&(e=e[0]);let s;if(this.returnSequences?this.mergeMode==null?s=[e,e]:s=e:this.mergeMode==null?s=[null,null]:s=null,this.returnState){const o=this.forwardLayer.states.map(a=>null);return Array.isArray(s)?s.concat(o).concat(o):[s].concat(o).concat(o)}else return s}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(t),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(t)}getConfig(){const t={mergeMode:this.mergeMode},e=super.getConfig();return Object.assign(t,e),t}static fromConfig(t,e){const s=ys(e.layer);if(delete e.layer,e.numConstants!=null)throw new kt("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=e;return r.layer=s,new t(r)}}w0.className="Bidirectional";Y(w0);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var Un;(function(n){n[n.DT_INVALID=0]="DT_INVALID",n[n.DT_FLOAT=1]="DT_FLOAT",n[n.DT_DOUBLE=2]="DT_DOUBLE",n[n.DT_INT32=3]="DT_INT32",n[n.DT_UINT8=4]="DT_UINT8",n[n.DT_INT16=5]="DT_INT16",n[n.DT_INT8=6]="DT_INT8",n[n.DT_STRING=7]="DT_STRING",n[n.DT_COMPLEX64=8]="DT_COMPLEX64",n[n.DT_INT64=9]="DT_INT64",n[n.DT_BOOL=10]="DT_BOOL",n[n.DT_QINT8=11]="DT_QINT8",n[n.DT_QUINT8=12]="DT_QUINT8",n[n.DT_QINT32=13]="DT_QINT32",n[n.DT_BFLOAT16=14]="DT_BFLOAT16",n[n.DT_FLOAT_REF=101]="DT_FLOAT_REF",n[n.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",n[n.DT_INT32_REF=103]="DT_INT32_REF",n[n.DT_UINT8_REF=104]="DT_UINT8_REF",n[n.DT_INT16_REF=105]="DT_INT16_REF",n[n.DT_INT8_REF=106]="DT_INT8_REF",n[n.DT_STRING_REF=107]="DT_STRING_REF",n[n.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",n[n.DT_INT64_REF=109]="DT_INT64_REF",n[n.DT_BOOL_REF=110]="DT_BOOL_REF",n[n.DT_QINT8_REF=111]="DT_QINT8_REF",n[n.DT_QUINT8_REF=112]="DT_QUINT8_REF",n[n.DT_QINT32_REF=113]="DT_QINT32_REF",n[n.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF"})(Un||(Un={}));var xm;(function(n){(function(t){t[t.LEGACY=0]="LEGACY",t[t.V1=1]="V1",t[t.V2=2]="V2"})(n.CheckpointFormatVersion||(n.CheckpointFormatVersion={}))})(xm||(xm={}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gE={};function v0(n){return gE[n]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v(n,t,e,s,r){const o=t.inputParams[n];if(o&&o.inputIndexStart!==void 0){const i=o.inputIndexStart,l=o.inputIndexEnd===0?void 0:o.inputIndexEnd===void 0?i+1:o.inputIndexEnd;if(o.type==="tensor")return rn(t.inputNames[o.inputIndexStart],e,s,r);if(o.type==="tensors")return t.inputNames.slice(i,l).map(d=>rn(d,e,s,r));const c=rn(t.inputNames.slice(i)[0],e,s,r),u=c.dataSync();return o.type==="number"?u[0]:Dn(c.shape,u)}const a=t.attrParams[n];return a&&a.value}function rn(n,t,e,s){const[r,o]=ln(n);if(s!=null){const i=s.getHashTableHandleByName(r);if(i!=null)return i}const a=e.currentContextIds.find(i=>!!t[ul(r,i)]);return a!==void 0?t[ul(r,a)][o]:void 0}function yE(n,t,e){return t[ul(n,e.currentContextId)]}function ps(n,t){const[e,s]=ln(n);return[ul(e,t&&t.currentContextId),s]}function ul(n,t){return t?`${n}-${t}`:n}function ln(n){const t=n.split(":");return t.length===1?[n,0]:[t[0],Number(t[t.length-1])]}function Ai(n,t,e){let s=v("pad",n,t,e);if(s==="explicit"){s=v("explicitPaddings",n,t,e);const r=[[0,0],[0,0],[0,0],[0,0]];for(let o=0;o<4;o++)r[o][0]=s[o*2],r[o][1]=s[o*2+1];return r}return s}function fs(n){return n.kept?n:sr(n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bE=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],xE=Object.freeze(Object.defineProperty({__proto__:null,json:bE},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wE=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],vE=Object.freeze(Object.defineProperty({__proto__:null,json:wE},Symbol.toStringTag,{value:"Module"})),$E=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}],kE=Object.freeze(Object.defineProperty({__proto__:null,json:$E},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CE=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],NE=Object.freeze(Object.defineProperty({__proto__:null,json:CE},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IE=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],SE=Object.freeze(Object.defineProperty({__proto__:null,json:IE},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TE=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],EE=Object.freeze(Object.defineProperty({__proto__:null,json:TE},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AE=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],DE=Object.freeze(Object.defineProperty({__proto__:null,json:AE},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RE=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],FE=Object.freeze(Object.defineProperty({__proto__:null,json:RE},Symbol.toStringTag,{value:"Module"})),OE=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}],_E=Object.freeze(Object.defineProperty({__proto__:null,json:OE},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LE=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}],PE=Object.freeze(Object.defineProperty({__proto__:null,json:LE},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zE=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],BE=Object.freeze(Object.defineProperty({__proto__:null,json:zE},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ME=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],VE=Object.freeze(Object.defineProperty({__proto__:null,json:ME},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WE=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],UE=Object.freeze(Object.defineProperty({__proto__:null,json:WE},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GE=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],HE=Object.freeze(Object.defineProperty({__proto__:null,json:GE},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jE=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],qE=Object.freeze(Object.defineProperty({__proto__:null,json:jE},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KE=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],XE=Object.freeze(Object.defineProperty({__proto__:null,json:KE},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YE=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]}],JE=Object.freeze(Object.defineProperty({__proto__:null,json:YE},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wm{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const t=[xE,vE,kE,NE,SE,EE,DE,BE,PE,FE,VE,UE,HE,qE,XE,JE,_E],e=[].concat(...t.map(s=>s.json));this.opMappers=e.reduce((s,r)=>(s[r.tfOpName]=r,s),{})}transformGraph(t,e={}){const s=t.node,r=[],o=[],a=[],i=s.reduce((m,g)=>(m[g.name]=this.mapNode(g),g.op.startsWith("Placeholder")?r.push(m[g.name]):g.op==="Const"?o.push(m[g.name]):(g.input==null||g.input.length===0)&&a.push(m[g.name]),m),{});let l=[];const c=[];let u={},h={};e!=null&&(u=this.mapSignatureEntries(e.inputs),h=this.mapSignatureEntries(e.outputs));const d=Object.keys(i);d.forEach(m=>{const g=i[m];g.inputNames.forEach(y=>{const[b]=ps(y);g.inputs.push(i[b]),i[b].children.push(g)})}),Object.keys(h).length===0?d.forEach(m=>{const g=i[m];g.children.length===0&&c.push(g)}):Object.keys(h).forEach(m=>{const[g]=ps(m),y=i[g];y!=null&&(y.signatureKey=h[m],c.push(y))}),Object.keys(u).length>0?Object.keys(u).forEach(m=>{const[g]=ps(m),y=i[g];y&&(y.signatureKey=u[m],l.push(y))}):l=r;let p={};t.library!=null&&t.library.function!=null&&(p=t.library.function.reduce((m,g)=>(m[g.signature.name]=this.mapFunction(g),m),{}));const f={nodes:i,inputs:l,outputs:c,weights:o,placeholders:r,signature:e,functions:p};return a.length>0&&(f.initNodes=a),f}mapSignatureEntries(t){return Object.keys(t||{}).reduce((e,s)=>(e[t[s].name]=s,e),{})}mapNode(t){const e=v0(t.op)||this.opMappers[t.op]||{};t.attr==null&&(t.attr={});const s={name:t.name,op:t.op,category:e.category,inputNames:(t.input||[]).map(r=>r.startsWith("^")?r.substr(1):r),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:t.attr};return e.inputs!=null&&(s.inputParams=e.inputs.reduce((r,o)=>(r[o.name]={type:o.type,inputIndexStart:o.start,inputIndexEnd:o.end},r),{})),e.attrs!=null&&(s.attrParams=e.attrs.reduce((r,o)=>{const a=o.type;let i;switch(o.type){case"string":i=ih(t.attr,o.tfName,o.defaultValue),i===void 0&&o.tfDeprecatedName&&(i=ih(t.attr,o.tfDeprecatedName,o.defaultValue));break;case"string[]":i=fh(t.attr,o.tfName,o.defaultValue),i===void 0&&o.tfDeprecatedName&&(i=fh(t.attr,o.tfDeprecatedName,o.defaultValue));break;case"number":i=ch(t.attr,o.tfName,o.defaultValue||0),i===void 0&&o.tfDeprecatedName&&(i=ch(t.attr,o.tfDeprecatedName,o.defaultValue));break;case"number[]":i=ph(t.attr,o.tfName,o.defaultValue),i===void 0&&o.tfDeprecatedName&&(i=ph(t.attr,o.tfDeprecatedName,o.defaultValue));break;case"bool":i=lh(t.attr,o.tfName,o.defaultValue),i===void 0&&o.tfDeprecatedName&&(i=lh(t.attr,o.tfDeprecatedName,o.defaultValue));break;case"bool[]":i=gh(t.attr,o.tfName,o.defaultValue),i===void 0&&o.tfDeprecatedName&&(i=gh(t.attr,o.tfDeprecatedName,o.defaultValue));break;case"shape":i=dh(t.attr,o.tfName,o.defaultValue),i===void 0&&o.tfDeprecatedName&&(i=dh(t.attr,o.tfDeprecatedName,o.defaultValue));break;case"shape[]":i=mh(t.attr,o.tfName,o.defaultValue),i===void 0&&o.tfDeprecatedName&&(i=mh(t.attr,o.tfDeprecatedName,o.defaultValue));break;case"dtype":i=uh(t.attr,o.tfName,o.defaultValue),i===void 0&&o.tfDeprecatedName&&(i=uh(t.attr,o.tfDeprecatedName,o.defaultValue));break;case"dtype[]":i=hh(t.attr,o.tfName,o.defaultValue),i===void 0&&o.tfDeprecatedName&&(i=hh(t.attr,o.tfDeprecatedName,o.defaultValue));break;case"func":i=vm(t.attr,o.tfName,o.defaultValue),i===void 0&&o.tfDeprecatedName&&(i=vm(t.attr,o.tfDeprecatedName,o.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${o.type} for op: ${t.op}`)}return r[o.name]={value:i,type:a},r},{})),s}mapFunction(t){const e=t.nodeDef,s=[],r=[];let o={};e!=null&&(o=e.reduce((h,d)=>(h[d.name]=this.mapNode(d),d.op==="Const"&&r.push(h[d.name]),h),{}));const a=[],i=[];t.signature.inputArg.forEach(h=>{const[d]=ps(h.name),p={name:d,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:Zp(h.type),type:"dtype"}},children:[]};p.signatureKey=h.name,a.push(p),o[d]=p}),Object.keys(o).forEach(h=>{const d=o[h];d.inputNames.forEach(p=>{const[f]=ps(p);d.inputs.push(o[f]),o[f].children.push(d)})});const c=t.ret;t.signature.outputArg.forEach(h=>{const[d,p]=ps(c[h.name]),f=o[d];f!=null&&(f.defaultOutput=p,i.push(f))});const u=this.mapArgsToSignature(t);return{nodes:o,inputs:a,outputs:i,weights:r,placeholders:s,signature:u}}mapArgsToSignature(t){return{methodName:t.signature.name,inputs:t.signature.inputArg.reduce((e,s)=>(e[s.name]=this.mapArgToTensorInfo(s),e),{}),outputs:t.signature.outputArg.reduce((e,s)=>(e[s.name]=this.mapArgToTensorInfo(s,t.ret),e),{})}}mapArgToTensorInfo(t,e){let s=t.name;return e!=null&&(s=e[s]),{name:s,dtype:t.type}}}function ZE(n){const t=X().global;if(typeof t.atob<"u")return t.atob(n);if(typeof Buffer<"u")return new Buffer(n,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function $0(n,t){const e=Array.isArray(n)?String.fromCharCode.apply(null,n):ZE(n);return t?e:e.toLowerCase()}function ih(n,t,e,s=!1){const r=n[t];return r!=null?$0(r.s,s):e}function lh(n,t,e){const s=n[t];return s?s.b:e}function ch(n,t,e){const s=n[t]||{},r=s.i!=null?s.i:s.f!=null?s.f:e;return typeof r=="number"?r:parseInt(r,10)}function Zp(n){switch(typeof n=="string"&&(n=Un[n]),n){case Un.DT_FLOAT:return"float32";case Un.DT_INT32:case Un.DT_INT64:case Un.DT_INT8:case Un.DT_UINT8:return"int32";case Un.DT_BOOL:return"bool";case Un.DT_DOUBLE:return"float32";case Un.DT_STRING:return"string";default:return null}}function vm(n,t,e){const s=n[t];return s&&s.func?s.func.name:e}function uh(n,t,e){const s=n[t];return s&&s.type?Zp(s.type):e}function hh(n,t,e){const s=n[t];return s&&s.list&&s.list.type?s.list.type.map(r=>Zp(r)):e}function k0(n){if(!n.unknownRank)return n.dim!=null?n.dim.map(t=>typeof t.size=="number"?t.size:parseInt(t.size,10)):[]}function dh(n,t,e){const s=n[t];return s&&s.shape?k0(s.shape):e}function ph(n,t,e){const s=n[t];return s?((s.list.f&&s.list.f.length?s.list.f:s.list.i)||[]).map(r=>typeof r=="number"?r:parseInt(r,10)):e}function fh(n,t,e,s=!1){const r=n[t];return r&&r.list&&r.list.s?r.list.s.map(o=>$0(o,s)):e}function mh(n,t,e){const s=n[t];return s&&s.list&&s.list.shape?s.list.shape.map(r=>k0(r)):e}function gh(n,t,e){const s=n[t];return s&&s.list&&s.list.b?s.list.b:e}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class QE{constructor(t,e,s){this.node=t,this.tensorMap=e,this.context=s,this.inputs=[],this.attrs={},this.inputs=t.inputNames.map(r=>this.getInput(r)),t.rawAttrs!=null&&(this.attrs=Object.keys(t.rawAttrs).reduce((r,o)=>(r[o]=this.getAttr(o),r),{}))}getInput(t){return rn(t,this.tensorMap,this.context)}getAttr(t,e){const s=this.node.rawAttrs[t];if(s.tensor!=null)return rn(t,this.tensorMap,this.context);if(s.i!=null||s.f!=null)return ch(this.node.rawAttrs,t,e);if(s.s!=null)return ih(this.node.rawAttrs,t,e);if(s.b!=null)return lh(this.node.rawAttrs,t,e);if(s.shape!=null)return dh(this.node.rawAttrs,t,e);if(s.type!=null)return uh(this.node.rawAttrs,t,e);if(s.list!=null){if(s.list.i!=null||s.list.f!=null)return ph(this.node.rawAttrs,t,e);if(s.list.s!=null)return fh(this.node.rawAttrs,t,e);if(s.list.shape!=null)return mh(this.node.rawAttrs,t,e);if(s.list.b!=null)return gh(this.node.rawAttrs,t,e);if(s.list.type!=null)return hh(this.node.rawAttrs,t,e)}return e}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tA=(n,t,e)=>{switch(n.op){case"BiasAdd":case"AddV2":case"Add":return[nt(v("a",n,t,e),v("b",n,t,e))];case"AddN":return[t$(v("tensors",n,t,e))];case"FloorMod":case"Mod":return[zy(v("a",n,t,e),v("b",n,t,e))];case"Mul":return[P(v("a",n,t,e),v("b",n,t,e))];case"RealDiv":case"Div":return[gt(v("a",n,t,e),v("b",n,t,e))];case"DivNoNan":return[Ey(v("a",n,t,e),v("b",n,t,e))];case"FloorDiv":return[Td(v("a",n,t,e),v("b",n,t,e))];case"Sub":return[xt(v("a",n,t,e),v("b",n,t,e))];case"Minimum":return[Sc(v("a",n,t,e),v("b",n,t,e))];case"Maximum":return[ks(v("a",n,t,e),v("b",n,t,e))];case"Pow":return[pr(v("a",n,t,e),v("b",n,t,e))];case"SquaredDifference":return[Ky(v("a",n,t,e),v("b",n,t,e))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eA=(n,t,e)=>{switch(n.op){case"Abs":case"ComplexAbs":return[Ze(v("x",n,t,e))];case"Acos":return[gy(v("x",n,t,e))];case"Acosh":return[yy(v("x",n,t,e))];case"Asin":return[xy(v("x",n,t,e))];case"Asinh":return[wy(v("x",n,t,e))];case"Atan":return[vy(v("x",n,t,e))];case"Atan2":return[$y(v("x",n,t,e),v("y",n,t,e))];case"Atanh":return[ky(v("x",n,t,e))];case"Ceil":return[Ny(v("x",n,t,e))];case"Complex":return[ur(v("real",n,t,e),v("imag",n,t,e))];case"Cos":return[kc(v("x",n,t,e))];case"Cosh":return[_d(v("x",n,t,e))];case"Elu":return[Ma(v("x",n,t,e))];case"Erf":return[Ay(v("x",n,t,e))];case"Exp":return[bs(v("x",n,t,e))];case"Expm1":return[Dy(v("x",n,t,e))];case"Floor":return[Va(v("x",n,t,e))];case"Log":return[jn(v("x",n,t,e))];case"Log1p":return[Oy(v("x",n,t,e))];case"Imag":return[zd(v("x",n,t,e))];case"Neg":return[Ie(v("x",n,t,e))];case"Reciprocal":return[Vy(v("x",n,t,e))];case"Real":return[tl(v("x",n,t,e))];case"Relu":return[vr(v("x",n,t,e))];case"Round":return[Wy(v("x",n,t,e))];case"Selu":return[Kd(v("x",n,t,e))];case"Sigmoid":return[to(v("x",n,t,e))];case"Sin":return[Xd(v("x",n,t,e))];case"Sign":return[Gy(v("x",n,t,e))];case"Sinh":return[Yd(v("x",n,t,e))];case"Softplus":return[Wa(v("x",n,t,e))];case"Sqrt":return[Xe(v("x",n,t,e))];case"Square":return[se(v("x",n,t,e))];case"Tanh":return[Dd(v("x",n,t,e))];case"Tan":return[Yy(v("x",n,t,e))];case"ClipByValue":return[un(v("x",n,t,e),v("clipValueMin",n,t,e),v("clipValueMax",n,t,e))];case"Relu6":return[jd(v("x",n,t,e))];case"Rsqrt":return[qd(rn(n.inputNames[0],t,e))];case"Prod":return[Gd(v("x",n,t,e),v("axes",n,t,e))];case"LeakyRelu":return[Cc(v("x",n,t,e),v("alpha",n,t,e))];case"Prelu":return[Ac(v("x",n,t,e),v("alpha",n,t,e))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function In(n,t,e=""){if(!(typeof n=="number"||typeof t=="number")){N(n.length===t.length,()=>e+` Shapes ${n} and ${t} must match`);for(let s=0;s<n.length;s++){const r=n[s],o=t[s];N(r<0||o<0||r===o,()=>e+` Shapes ${n} and ${t} must match`)}}}function $m(n){return!(typeof n=="number"||n.some(t=>t<0))}function yo(n,t,e){let s=yh(n,e);const r=!$m(s);if(r&&t.length===0)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${s}`);if(r&&t.forEach(o=>{s=yh(o.shape,s)}),!$m(s))throw new Error(`Non-fully-defined elementShape: ${s}`);return s}function yh(n,t){if(typeof n=="number")return t;if(typeof t=="number")return n;if(n.length!==t.length)throw new Error(`Incompatible ranks during merge: ${n} vs. ${t}`);const e=[];for(let s=0;s<n.length;++s){const r=n[s],o=t[s];if(r>=0&&o>=0&&r!==o)throw new Error(`Incompatible shape during merge: ${n} vs. ${t}`);e[s]=r>=0?r:o}return e}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class nA{constructor(t,e,s,r,o,a,i){this.name=t,this.dtype=e,this.maxSize=s,this.elementShape=r,this.identicalElementShapes=o,this.dynamicSize=a,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=Nt(0),Ve(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(t){this.tensors.forEach(e=>{(t==null||!t.has(e.tensor.id))&&e.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(t<0||t>=this.size())throw new Error(`Tried to read from index ${t}, but array size is: ${this.size()}`);const e=this.tensors[t];if(e.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${t} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(e.cleared=!0),e.read=!0,e.tensor}readMany(t){return t.map(e=>this.read(e))}write(t,e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(t<0||!this.dynamicSize&&t>=this.maxSize)throw new Error(`Tried to write to index ${t}, but array is not resizeable and size is: ${this.maxSize}`);const s=this.tensors[t]||{};if(e.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t},
          because the value dtype is ${e.dtype}, but TensorArray dtype is ${this.dtype}.`);if(this.size()===0&&(this.elementShape==null||this.elementShape.length===0)&&(this.elementShape=e.shape),In(this.elementShape,e.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${t}.`),s.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t}, because it has already been read.`);if(s.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t}, because it has already been written.`);s.tensor=e,Ve(e),s.written=!0,this.tensors[t]=s}writeMany(t,e){if(t.length!==e.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${t.length} is not the same as tensors size: ${e.length}.`);t.forEach((s,r)=>this.write(s,e[r]))}gather(t,e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${e}`);if(t)t=t.slice(0,this.size());else{t=[];for(let r=0;r<this.size();r++)t.push(r)}if(t.length===0)return nr([],[0].concat(this.elementShape));const s=this.readMany(t);return In(this.elementShape,s[0].shape,"TensorArray shape mismatch: "),Fn(s,0)}concat(t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${t}`);if(this.size()===0)return nr([],[0].concat(this.elementShape));const e=[];for(let r=0;r<this.size();r++)e.push(r);const s=this.readMany(e);return In(this.elementShape,s[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${s[0].shape})`),Ue(s,0)}scatter(t,e){if(e.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${e.dtype}`);if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const s=Math.max(...t);if(!this.dynamicSize&&s>=this.maxSize)throw new Error(`Max index must be < array size (${s}  vs. ${this.maxSize})`);this.writeMany(t,Kn(e,0))}split(t,e){if(e.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${e.dtype}`);let s=0;const r=t.map(l=>(s+=l,s));if(s!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${s}, and tensor's shape is: ${e.shape}`);if(!this.dynamicSize&&t.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${t.length}), and the TensorArray is not marked as dynamically resizeable`);const o=s===0?0:e.size/s,a=[];_(()=>{e=B(e,[1,s,o]);for(let l=0;l<t.length;++l){const u=[0,l===0?0:r[l-1],0],h=[1,t[l],o];a[l]=B(Qt(e,u,h),this.elementShape)}return a});const i=[];for(let l=0;l<t.length;l++)i[l]=l;this.writeMany(i,a)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ao{constructor(t,e,s,r=-1){this.tensors=t,this.elementShape=e,this.elementDtype=s,t!=null&&t.forEach(o=>{if(s!==o.dtype)throw new Error(`Invalid data types; op elements ${s}, but list elements ${o.dtype}`);In(e,o.shape,"TensorList shape mismatch: "),Ve(o)}),this.idTensor=Nt(0),this.maxNumElements=r,Ve(this.idTensor)}get id(){return this.idTensor.id}copy(){return new ao([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(t){this.tensors.forEach(e=>{(t==null||!t.has(e.id))&&e.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(t,e,s=-1){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);if(s!==-1&&this.tensors.length!==s)throw new Error(`Operation expected a list with ${s} elements but got a list with ${this.tensors.length} elements.`);In(t,this.elementShape,"TensorList shape mismatch: ");const r=yo(this.elementShape,this.tensors,t);return _(()=>{const o=this.tensors.map(a=>B(a,r));return Fn(o,0)})}popBack(t,e){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);if(this.size()===0)throw new Error("Trying to pop from an empty list.");const s=yo(this.elementShape,this.tensors,t),r=this.tensors.pop();return In(r.shape,t,"TensorList shape mismatch: "),B(r,s)}pushBack(t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(In(t.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Ve(t),this.tensors.push(t)}resize(t){if(t<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${t}`);if(this.maxNumElements!==-1&&t>this.maxNumElements)throw new Error(`TensorListResize input size ${t} is greater maxNumElement ${this.maxNumElements}.`);this.tensors.length=t}getItem(t,e,s){if(s!==this.elementDtype)throw new Error(`Invalid data types; op elements ${s}, but list elements ${this.elementDtype}`);if(t<0||t>this.tensors.length)throw new Error(`Trying to access element ${t} in a list with ${this.tensors.length} elements.`);if(this.tensors[t]==null)throw new Error(`element at index ${t} is null.`);In(this.tensors[t].shape,e,"TensorList shape mismatch: ");const r=yo(this.elementShape,this.tensors,e);return B(this.tensors[t],r)}setItem(t,e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(t<0||this.maxNumElements!==-1&&t>=this.maxNumElements)throw new Error(`Trying to set element ${t} in a list with max ${this.maxNumElements} elements.`);In(this.elementShape,e.shape,"TensorList shape mismatch: "),Ve(e),this.tensors[t]=e}gather(t,e,s){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);In(this.elementShape,s,"TensorList shape mismatch: "),t=t.slice(0,this.size());const r=yo(this.elementShape,this.tensors,s);return t.length===0?nr([],[0].concat(r)):_(()=>{const o=t.map(a=>B(this.tensors[a],r));return Fn(o,0)})}concat(t,e){if(t&&t!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${t}`);In(this.elementShape,e,"TensorList shape mismatch: ");const s=yo(this.elementShape,this.tensors,e);return this.size()===0?nr([],[0].concat(s)):_(()=>{const r=this.tensors.map(o=>B(o,s));return Ue(r,0)})}}function sA(n,t,e){const s=n.dtype;if(n.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${n.shape}`);if(n.dtype!==e)throw new Error(`Invalid data types; op elements ${n.dtype}, but list elements ${e}`);const r=n.shape.slice(1);In(r,t,"TensorList shape mismatch: ");const o=Kn(n);return new ao(o,t,s)}function rA(n,t,e){return new ao([],n,t,e)}function oA(n,t,e,s){if(t.length!==n.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${n.shape[0]}`);const r=Math.max(...t);if(s!=null&&s!==-1&&r>=s)throw new Error(`Max index must be < array size (${r}  vs. ${s})`);const o=new ao([],e,n.dtype,s),a=Kn(n,0);return t.forEach((i,l)=>{o.setItem(i,a[l])}),o}function aA(n,t,e){let s=0;const r=t.map(u=>(s+=u,s));if(s!==n.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${s}, and tensor's shape is: ${n.shape}`);const o=n.shape.slice(1),a=yh(o,e),i=s===0?0:n.size/s,l=_(()=>{const u=[];n=B(n,[1,s,i]);for(let h=0;h<t.length;++h){const p=[0,h===0?0:r[h-1],0],f=[1,t[h],i];u[h]=B(Qt(n,p,f),a)}return n.dispose(),u}),c=new ao([],e,n.dtype,t.length);for(let u=0;u<l.length;u++)c.setItem(u,l[u]);return c}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iA=async(n,t,e)=>{switch(n.op){case"If":case"StatelessIf":{const s=v("thenBranch",n,t,e),r=v("elseBranch",n,t,e),o=v("cond",n,t,e),a=v("args",n,t,e);return(await o.data())[0]?e.functionMap[s].executeFunctionAsync(a,e.tensorArrayMap,e.tensorListMap):e.functionMap[r].executeFunctionAsync(a,e.tensorArrayMap,e.tensorListMap)}case"While":case"StatelessWhile":{const s=v("body",n,t,e),r=v("cond",n,t,e),o=v("args",n,t,e),a=await e.functionMap[r].executeFunctionAsync(o,e.tensorArrayMap,e.tensorListMap),i=o.map(u=>u.id);let l=await a[0].data();a.forEach(u=>{!u.kept&&i.indexOf(u.id)===-1&&u.dispose()});let c=o;for(;l[0];){const u=c;c=await e.functionMap[s].executeFunctionAsync(c,e.tensorArrayMap,e.tensorListMap);const h=c.map(p=>p.id);u.forEach(p=>{!p.kept&&i.indexOf(p.id)===-1&&h.indexOf(p.id)===-1&&p.dispose()});const d=await e.functionMap[r].executeFunctionAsync(c,e.tensorArrayMap,e.tensorListMap);l=await d[0].data(),d.forEach(p=>{!p.kept&&i.indexOf(p.id)===-1&&h.indexOf(p.id)===-1&&p.dispose()})}return c}case"LoopCond":{const s=v("pred",n,t,e);return[fs(s)]}case"Switch":{const s=v("pred",n,t,e);let r=v("data",n,t,e);return r.kept||(r=fs(r)),(await s.data())[0]?[void 0,r]:[r,void 0]}case"Merge":{const s=n.inputNames.find(r=>rn(r,t,e)!==void 0);if(s){const r=rn(s,t,e);return[fs(r)]}return}case"Enter":{const s=v("frameName",n,t,e),r=v("tensor",n,t,e);return e.enterFrame(s),[fs(r)]}case"Exit":{const s=v("tensor",n,t,e);return e.exitFrame(),[fs(s)]}case"NextIteration":{const s=v("tensor",n,t,e);return e.nextIteration(),[fs(s)]}case"TensorArrayV3":{const s=v("size",n,t,e),r=v("dtype",n,t,e),o=v("elementShape",n,t,e),a=v("dynamicSize",n,t,e),i=v("clearAfterRead",n,t,e),l=v("identicalElementShapes",n,t,e),c=v("name",n,t,e),u=new nA(c,r,s,o,l,a,i);return e.addTensorArray(u),[u.idTensor,Nt(1)]}case"TensorArrayWriteV3":{const s=v("tensorArrayId",n,t,e),r=v("index",n,t,e),o=v("tensor",n,t,e),a=e.getTensorArray(s.id);return a.write(r,o),[a.idTensor]}case"TensorArrayReadV3":{const s=v("tensorArrayId",n,t,e),r=v("index",n,t,e);return[e.getTensorArray(s.id).read(r)]}case"TensorArrayGatherV3":{const s=v("tensorArrayId",n,t,e),r=v("indices",n,t,e),o=v("dtype",n,t,e);return[e.getTensorArray(s.id).gather(r,o)]}case"TensorArrayScatterV3":{const s=v("tensorArrayId",n,t,e),r=v("indices",n,t,e),o=v("tensor",n,t,e),a=e.getTensorArray(s.id);return a.scatter(r,o),[a.idTensor]}case"TensorArrayConcatV3":{const s=v("tensorArrayId",n,t,e),r=e.getTensorArray(s.id),o=v("dtype",n,t,e);return[r.concat(o)]}case"TensorArraySplitV3":{const s=v("tensorArrayId",n,t,e),r=v("tensor",n,t,e),o=v("lengths",n,t,e),a=e.getTensorArray(s.id);return a.split(o,r),[a.idTensor]}case"TensorArraySizeV3":{const s=v("tensorArrayId",n,t,e),r=e.getTensorArray(s.id);return[Nt(r.size(),"int32")]}case"TensorArrayCloseV3":{const s=v("tensorArrayId",n,t,e),r=e.getTensorArray(s.id);return r.clearAndClose(),[r.idTensor]}case"TensorListSetItem":{const s=v("tensorListId",n,t,e),r=v("index",n,t,e),o=v("tensor",n,t,e),a=e.getTensorList(s.id);return a.setItem(r,o),[a.idTensor]}case"TensorListGetItem":{const s=v("tensorListId",n,t,e),r=v("index",n,t,e),o=v("elementShape",n,t,e),a=v("elementDType",n,t,e);return[e.getTensorList(s.id).getItem(r,o,a)]}case"TensorListScatterV2":case"TensorListScatter":{const s=v("indices",n,t,e),r=v("tensor",n,t,e),o=v("elementShape",n,t,e),a=v("numElements",n,t,e),i=oA(r,s,o,a);return e.addTensorList(i),[i.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const s=v("elementShape",n,t,e),r=v("elementDType",n,t,e);let o;n.op==="TensorListReserve"?o="numElements":o="maxNumElements";const a=v(o,n,t,e),i=rA(s,r,a);return e.addTensorList(i),[i.idTensor]}case"TensorListGather":{const s=v("tensorListId",n,t,e),r=v("indices",n,t,e),o=v("elementShape",n,t,e),a=v("elementDType",n,t,e);return[e.getTensorList(s.id).gather(r,a,o)]}case"TensorListStack":{const s=v("tensorListId",n,t,e),r=v("elementShape",n,t,e),o=v("elementDType",n,t,e),a=v("numElements",n,t,e);return[e.getTensorList(s.id).stack(r,o,a)]}case"TensorListFromTensor":{const s=v("tensor",n,t,e),r=v("elementShape",n,t,e),o=v("elementDType",n,t,e),a=sA(s,r,o);return e.addTensorList(a),[a.idTensor]}case"TensorListConcat":{const s=v("tensorListId",n,t,e),r=e.getTensorList(s.id),o=v("dtype",n,t,e),a=v("elementShape",n,t,e);return[r.concat(o,a)]}case"TensorListPushBack":{const s=v("tensorListId",n,t,e),r=v("tensor",n,t,e),o=e.getTensorList(s.id);return o.pushBack(r),[o.idTensor]}case"TensorListPopBack":{const s=v("tensorListId",n,t,e),r=v("elementShape",n,t,e),o=v("elementDType",n,t,e);return[e.getTensorList(s.id).popBack(r,o)]}case"TensorListSplit":{const s=v("tensor",n,t,e),r=v("elementShape",n,t,e),o=v("lengths",n,t,e),a=aA(s,o,r);return e.addTensorList(a),[a.idTensor]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function km(n,t,e){const[s,r]=v("fusedOps",n,t,e),o=s==="biasadd",a=r==="prelu",i=s==="fusedbatchnorm",l=v("numArgs",n,t,e);if(o){if(a&&l!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!a&&l!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(i)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported.");const c=v("strides",n,t,e),u=Ai(n,t,e),h=v("dataFormat",n,t,e).toUpperCase(),d=v("dilations",n,t,e),[p,f]=v("args",n,t,e),m=v("leakyreluAlpha",n,t,e);return{stride:c,pad:u,dataFormat:h,dilations:d,biasArg:p,preluArg:f,activationFunc:r,leakyreluAlpha:m}}const lA=(n,t,e)=>{switch(n.op){case"Conv1D":{const s=v("stride",n,t,e),r=v("pad",n,t,e),o=v("dataFormat",n,t,e).toUpperCase(),a=v("dilation",n,t,e);return[Rd(v("x",n,t,e),v("filter",n,t,e),s,r,o,a)]}case"Conv2D":{const s=v("strides",n,t,e),r=Ai(n,t,e),o=v("dataFormat",n,t,e).toUpperCase(),a=v("dilations",n,t,e);return[_s(v("x",n,t,e),v("filter",n,t,e),[s[1],s[2]],r,o,[a[1],a[2]])]}case"_FusedConv2D":{const{stride:s,pad:r,dataFormat:o,dilations:a,biasArg:i,preluArg:l,activationFunc:c,leakyreluAlpha:u}=km(n,t,e);return[eb({x:v("x",n,t,e),filter:v("filter",n,t,e),strides:[s[1],s[2]],pad:r,dataFormat:o,dilations:[a[1],a[2]],bias:i,activation:c,preluActivationWeights:l,leakyreluAlpha:u})]}case"FusedDepthwiseConv2dNative":{const{stride:s,pad:r,dataFormat:o,dilations:a,biasArg:i,preluArg:l,activationFunc:c,leakyreluAlpha:u}=km(n,t,e);return[WN({x:v("x",n,t,e),filter:v("filter",n,t,e),strides:[s[1],s[2]],pad:r,dataFormat:o,dilations:[a[1],a[2]],bias:i,activation:c,preluActivationWeights:l,leakyreluAlpha:u})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const s=v("outputShape",n,t,e),r=v("strides",n,t,e),o=Ai(n,t,e);return[Od(v("x",n,t,e),v("filter",n,t,e),s,[r[1],r[2]],o)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const s=v("strides",n,t,e),r=Ai(n,t,e),o=v("dilations",n,t,e),a=v("dataFormat",n,t,e).toUpperCase();return[Ba(v("input",n,t,e),v("filter",n,t,e),[s[1],s[2]],r,a,[o[1],o[2]])]}case"Conv3D":{const s=v("strides",n,t,e),r=v("pad",n,t,e),o=v("dataFormat",n,t,e).toUpperCase(),a=v("dilations",n,t,e);return[Iy(v("x",n,t,e),v("filter",n,t,e),[s[1],s[2],s[3]],r,o,[a[1],a[2],a[3]])]}case"AvgPool":{const s=v("strides",n,t,e),r=v("pad",n,t,e),o=v("kernelSize",n,t,e);return[vc(v("x",n,t,e),[o[1],o[2]],[s[1],s[2]],r)]}case"MaxPool":{const s=v("strides",n,t,e),r=v("pad",n,t,e),o=v("kernelSize",n,t,e);return[Ic(v("x",n,t,e),[o[1],o[2]],[s[1],s[2]],r)]}case"MaxPoolWithArgmax":{const s=v("strides",n,t,e),r=v("pad",n,t,e),o=v("kernelSize",n,t,e),a=v("includeBatchInIndex",n,t,e),{result:i,indexes:l}=tC(v("x",n,t,e),[o[1],o[2]],[s[1],s[2]],r,a);return[i,l]}case"AvgPool3D":{const s=v("strides",n,t,e),r=v("pad",n,t,e),o=v("kernelSize",n,t,e);return[Cy(v("x",n,t,e),[o[1],o[2],o[3]],[s[1],s[2],s[3]],r)]}case"MaxPool3D":{const s=v("strides",n,t,e),r=v("pad",n,t,e),o=v("kernelSize",n,t,e);return[Ly(v("x",n,t,e),[o[1],o[2],o[3]],[s[1],s[2],s[3]],r)]}case"Dilation2D":{const s=v("strides",n,t,e),r=v("pad",n,t,e),o=v("dilations",n,t,e),a=s[1],i=s[2],l=o[1],c=o[2];return[Ty(v("x",n,t,e),v("filter",n,t,e),[a,i],r,[l,c],"NHWC")]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cA=(n,t,e)=>{switch(n.op){case"Fill":{const s=v("shape",n,t,e),r=v("dtype",n,t,e),o=v("value",n,t,e);return[Pd(s,o,r)]}case"LinSpace":{const s=v("start",n,t,e),r=v("stop",n,t,e),o=v("num",n,t,e);return[Dk(s,r,o)]}case"Multinomial":{const s=v("logits",n,t,e),r=v("numSamples",n,t,e),o=v("seed",n,t,e);return[uC(s,r,o)]}case"OneHot":{const s=v("indices",n,t,e),r=v("depth",n,t,e),o=v("onValue",n,t,e),a=v("offValue",n,t,e);return[$d(s,r,o,a)]}case"Ones":return[Gs(v("shape",n,t,e),v("dtype",n,t,e))];case"OnesLike":return[xn(v("x",n,t,e))];case"RandomUniform":return[Ua(v("shape",n,t,e),v("minval",n,t,e),v("maxval",n,t,e),v("dtype",n,t,e))];case"Range":{const s=v("start",n,t,e),r=v("stop",n,t,e),o=v("step",n,t,e);return[qu(s,r,o,v("dtype",n,t,e))]}case"TruncatedNormal":{const s=v("shape",n,t,e),r=v("mean",n,t,e),o=v("stdDev",n,t,e),a=v("seed",n,t,e);return[tp(s,r,o,v("dtype",n,t,e),a)]}case"Zeros":return[xe(v("shape",n,t,e),v("dtype",n,t,e))];case"ZerosLike":return[Ot(v("x",n,t,e))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bu(n,t,e){const s=v("boxes",n,t,e),r=v("scores",n,t,e),o=v("maxOutputSize",n,t,e),a=v("iouThreshold",n,t,e),i=v("scoreThreshold",n,t,e),l=v("softNmsSigma",n,t,e);return{boxes:s,scores:r,maxOutputSize:o,iouThreshold:a,scoreThreshold:i,softNmsSigma:l}}const uA=async(n,t,e)=>{switch(n.op){case"NonMaxSuppressionV5":{const{boxes:s,scores:r,maxOutputSize:o,iouThreshold:a,scoreThreshold:i,softNmsSigma:l}=bu(n,t,e),c=await ar.nonMaxSuppressionWithScoreAsync(s,r,o,a,i,l);return[c.selectedIndices,c.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:s,scores:r,maxOutputSize:o,iouThreshold:a,scoreThreshold:i}=bu(n,t,e),l=v("padToMaxOutputSize",n,t,e),c=await ar.nonMaxSuppressionPaddedAsync(s,r,o,a,i,l);return[c.selectedIndices,c.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:s,scores:r,maxOutputSize:o,iouThreshold:a,scoreThreshold:i}=bu(n,t,e);return[await ar.nonMaxSuppressionAsync(s,r,o,a,i)]}case"Where":{const s=ut(v("condition",n,t,e),"bool"),r=[await IN(s)];return s.dispose(),r}case"ListDiff":return ZC(v("x",n,t,e),v("y",n,t,e));default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hA=(n,t,e)=>{switch(n.op){case"TopKV2":{const s=v("x",n,t,e),r=v("k",n,t,e),o=v("sorted",n,t,e),a=Jy(s,r,o);return[a.values,a.indices]}case"Unique":{const s=v("x",n,t,e),r=Ku(s);return[r.values,r.indices]}case"UniqueV2":{const s=v("x",n,t,e),r=v("axis",n,t,e),o=Ku(s,r);return[o.values,o.indices]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dA=(n,t,e)=>{switch(n.op){case"Const":return t[n.name];case"PlaceholderWithDefault":const s=v("default",n,t,e);return[rn(n.name,t,e)||s];case"Placeholder":return[rn(n.name,t,e)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{const c=v("x",n,t,e);return[fs(c)]}case"IdentityN":return v("x",n,t,e).map(c=>fs(c));case"Snapshot":const r=v("x",n,t,e);return[fs(r)];case"Shape":return[qn(v("x",n,t,e).shape,"int32")];case"ShapeN":return v("x",n,t,e).map(c=>qn(c.shape));case"Size":return[Nt(v("x",n,t,e).size,"int32")];case"Rank":return[Nt(v("x",n,t,e).rank,"int32")];case"NoOp":return[Nt(1)];case"Print":const o=v("x",n,t,e),a=v("data",n,t,e),i=v("message",n,t,e),l=v("summarize",n,t,e);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(i);for(let c=0;c<a.length;c++)console.log(Array.prototype.slice.call(a[c].dataSync()).slice(0,l));return[o];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class pA{constructor(t,e){this.keyDType=t,this.valueDType=e,this.handle=Nt(0),this.tensorMap=new Map,Ve(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach(t=>t.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return Nt(this.size(),"int32")}async import(t,e){this.checkKeyAndValueTensor(t,e);const s=await t.data();return this.tensorMap.forEach(r=>r.dispose()),this.tensorMap.clear(),_(()=>{const r=Kn(e),o=s.length,a=r.length;N(o===a,()=>`The number of elements doesn't match, keys has ${o} elements, the values has ${a} elements.`);for(let i=0;i<o;i++){const l=s[i],c=r[i];Ve(c),this.tensorMap.set(l,c)}return this.handle})}async find(t,e){this.checkKeyAndValueTensor(t,e);const s=await t.data();return _(()=>{const r=[];for(let o=0;o<s.length;o++){const a=s[o],i=this.findWithDefault(a,e);r.push(i)}return Fn(r)})}findWithDefault(t,e){const s=this.tensorMap.get(t);return s??e}checkKeyAndValueTensor(t,e){if(t.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${t.dtype}`);if(e.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${e.dtype}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fA=async(n,t,e,s)=>{switch(n.op){case"HashTable":case"HashTableV2":{const r=v("keyDType",n,t,e),o=v("valueDType",n,t,e),a=new pA(r,o);return s.addHashTable(n.name,a),[a.handle]}case"LookupTableImport":case"LookupTableImportV2":{const r=v("tableHandle",n,t,e,s),o=v("keys",n,t,e),a=v("values",n,t,e);return[await s.getHashTableById(r.id).import(o,a)]}case"LookupTableFind":case"LookupTableFindV2":{const r=v("tableHandle",n,t,e,s),o=v("keys",n,t,e),a=v("defaultValue",n,t,e);return[await s.getHashTableById(r.id).find(o,a)]}case"LookupTableSize":case"LookupTableSizeV2":{const r=v("tableHandle",n,t,e,s);return[s.getHashTableById(r.id).tensorSize()]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mA=(n,t,e)=>{switch(n.op){case"ResizeBilinear":{const s=v("images",n,t,e),r=v("size",n,t,e),o=v("alignCorners",n,t,e),a=v("halfPixelCenters",n,t,e);return[ar.resizeBilinear(s,[r[0],r[1]],o,a)]}case"ResizeNearestNeighbor":{const s=v("images",n,t,e),r=v("size",n,t,e),o=v("alignCorners",n,t,e),a=v("halfPixelCenters",n,t,e);return[ar.resizeNearestNeighbor(s,[r[0],r[1]],o,a)]}case"CropAndResize":{const s=v("image",n,t,e),r=v("boxes",n,t,e),o=v("boxInd",n,t,e),a=v("cropSize",n,t,e),i=v("method",n,t,e),l=v("extrapolationValue",n,t,e);return[ar.cropAndResize(s,r,o,a,i,l)]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gA=(n,t,e)=>{switch(n.op){case"Equal":return[xr(v("a",n,t,e),v("b",n,t,e))];case"NotEqual":return[Eo(v("a",n,t,e),v("b",n,t,e))];case"Greater":return[ls(v("a",n,t,e),v("b",n,t,e))];case"GreaterEqual":return[wr(v("a",n,t,e),v("b",n,t,e))];case"Less":return[Bd(v("a",n,t,e),v("b",n,t,e))];case"LessEqual":return[eo(v("a",n,t,e),v("b",n,t,e))];case"LogicalAnd":return[as(v("a",n,t,e),v("b",n,t,e))];case"LogicalNot":return[Nc(v("a",n,t,e))];case"LogicalOr":return[Wd(v("a",n,t,e),v("b",n,t,e))];case"Select":case"SelectV2":return[bn(v("condition",n,t,e),v("a",n,t,e),v("b",n,t,e))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yA=(n,t,e)=>{switch(n.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[Wt(v("a",n,t,e),v("b",n,t,e),v("transposeA",n,t,e),v("transposeB",n,t,e))];case"Transpose":return[Kt(v("x",n,t,e),v("perm",n,t,e))];case"_FusedMatMul":const[s,r]=v("fusedOps",n,t,e),o=s==="biasadd",a=r==="prelu",i=v("numArgs",n,t,e),l=v("leakyreluAlpha",n,t,e);if(o){if(a&&i!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!a&&i!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[c,u]=v("args",n,t,e);return[Xu({a:v("a",n,t,e),b:v("b",n,t,e),transposeA:v("transposeA",n,t,e),transposeB:v("transposeB",n,t,e),bias:c,activation:r,preluActivationWeights:u,leakyreluAlpha:l})];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bA=(n,t,e)=>{switch(n.op){case"FusedBatchNorm":case"FusedBatchNormV2":return[Ur(v("x",n,t,e),v("mean",n,t,e),v("variance",n,t,e),v("offset",n,t,e),v("scale",n,t,e),v("epsilon",n,t,e))];case"FusedBatchNormV3":return[Ur(v("x",n,t,e),v("mean",n,t,e),v("variance",n,t,e),v("offset",n,t,e),v("scale",n,t,e),v("epsilon",n,t,e))];case"LRN":return[Fy(v("x",n,t,e),v("radius",n,t,e),v("bias",n,t,e),v("alpha",n,t,e),v("beta",n,t,e))];case"Softmax":return[Dc(v("x",n,t,e))];case"LogSoftmax":return[Md(v("x",n,t,e))];case"SparseToDense":return[tb(v("sparseIndices",n,t,e),v("outputShape",n,t,e),v("sparseValues",n,t,e),v("defaultValue",n,t,e))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xA=(n,t,e)=>{switch(n.op){case"Max":{const a=v("axis",n,t,e),i=v("keepDims",n,t,e);return[Rn(v("x",n,t,e),a,i)]}case"Mean":{const a=v("axis",n,t,e),i=v("keepDims",n,t,e);return[ge(v("x",n,t,e),a,i)]}case"Min":{const a=v("axis",n,t,e),i=v("keepDims",n,t,e);return[To(v("x",n,t,e),a,i)]}case"Sum":{const a=v("axis",n,t,e),i=v("keepDims",n,t,e);return[bt(v("x",n,t,e),a,i)]}case"All":{const a=v("axis",n,t,e),i=v("keepDims",n,t,e);return[Ed(v("x",n,t,e),a,i)]}case"Any":{const a=v("axis",n,t,e),i=v("keepDims",n,t,e);return[Yi(v("x",n,t,e),a,i)]}case"ArgMax":{const a=v("axis",n,t,e);return[Ji(v("x",n,t,e),a)]}case"ArgMin":{const a=v("axis",n,t,e);return[by(v("x",n,t,e),a)]}case"Prod":{const a=v("axis",n,t,e),i=v("keepDims",n,t,e);return[Gd(v("x",n,t,e),a,i)]}case"Cumsum":{const a=v("axis",n,t,e),i=v("exclusive",n,t,e),l=v("reverse",n,t,e);return[Ld(v("x",n,t,e),a,i,l)]}case"Bincount":const s=v("x",n,t,e),r=v("weights",n,t,e),o=v("size",n,t,e);return[D$(s,r,o)];case"DenseBincount":{const a=v("x",n,t,e),i=v("weights",n,t,e),l=v("size",n,t,e),c=v("binaryOutput",n,t,e);return[tk(a,i,l,c)]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wA=(n,t,e)=>{switch(n.op){case"ConcatV2":case"Concat":{const s=v("n",n,t,e),r=v("axis",n,t,e);let o=v("tensors",n,t,e);return o=o.slice(0,s),[Ue(o,r)]}case"Gather":{const s=v("x",n,t,e),r=v("indices",n,t,e);return[So(s,ut(r,"int32"),0)]}case"GatherV2":{const s=v("axis",n,t,e),r=v("batchDims",n,t,e),o=v("x",n,t,e),a=v("indices",n,t,e);return[So(o,ut(a,"int32"),s,r)]}case"Reverse":{const s=v("dims",n,t,e),r=[];for(let a=0;a<s.length;a++)s[a]&&r.push(a);const o=v("x",n,t,e);return[xs(o,r)]}case"ReverseV2":{const s=v("axis",n,t,e),r=v("x",n,t,e);return[xs(r,s)]}case"Slice":{const s=v("begin",n,t,e),r=v("size",n,t,e);return[Qt(v("x",n,t,e),s,r)]}case"StridedSlice":{const s=v("begin",n,t,e),r=v("end",n,t,e),o=v("strides",n,t,e),a=v("beginMask",n,t,e),i=v("endMask",n,t,e),l=v("ellipsisMask",n,t,e),c=v("newAxisMask",n,t,e),u=v("shrinkAxisMask",n,t,e),h=v("x",n,t,e);return[Xy(h,s,r,o,a,i,l,c,u)]}case"Pack":return _(()=>{const s=v("axis",n,t,e),r=v("tensors",n,t,e),o=r[0].shape,a=Gr(r[0]).shape,i=r.map(l=>{const c=Gt(l.shape,o);if(!c&&!Gt(Gr(l).shape,a))throw new Error("the input tensors shape does not match");return c?l:B(l,o)});return[Fn(i,s)]});case"Unpack":{const s=v("axis",n,t,e),r=v("tensor",n,t,e);return Kn(r,s)}case"Tile":{const s=v("reps",n,t,e);return[or(v("x",n,t,e),s)]}case"Split":case"SplitV":{const s=v("axis",n,t,e),r=v("numOrSizeSplits",n,t,e),o=v("x",n,t,e);return gn(o,r,s)}case"ScatterNd":{const s=v("indices",n,t,e),r=v("values",n,t,e),o=v("shape",n,t,e);return[EN(s,r,o)]}case"GatherNd":{const s=v("x",n,t,e),r=v("indices",n,t,e);return[FN(s,r)]}case"SparseToDense":{const s=v("sparseIndices",n,t,e),r=v("outputShape",n,t,e),o=v("sparseValues",n,t,e),a=v("defaultValue",n,t,e);return[tb(s,o,r,o.dtype===a.dtype?a:ut(a,o.dtype))]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vA=(n,t,e)=>{switch(n.op){case"FFT":return[Qd(v("x",n,t,e))];case"IFFT":return[nl(v("x",n,t,e))];case"RFFT":return[qy(v("x",n,t,e))];case"IRFFT":return[jy(v("x",n,t,e))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $A=(n,t,e)=>{switch(n.op){case"Cast":return[ut(v("x",n,t,e),v("dtype",n,t,e))];case"ExpandDims":{const s=v("axis",n,t,e);return[Sn(v("x",n,t,e),s)]}case"Squeeze":{const s=v("axis",n,t,e);return[Gr(v("x",n,t,e),s)]}case"Reshape":return[B(v("x",n,t,e),v("shape",n,t,e))];case"MirrorPad":return[Py(v("x",n,t,e),v("padding",n,t,e),v("mode",n,t,e))];case"PadV2":case"Pad":return[Tc(v("x",n,t,e),v("padding",n,t,e),v("constantValue",n,t,e))];case"SpaceToBatchND":{const s=v("blockShape",n,t,e),r=v("paddings",n,t,e);return[Ec(v("x",n,t,e),s,r)]}case"BatchToSpaceND":{const s=v("blockShape",n,t,e),r=v("crops",n,t,e);return[$c(v("x",n,t,e),s,r)]}case"DepthToSpace":{const s=v("blockSize",n,t,e),r=v("dataFormat",n,t,e).toUpperCase();return[Sy(v("x",n,t,e),s,r)]}case"BroadcastTo":return[Qi(v("x",n,t,e),v("shape",n,t,e))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cm(n,t,e,s){const r=((o,a,i)=>{switch(o.category){case"arithmetic":return _(()=>tA(o,a,i));case"basic_math":return _(()=>eA(o,a,i));case"control":return iA(o,a,i);case"convolution":return _(()=>lA(o,a,i));case"creation":return _(()=>cA(o,a,i));case"dynamic":return uA(o,a,i);case"evaluation":return _(()=>hA(o,a,i));case"image":return _(()=>mA(o,a,i));case"graph":return _(()=>dA(o,a,i));case"logical":return _(()=>gA(o,a,i));case"matrices":return _(()=>yA(o,a,i));case"normalization":return _(()=>bA(o,a,i));case"reduction":return _(()=>xA(o,a,i));case"slice_join":return _(()=>wA(o,a,i));case"spectral":return _(()=>vA(o,a,i));case"transformation":return _(()=>$A(o,a,i));case"hash_table":return fA(o,a,i,s);case"custom":const l=v0(o.op);if(l&&l.customExecutor)return l.customExecutor(new QE(o,a,i));throw TypeError(`Custom op ${o.op} is not registered.`);default:throw TypeError(`Unknown op '${o.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(n,t,e);return No(r)?r.then(o=>[].concat(o)):[].concat(r)}class Nm{constructor(t={},e={},s={},r={}){this.weightMap=t,this.tensorArrayMap=e,this.tensorListMap=s,this.functionMap=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(t,e){return{id:t,frameName:e,iterationId:0}}set currentContext(t){this.contexts!==t&&(this.contexts=t,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const t=[];for(let e=0;e<this.contexts.length-1;e++){const s=this.contexts.slice(0,this.contexts.length-e);t.push(this.contextIdforContexts(s))}t.push(""),this._currentContextIds=t}contextIdforContexts(t){return t?t.map(e=>e.id===0&&e.iterationId===0?"":`${e.frameName}-${e.iterationId}`).join("/"):""}enterFrame(t){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,t)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw new Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;const t=Object.assign({},this.contexts[this.contexts.length-1]);t.iterationId+=1,t.id=this.lastId,this.contexts.splice(-1,1,t),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw new Error("Cannot increase frame iteration, the context is empty")}getWeight(t){return this.weightMap[t]}addTensorArray(t){this.tensorArrayMap[t.id]=t}getTensorArray(t){return this.tensorArrayMap[t]}addTensorList(t){this.tensorListMap[t.id]=t}getTensorList(t){return this.tensorListMap[t]}dispose(t){for(const e in this.tensorArrayMap)this.tensorArrayMap[e].clearAndClose(t);for(const e in this.tensorListMap)this.tensorListMap[e].clearAndClose(t)}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Im(n,t,e,s){const r=new Set,o=[];let a=null,i=null;const l=new Set,c=Object.keys(n).map(d=>ln(d)[0]);let u=[];s!=null&&(u=s.map(d=>ln(d.name)[0]));const h=[...t];for(;h.length>0;){const d=h.pop();if((C0(d)||SA(d)||TA(d))&&a==null&&(a=d,i=a.children.map(p=>p.name).filter(p=>r.has(p))),r.add(d.name),e[d.name]==null&&c.indexOf(d.name)===-1&&u.indexOf(d.name)===-1){if(d.inputs.length===0){o.push(d.name);continue}d.inputs.forEach(p=>{l.has(p.name)||(l.add(p.name),h.push(p))})}}return{inputs:n,outputs:t,usedNodes:r,missingInputs:o,dynamicNode:a,syncInputs:i}}function kA(n,t,e){const{usedNodes:s,inputs:r}=e,o=[],a=Object.keys(r).map(u=>ln(u)[0]).map(u=>n.nodes[u]),i=n.initNodes;a.forEach(u=>{s.has(u.name)&&o.push(u)}),n.weights.forEach(u=>{s.has(u.name)&&o.push(u)}),i!=null&&i.forEach(u=>{s.has(u.name)&&o.push(u)});const l=new Set,c=[];for(;o.length>0;){const u=o.pop();l.add(u.name),t[u.name]||c.push(u),u.children.forEach(h=>{!l.has(h.name)&&s.has(h.name)&&h.inputs.every(d=>l.has(d.name))&&o.push(h)})}return c}const CA=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],NA=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],IA=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function C0(n){return CA.indexOf(n.op)>=0}function SA(n){return NA.indexOf(n.op)>=0}function TA(n){return IA.indexOf(n.op)>=0}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hl{constructor(t,e){this.graph=t,this.parent=e,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this._outputs=t.outputs,this._inputs=t.inputs,this._initNodes=t.initNodes,this._signature=t.signature,this._functions=t.functions,t.functions!=null&&Object.keys(t.functions).forEach(s=>{this._functionExecutorMap[s]=new hl(t.functions[s],this)})}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(t){const e=Object.keys(t).map(s=>t[s].map(r=>r.id));this._weightIds=[].concat(...e),this._weightMap=t}set resourceManager(t){this._resourceManager=t}get inputs(){return this._inputs.map(t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(t=>t.signatureKey||t.name)}get outputNodes(){return this._outputs.map(t=>{const e=t.signatureKey||t.name;return t.defaultOutput?`${e}:${t.defaultOutput}`:e})}get functions(){return Object.keys(this._functions).reduce((t,e)=>(t[e]=this._functions[e].signature,t),{})}getCompilationKey(t,e){const s=t.map(o=>o.name).sort(),r=e.map(o=>o.name).sort();return s.join(this.SEPERATOR)+"--"+r.join(this.SEPERATOR)}compile(t,e){const s=Im(t,e,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:o,syncInputs:a}=s;if(o!=null)throw new Error(`This execution contains the node '${o.name}', which has the dynamic op '${o.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${a}]`);if(r.length>0){const i=e.map(c=>c.name),l=Object.keys(t);throw new Error(`Cannot compute the outputs [${i}] from the provided inputs [${l}]. Missing the following inputs: [${r}]`)}return kA(this.graph,this.weightMap,s)}execute(t,e){t=this.mapInputs(t);const s=Object.keys(t).sort();this.checkInputs(t),this.checkInputShapeAndType(t),e=this.mapOutputs(e),this.checkOutputs(e);const r=s.map(h=>this.graph.nodes[ln(h)[0]]),o=e.map(h=>ln(h)[0]);let a=o.map(h=>this.graph.nodes[h]);a.length===0&&(a=this._outputs);const i=this.getCompilationKey(r,a);let l=this.compiledMap.get(i);l==null&&(l=this.compile(t,a),this.compiledMap.set(i,l));const c={},u={};return _(()=>{const h=new Nm(this.weightMap,c,u,this.functionExecutorMap),d=Object.assign({},this.weightMap);Object.keys(t).forEach(m=>{const[g,y]=ln(m),b=[];b[y]=t[m],d[g]=b});const p=this.getFrozenTensorIds(d),f={};for(let m=0;m<l.length;m++){const g=l[m];if(!d[g.name]){const y=Cm(g,d,h,this._resourceManager);if(No(y))throw new Error(`The execution of the op '${g.op}' returned a promise. Please use model.executeAsync() instead.`);d[g.name]=y,this.checkTensorForDisposal(g.name,g,d,h,p,o,f)}}return this.parent==null&&h.dispose(p),e.map(m=>rn(m,d,h))})}getFrozenTensorIds(t){const e=[].concat.apply([],Object.keys(t).map(s=>t[s]).map(s=>s.map(r=>r.id)));return new Set(e)}checkTensorForDisposal(t,e,s,r,o,a,i){e.category==="control"||a.indexOf(t)!==-1||(s[t].forEach(l=>{l!=null&&(i[l.id]=(i[l.id]||0)+e.children.length)}),e.inputs.forEach(l=>{if(l.category!=="control"){const c=yE(l.name,s,r);c!=null&&c.forEach(u=>{if(u&&!o.has(u.id)){const h=i[u.id];h===1?(u.dispose(),delete i[u.id]):h!=null&&i[u.id]--}})}}))}async executeAsync(t,e){return this._executeAsync(t,e)}async _executeAsync(t,e,s=!1,r={},o={}){s||(t=this.mapInputs(t),this.checkInputs(t),this.checkInputShapeAndType(t),e=this.mapOutputs(e),this.checkOutputs(e));const a=new Nm(this.weightMap,r,o,this.functionExecutorMap),i=await this.executeWithControlFlow(t,a,e,s),l=e.map(d=>rn(d,i,a)),c=l.map(d=>d.id),u=Object.keys(t).map(d=>t[d].id),h=new Set([...c,...u,...this.weightIds]);return Object.keys(i).forEach(d=>{i[d].forEach(f=>{f&&!f.isDisposed&&!h.has(f.id)&&f.dispose()})}),this.parent==null&&a.dispose(h),l}async executeFunctionAsync(t,e,s){const r=t.reduce((o,a,i)=>(o[this.inputs[i].name]=a,o),{});return this._executeAsync(r,this.outputNodes,!0,e,s)}async executeWithControlFlow(t,e,s,r){const o=Object.keys(t),a=o.map($=>this.graph.nodes[ln($)[0]]),i=s.map($=>ln($)[0]);let l=i.map($=>this.graph.nodes[$]);l.length===0&&(l=this._outputs);const{usedNodes:c,missingInputs:u,dynamicNode:h,syncInputs:d}=Im(t,l,this.weightMap,this._initNodes),p=[...a,...this.graph.weights,...this._initNodes||[]].map($=>({node:$,contexts:e.currentContext})),f=Object.assign({},this.weightMap);Object.keys(t).forEach($=>{const[x,w]=ln($),C=[];C[w]=t[$],f[x]=C});const m={},g=this.getFrozenTensorIds(f),y={};for(;p.length>0;){const $=this.processStack(a,p,e,f,y,g,i,m,c);await Promise.all($)}h==null&&!r&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const b=l.filter($=>!C0($)&&!rn($.name,f,e)).map($=>$.name);if(b.length>0){let $="";throw h!=null&&($=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${d}]`),new Error(`Cannot compute the outputs [${b}] from the provided inputs [${o}]. Consider providing the following inputs: [${u}]. ${$}`)}return f}processStack(t,e,s,r,o,a,i,l,c){const u=[];for(;e.length>0;){const h=e.pop();s.currentContext=h.contexts;let d="";if(h.node.op==="Enter"&&v("isConstant",h.node,r,s)&&([d]=ps(h.node.name,s)),r[h.node.name]==null){const p=Cm(h.node,r,s,this._resourceManager);d||([d]=ps(h.node.name,s));const f=s.currentContext;No(p)?u.push(p.then(m=>(r[d]=m,s.currentContext=f,this.checkTensorForDisposal(d,h.node,r,s,a,i,l),this.processChildNodes(h.node,e,s,r,o,c),m))):(r[d]=p,this.checkTensorForDisposal(d,h.node,r,s,a,i,l),this.processChildNodes(h.node,e,s,r,o,c))}else this.processChildNodes(h.node,e,s,r,o,c)}return u}processChildNodes(t,e,s,r,o,a){t.children.forEach(i=>{const[l]=ps(i.name,s);o[l]||!a.has(i.name)||(i.op==="Merge"?i.inputNames.some(c=>!!rn(c,r,s))&&(o[l]=!0,e.push({contexts:s.currentContext,node:i})):i.inputNames.every(c=>!!rn(c,r,s))&&(o[l]=!0,e.push({contexts:s.currentContext,node:i})))})}dispose(){Object.keys(this.weightMap).forEach(t=>this.weightMap[t].forEach(e=>e.dispose()))}checkInputShapeAndType(t){Object.keys(t).forEach(e=>{const s=t[e],[r]=ln(e),o=this.graph.nodes[r];if(o.attrParams.shape&&o.attrParams.shape.value){const a=o.attrParams.shape.value,i=a.length===s.shape.length&&s.shape.every((l,c)=>a[c]===-1||a[c]===l);N(i,()=>`The shape of dict['${o.name}'] provided in model.execute(dict) must be [${a}], but was [${s.shape}]`)}o.attrParams.dtype&&o.attrParams.dtype.value&&N(s.dtype===o.attrParams.dtype.value,()=>`The dtype of dict['${o.name}'] provided in model.execute(dict) must be ${o.attrParams.dtype.value}, but was ${s.dtype}`)})}mapInputs(t){const e={};for(const s in t)if(this._signature!=null&&this._signature.inputs!=null&&this._signature.inputs[s]!=null){const r=this._signature.inputs[s];e[r.name]=t[s]}else e[s]=t[s];return e}checkInputs(t){const e=Object.keys(t).filter(s=>{const[r]=ln(s);return this.graph.nodes[r]==null});if(e.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${e}] that are not part of graph`)}mapOutputs(t){return t.map(e=>this._signature!=null&&this._signature.outputs!=null&&this._signature.outputs[e]!=null?this._signature.outputs[e].name:e,{})}checkOutputs(t){t.forEach(e=>{const[s]=ln(e);if(!this.graph.nodes[s])throw new Error(`The output '${e}' is not found in the graph`)})}}class EA{constructor(t={},e={}){this.hashTableNameToHandle=t,this.hashTableMap=e}addHashTable(t,e){this.hashTableNameToHandle[t]=e.handle,this.hashTableMap[e.id]=e}getHashTableHandleByName(t){return this.hashTableNameToHandle[t]}getHashTableById(t){return this.hashTableMap[t]}dispose(){for(const t in this.hashTableMap)this.hashTableMap[t].clearAndClose(),delete this.hashTableMap[t];for(const t in this.hashTableNameToHandle)this.hashTableNameToHandle[t].dispose(),delete this.hashTableNameToHandle[t]}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AA="?tfjs-format=file",DA="model.json";class RA{constructor(t,e={}){this.modelUrl=t,this.loadOptions=e,this.version="n/a",e==null&&(this.loadOptions={}),this.resourceManager=new EA}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}findIOHandler(){const t=this.modelUrl;if(t.load!=null)this.handler=t;else if(this.loadOptions.requestInit!=null)this.handler=Ff(t,this.loadOptions);else{const e=fv(t,this.loadOptions);if(e.length===0)e.push(Ff(t,this.loadOptions));else if(e.length>1)throw new Error(`Found more than one (${e.length}) load handlers for URL '${[t]}'`);this.handler=e[0]}}async load(){if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const t=await this.handler.load();return this.loadSync(t)}loadSync(t){this.artifacts=t;const e=this.artifacts.modelTopology;let s;this.artifacts.userDefinedMetadata!=null&&this.artifacts.userDefinedMetadata.signature!=null?s=this.artifacts.userDefinedMetadata.signature:s=this.artifacts.signature,this.signature=s,this.version=`${e.versions.producer}.${e.versions.minConsumer}`;const r=av(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new hl(wm.Instance.transformGraph(e,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(r),this.executor.resourceManager=this.resourceManager,t.modelInitializer!=null&&t.modelInitializer.node!=null){const o=wm.Instance.transformGraph(t.modelInitializer);this.initializer=new hl(o),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(t,e){if(typeof t=="string"){const s=Xg(t);if(s.length===0)throw new Error(`Cannot find any save handlers for URL '${t}'`);if(s.length>1)throw new Error(`Found more than one (${s.length}) save handlers for URL '${t}'`);t=s[0]}if(t.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return t.save(this.artifacts)}predict(t,e){return this.execute(t,this.outputNodes)}normalizeInputs(t){if(!(t instanceof pe)&&!Array.isArray(t))return t;if(t=Array.isArray(t)?t:[t],t.length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${t.length} input tensors.`);return this.inputNodes.reduce((e,s,r)=>(e[s]=t[r],e),{})}normalizeOutputs(t){return t=t||this.outputNodes,Array.isArray(t)?t:[t]}execute(t,e){t=this.normalizeInputs(t),e=this.normalizeOutputs(e);const s=this.executor.execute(t,e);return s.length>1?s:s[0]}async executeAsync(t,e){t=this.normalizeInputs(t),e=this.normalizeOutputs(e);const s=await this.executor.executeAsync(t,e);return s.length>1?s:s[0]}convertTensorMapToTensorsMap(t){return Object.keys(t).reduce((e,s)=>(e[s]=[t[s]],e),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}}async function FA(n,t={}){if(n==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");t==null&&(t={}),t.fromTFHub&&n.load==null&&(n.endsWith("/")||(n=n+"/"),n=`${n}${DA}${AA}`);const e=new RA(n,t);return await e.load(),e}var Di={exports:{}},OA=Di.exports,Sm;function _A(){return Sm||(Sm=1,(function(n){(function(t,e,s){function r(l){var c=this,u=i();c.next=function(){var h=2091639*c.s0+c.c*23283064365386963e-26;return c.s0=c.s1,c.s1=c.s2,c.s2=h-(c.c=h|0)},c.c=1,c.s0=u(" "),c.s1=u(" "),c.s2=u(" "),c.s0-=u(l),c.s0<0&&(c.s0+=1),c.s1-=u(l),c.s1<0&&(c.s1+=1),c.s2-=u(l),c.s2<0&&(c.s2+=1),u=null}function o(l,c){return c.c=l.c,c.s0=l.s0,c.s1=l.s1,c.s2=l.s2,c}function a(l,c){var u=new r(l),h=c&&c.state,d=u.next;return d.int32=function(){return u.next()*4294967296|0},d.double=function(){return d()+(d()*2097152|0)*11102230246251565e-32},d.quick=d,h&&(typeof h=="object"&&o(h,u),d.state=function(){return o(u,{})}),d}function i(){var l=4022871197,c=function(u){u=u.toString();for(var h=0;h<u.length;h++){l+=u.charCodeAt(h);var d=.02519603282416938*l;l=d>>>0,d-=l,d*=l,l=d>>>0,d-=l,l+=d*4294967296}return(l>>>0)*23283064365386963e-26};return c}e&&e.exports?e.exports=a:this.alea=a})(OA,n)})(Di)),Di.exports}var Ri={exports:{}},LA=Ri.exports,Tm;function PA(){return Tm||(Tm=1,(function(n){(function(t,e,s){function r(i){var l=this,c="";l.x=0,l.y=0,l.z=0,l.w=0,l.next=function(){var h=l.x^l.x<<11;return l.x=l.y,l.y=l.z,l.z=l.w,l.w^=l.w>>>19^h^h>>>8},i===(i|0)?l.x=i:c+=i;for(var u=0;u<c.length+64;u++)l.x^=c.charCodeAt(u)|0,l.next()}function o(i,l){return l.x=i.x,l.y=i.y,l.z=i.z,l.w=i.w,l}function a(i,l){var c=new r(i),u=l&&l.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=c.next()>>>11,p=(c.next()>>>0)/4294967296,f=(d+p)/(1<<21);while(f===0);return f},h.int32=c.next,h.quick=h,u&&(typeof u=="object"&&o(u,c),h.state=function(){return o(c,{})}),h}e&&e.exports?e.exports=a:this.xor128=a})(LA,n)})(Ri)),Ri.exports}var Fi={exports:{}},zA=Fi.exports,Em;function BA(){return Em||(Em=1,(function(n){(function(t,e,s){function r(i){var l=this,c="";l.next=function(){var h=l.x^l.x>>>2;return l.x=l.y,l.y=l.z,l.z=l.w,l.w=l.v,(l.d=l.d+362437|0)+(l.v=l.v^l.v<<4^(h^h<<1))|0},l.x=0,l.y=0,l.z=0,l.w=0,l.v=0,i===(i|0)?l.x=i:c+=i;for(var u=0;u<c.length+64;u++)l.x^=c.charCodeAt(u)|0,u==c.length&&(l.d=l.x<<10^l.x>>>4),l.next()}function o(i,l){return l.x=i.x,l.y=i.y,l.z=i.z,l.w=i.w,l.v=i.v,l.d=i.d,l}function a(i,l){var c=new r(i),u=l&&l.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=c.next()>>>11,p=(c.next()>>>0)/4294967296,f=(d+p)/(1<<21);while(f===0);return f},h.int32=c.next,h.quick=h,u&&(typeof u=="object"&&o(u,c),h.state=function(){return o(c,{})}),h}e&&e.exports?e.exports=a:this.xorwow=a})(zA,n)})(Fi)),Fi.exports}var Oi={exports:{}},MA=Oi.exports,Am;function VA(){return Am||(Am=1,(function(n){(function(t,e,s){function r(i){var l=this;l.next=function(){var u=l.x,h=l.i,d,p;return d=u[h],d^=d>>>7,p=d^d<<24,d=u[h+1&7],p^=d^d>>>10,d=u[h+3&7],p^=d^d>>>3,d=u[h+4&7],p^=d^d<<7,d=u[h+7&7],d=d^d<<13,p^=d^d<<9,u[h]=p,l.i=h+1&7,p};function c(u,h){var d,p=[];if(h===(h|0))p[0]=h;else for(h=""+h,d=0;d<h.length;++d)p[d&7]=p[d&7]<<15^h.charCodeAt(d)+p[d+1&7]<<13;for(;p.length<8;)p.push(0);for(d=0;d<8&&p[d]===0;++d);for(d==8?p[7]=-1:p[d],u.x=p,u.i=0,d=256;d>0;--d)u.next()}c(l,i)}function o(i,l){return l.x=i.x.slice(),l.i=i.i,l}function a(i,l){i==null&&(i=+new Date);var c=new r(i),u=l&&l.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=c.next()>>>11,p=(c.next()>>>0)/4294967296,f=(d+p)/(1<<21);while(f===0);return f},h.int32=c.next,h.quick=h,u&&(u.x&&o(u,c),h.state=function(){return o(c,{})}),h}e&&e.exports?e.exports=a:this.xorshift7=a})(MA,n)})(Oi)),Oi.exports}var _i={exports:{}},WA=_i.exports,Dm;function UA(){return Dm||(Dm=1,(function(n){(function(t,e,s){function r(i){var l=this;l.next=function(){var u=l.w,h=l.X,d=l.i,p,f;return l.w=u=u+1640531527|0,f=h[d+34&127],p=h[d=d+1&127],f^=f<<13,p^=p<<17,f^=f>>>15,p^=p>>>12,f=h[d]=f^p,l.i=d,f+(u^u>>>16)|0};function c(u,h){var d,p,f,m,g,y=[],b=128;for(h===(h|0)?(p=h,h=null):(h=h+"\0",p=0,b=Math.max(b,h.length)),f=0,m=-32;m<b;++m)h&&(p^=h.charCodeAt((m+32)%h.length)),m===0&&(g=p),p^=p<<10,p^=p>>>15,p^=p<<4,p^=p>>>13,m>=0&&(g=g+1640531527|0,d=y[m&127]^=p+g,f=d==0?f+1:0);for(f>=128&&(y[(h&&h.length||0)&127]=-1),f=127,m=512;m>0;--m)p=y[f+34&127],d=y[f=f+1&127],p^=p<<13,d^=d<<17,p^=p>>>15,d^=d>>>12,y[f]=p^d;u.w=g,u.X=y,u.i=f}c(l,i)}function o(i,l){return l.i=i.i,l.w=i.w,l.X=i.X.slice(),l}function a(i,l){i==null&&(i=+new Date);var c=new r(i),u=l&&l.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=c.next()>>>11,p=(c.next()>>>0)/4294967296,f=(d+p)/(1<<21);while(f===0);return f},h.int32=c.next,h.quick=h,u&&(u.X&&o(u,c),h.state=function(){return o(c,{})}),h}e&&e.exports?e.exports=a:this.xor4096=a})(WA,n)})(_i)),_i.exports}var Li={exports:{}},GA=Li.exports,Rm;function HA(){return Rm||(Rm=1,(function(n){(function(t,e,s){function r(i){var l=this,c="";l.next=function(){var h=l.b,d=l.c,p=l.d,f=l.a;return h=h<<25^h>>>7^d,d=d-p|0,p=p<<24^p>>>8^f,f=f-h|0,l.b=h=h<<20^h>>>12^d,l.c=d=d-p|0,l.d=p<<16^d>>>16^f,l.a=f-h|0},l.a=0,l.b=0,l.c=-1640531527,l.d=1367130551,i===Math.floor(i)?(l.a=i/4294967296|0,l.b=i|0):c+=i;for(var u=0;u<c.length+20;u++)l.b^=c.charCodeAt(u)|0,l.next()}function o(i,l){return l.a=i.a,l.b=i.b,l.c=i.c,l.d=i.d,l}function a(i,l){var c=new r(i),u=l&&l.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=c.next()>>>11,p=(c.next()>>>0)/4294967296,f=(d+p)/(1<<21);while(f===0);return f},h.int32=c.next,h.quick=h,u&&(typeof u=="object"&&o(u,c),h.state=function(){return o(c,{})}),h}e&&e.exports?e.exports=a:this.tychei=a})(GA,n)})(Li)),Li.exports}var xu={exports:{}},Fm;function jA(){return Fm||(Fm=1,(function(n){(function(t,e){var s=(0,eval)("this"),r=256,o=6,a=52,i="random",l=e.pow(r,o),c=e.pow(2,a),u=c*2,h=r-1,d;function p(x,w,C){var k=[];w=w==!0?{entropy:!0}:w||{};var I=y(g(w.entropy?[x,$(t)]:x??b(),3),k),S=new f(k),E=function(){for(var R=S.g(o),L=l,O=0;R<c;)R=(R+O)*r,L*=r,O=S.g(1);for(;R>=u;)R/=2,L/=2,O>>>=1;return(R+O)/L};return E.int32=function(){return S.g(4)|0},E.quick=function(){return S.g(4)/4294967296},E.double=E,y($(S.S),t),(w.pass||C||function(R,L,O,z){return z&&(z.S&&m(z,S),R.state=function(){return m(S,{})}),O?(e[i]=R,L):R})(E,I,"global"in w?w.global:this==e,w.state)}e["seed"+i]=p;function f(x){var w,C=x.length,k=this,I=0,S=k.i=k.j=0,E=k.S=[];for(C||(x=[C++]);I<r;)E[I]=I++;for(I=0;I<r;I++)E[I]=E[S=h&S+x[I%C]+(w=E[I])],E[S]=w;(k.g=function(R){for(var L,O=0,z=k.i,M=k.j,V=k.S;R--;)L=V[z=h&z+1],O=O*r+V[h&(V[z]=V[M=h&M+L])+(V[M]=L)];return k.i=z,k.j=M,O})(r)}function m(x,w){return w.i=x.i,w.j=x.j,w.S=x.S.slice(),w}function g(x,w){var C=[],k=typeof x,I;if(w&&k=="object")for(I in x)try{C.push(g(x[I],w-1))}catch{}return C.length?C:k=="string"?x:x+"\0"}function y(x,w){for(var C=x+"",k,I=0;I<C.length;)w[h&I]=h&(k^=w[h&I]*19)+C.charCodeAt(I++);return $(w)}function b(){try{var x;return d&&(x=d.randomBytes)?x=x(r):(x=new Uint8Array(r),(s.crypto||s.msCrypto).getRandomValues(x)),$(x)}catch{var w=s.navigator,C=w&&w.plugins;return[+new Date,s,C,s.screen,$(t)]}}function $(x){return String.fromCharCode.apply(0,x)}if(y(e.random(),t),n.exports){n.exports=p;try{d=Hd}catch{}}})([],Math)})(xu)),xu.exports}var wu,Om;function qA(){if(Om)return wu;Om=1;var n=_A(),t=PA(),e=BA(),s=VA(),r=UA(),o=HA(),a=jA();return a.alea=n,a.xor128=t,a.xorwow=e,a.xorshift7=s,a.xor4096=r,a.tychei=o,wu=a,wu}qA();/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var _m;(function(n){n[n.FAIL=0]="FAIL",n[n.SHORTEST=1]="SHORTEST",n[n.LONGEST=2]="LONGEST"})(_m||(_m={}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function it(n,t){Array.isArray(n)||(n=[n]),n.forEach(e=>{e!=null&&N(e.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the CPU backend.`)})}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KA=ep;class Jc extends Ih{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new Sg(this,Ss())}nextDataId(){return Jc.nextDataId++}write(t,e,s){this.firstUse&&(this.firstUse=!1,X().get("IS_NODE")&&ro(`
============================
Hi there 👋. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.
============================`));const r={id:this.nextDataId()};return this.data.set(r,{values:t,dtype:s,refCount:1}),r}makeTensorInfo(t,e,s){let r;if(e==="string"&&s!=null&&s.length>0&&Lo(s[0])){const o=s.map(a=>Oa(a));r=this.write(o,t,e)}else r=this.write(s,t,e);return{dataId:r,shape:t,dtype:e}}refCount(t){return this.data.has(t)?this.data.get(t).refCount:0}incRef(t){const e=this.data.get(t);e.refCount++}decRef(t){if(this.data.has(t)){const e=this.data.get(t);e.refCount--}}move(t,e,s,r,o){this.data.set(t,{values:e,dtype:r,refCount:o})}numDataIds(){return this.data.numDataIds()}async read(t){return this.readSync(t)}readSync(t){const{dtype:e,complexTensorInfos:s}=this.data.get(t);if(e==="complex64"){const r=this.readSync(s.real.dataId),o=this.readSync(s.imag.dataId);return ws(r,o)}return this.data.get(t).values}bufferSync(t){const e=this.readSync(t.dataId);let s=e;if(t.dtype==="string")try{s=e.map(r=>Vr(r))}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Ft(t.shape,t.dtype,s)}makeOutput(t,e,s){const r=this.write(t,e,s);return Ss().makeTensorFromDataId(r,e,s,this)}disposeData(t,e=!1){if(this.data.has(t)){if(this.data.get(t).refCount--,!e&&this.data.get(t).refCount>0)return!1;const{complexTensorInfos:s}=this.data.get(t);s!=null&&(this.disposeData(s.real.dataId,!0),this.disposeData(s.imag.dataId,!0)),this.data.delete(t)}return!0}disposeIntermediateTensorInfo(t){this.disposeData(t.dataId)}async time(t){const e=nn();return t(),{kernelMs:nn()-e}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(t){it([t],"where");const e=this.readSync(t.dataId);return KA(t.shape,e)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}Jc.nextDataId=0;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N0(n){const t=new Float32Array(n.length);for(let e=0;e<n.length;++e)t[e]=Math.abs(n[e]);return t}const XA=n=>{const{x:t}=n.inputs,e=n.backend;it(t,"abs");let s=new Float32Array(H(t.shape));const r=e.data.get(t.dataId).values;return s=N0(r),e.makeOutput(s,t.shape,"float32")},YA={kernelName:xl,backendName:"cpu",kernelFunc:XA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $e(n){return(t,e,s,r,o)=>{const a=Rt(t,e),i=a.length,l=ft(a),c=H(a),u=Ge(o,c),h=t.length,d=e.length,p=ft(t),f=ft(e),m=Io(t,a),g=Io(e,a);if(m.length+g.length===0)for(let y=0;y<u.length;++y)u[y]=n(s[y%s.length],r[y%r.length]);else for(let y=0;y<u.length;++y){const b=zo(y,i,l),$=b.slice(-h);m.forEach(k=>$[k]=0);const x=ss($,h,p),w=b.slice(-d);g.forEach(k=>w[k]=0);const C=ss(w,d,f);u[y]=n(s[x],r[C])}return[u,a]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cn(n){const{inputs:t,backend:e}=n,{real:s,imag:r}=t,o=e.data.get(s.dataId).values,a=e.data.get(r.dataId).values,i=e.makeTensorInfo(s.shape,"complex64"),l=e.data.get(i.dataId);return l.complexTensorInfos={real:e.makeTensorInfo(s.shape,"float32",o),imag:e.makeTensorInfo(r.shape,"float32",a)},i}const JA={kernelName:Oh,backendName:"cpu",kernelFunc:cn};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dl(n,t,e="float32"){if(e==="complex64"){const r=dl(n,t,"float32"),o=dl(n,t,"float32");return cn({inputs:{real:r,imag:o},backend:n})}const s=Ke(H(t),e);return n.makeTensorInfo(t,e,s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function is(n){const{inputs:t,backend:e}=n,{x:s}=t;return e.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const ZA={kernelName:oa,backendName:"cpu",kernelFunc:is};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mr(n){const{inputs:t,backend:e}=n,{input:s}=t,r=e.data.get(s.dataId).complexTensorInfos.real,o=e.data.get(r.dataId).values;return e.makeTensorInfo(r.shape,r.dtype,o)}const QA={kernelName:id,backendName:"cpu",kernelFunc:mr};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vs(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{dtype:o}=s;if(o==="complex64"){if(r.dtype==="complex64")return is({inputs:{x:r},backend:e});const a=dl(e,r.shape,r.dtype),i=Vs({inputs:{x:r},backend:e,attrs:{dtype:"float32"}}),l=cn({inputs:{real:i,imag:a},backend:e});return e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(i),l}if(r.dtype==="complex64"){const a=mr({inputs:{input:r},backend:e}),i=Vs({inputs:{x:a},backend:e,attrs:{dtype:o}});return e.disposeIntermediateTensorInfo(a),i}if(!Ag(r.dtype,o)){const a=is({inputs:{x:r},backend:e});return{dataId:a.dataId,shape:a.shape,dtype:o}}if(o==="int32"){const a=e.data.get(r.dataId).values,i=Int32Array.from(a);return e.makeTensorInfo(r.shape,"int32",i)}if(o==="bool"){const a=e.data.get(r.dataId).values,i=br([0],r.dtype),[l,c]=$e((u,h)=>u!==h?1:0)(r.shape,[],a,i,"bool");return e.makeTensorInfo(c,"bool",l)}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${o}`)}const tD={kernelName:jo,backendName:"cpu",kernelFunc:Vs};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Be(n,t,e,s){return e==null?({inputs:r,backend:o})=>{const{a,b:i}=r,l=o;it([a,i],n);const c=l.data.get(a.dataId).values,u=l.data.get(i.dataId).values,h=s||a.dtype,[d,p]=t(a.shape,i.shape,c,u,h);return l.makeTensorInfo(p,h,d)}:({inputs:r,backend:o})=>{const{a,b:i}=r,l=o;if(a.dtype==="complex64"||i.dtype==="complex64"){const c=Vs({inputs:{x:a},backend:l,attrs:{dtype:"complex64"}}),u=l.data.get(c.dataId),h=u.complexTensorInfos.real,d=u.complexTensorInfos.imag,p=l.data.get(h.dataId).values,f=l.data.get(d.dataId).values,m=Vs({inputs:{x:i},backend:l,attrs:{dtype:"complex64"}}),g=l.data.get(m.dataId),y=g.complexTensorInfos.real,b=g.complexTensorInfos.imag,$=l.data.get(y.dataId).values,x=l.data.get(b.dataId).values,[w,C,k]=e(a.shape,i.shape,p,f,$,x),I=l.makeTensorInfo(k,"float32",w),S=l.makeTensorInfo(k,"float32",C),E=cn({inputs:{real:I,imag:S},backend:l});return l.disposeIntermediateTensorInfo(c),l.disposeIntermediateTensorInfo(m),l.disposeIntermediateTensorInfo(I),l.disposeIntermediateTensorInfo(S),E}else{const c=l.data.get(a.dataId).values,u=l.data.get(i.dataId).values,h=s||a.dtype,[d,p]=t(a.shape,i.shape,c,u,h);return l.makeTensorInfo(p,h,d)}}}function Qp(n){return(t,e,s,r,o,a)=>{const i=Rt(t,e),l=H(i),c=i.length,u=ft(i),h=Ge("float32",l),d=Ge("float32",l),p=Io(t,i),f=Io(e,i),m=ws(s,r),g=ws(o,a),y=t.length,b=ft(t),$=e.length,x=ft(e);if(p.length+f.length===0)for(let w=0;w<h.length;w++){const C=w%m.length,k=w%g.length,I=n(m[C*2],m[C*2+1],g[k*2],g[k*2+1]);h[w]=I.real,d[w]=I.imag}else for(let w=0;w<h.length;w++){const C=zo(w,c,u),k=C.slice(-y);p.forEach(L=>k[L]=0);const I=ss(k,y,b),S=C.slice(-$);f.forEach(L=>S[L]=0);const E=ss(S,$,x),R=n(m[I*2],m[I*2+1],g[E*2],g[E*2+1]);h[w]=R.real,d[w]=R.imag}return[h,d,i]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const I0=$e(((n,t)=>n+t)),eD=Qp(((n,t,e,s)=>({real:n+e,imag:t+s}))),ni=Be(Zr,I0,eD),nD={kernelName:Zr,backendName:"cpu",kernelFunc:ni};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tf(n,t,e,s,r){const o=H(s),a=Ke(r,e);for(let i=0;i<n.length;i++){const l=n[i];if(l<0)throw new Error("Input x must be non-negative!");l>=r||(o>0?a[l]+=t[i]:a[l]+=1)}return a}function S0(n,t,e,s=!1){const r=n.shape[0],o=n.shape[1],a=Ft([r,e],t.dtype);for(let i=0;i<r;i++)for(let l=0;l<o;l++){const c=n.get(i,l);if(c<0)throw new Error("Input x must be non-negative!");c>=e||(s?a.set(1,i,c):t.size>0?a.set(a.get(i,c)+t.get(i,l),i,c):a.set(a.get(i,c)+1,i,c))}return a}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function io(n){return(t,e,s)=>{const r=Ge(e,t.length);for(let o=0;o<t.length;++o)r[o]=n(t[o],s);return r}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ht(n,t,e){return({inputs:s,attrs:r,backend:o})=>{const{x:a}=s;if(it(a,n),a.dtype==="string"||e==="string")throw new Error("unaryKernelFunc does not support string input/output");const i=o,l=i.data.get(a.dataId).values,c=H(a.shape),u=e||a.dtype,h=Jr(u,c);for(let d=0;d<c;++d)h[d]=t(l[d],r);return i.makeTensorInfo(a.shape,u,h)}}function lo(n,t,e){return({inputs:s,attrs:r,backend:o})=>{const{x:a}=s;if(it(a,n),a.dtype==="string"||e==="string")throw new Error("unaryKernelFunc does not support string input/output");const i=o,l=i.data.get(a.dataId).values,c=a.dtype,u=t(l,c,r);return i.makeTensorInfo(a.shape,c,u)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const T0=io(n=>Math.ceil(n)),sD=lo(qo,T0),rD={kernelName:qo,backendName:"cpu",kernelFunc:sD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E0(n,t,e,s){const r=Jr(e,H(t));if(s&&e!=="string"){let o=0;n.forEach(a=>{const i=H(a.shape);r.set(a.vals,o),o+=i})}else{let o=0;n.forEach(a=>{const i=e==="string"?Tp(a.vals):a.vals;let l=0;for(let c=0;c<a.shape[0];++c){const u=c*t[1]+o;for(let h=0;h<a.shape[1];++h)r[u+h]=i[l++]}o+=a.shape[1]})}return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const A0=io(n=>Math.exp(n)),D0=lo(ta,A0),oD={kernelName:ta,backendName:"cpu",kernelFunc:D0};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const R0=io(n=>Math.expm1(n)),aD=lo(ea,R0),iD={kernelName:ea,backendName:"cpu",kernelFunc:aD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const F0=io(n=>Math.floor(n)),lD=lo(na,F0),cD={kernelName:na,backendName:"cpu",kernelFunc:lD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O0(n,t,e){const s=Ft(e,n.dtype);for(let r=0;r<s.size;++r){const a=s.indexToLoc(r).slice(),i=a[0],l=a[2],c=t.locToIndex([i,l]);a[2]=t.values[c];const u=n.locToIndex(a);s.values[r]=n.values[u]}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _0=$e((n,t)=>n>t?1:0),uD=Be(Bl,_0,null,"bool"),hD={kernelName:Bl,backendName:"cpu",kernelFunc:uD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const L0=$e((n,t)=>n<t?1:0),dD=Be(Vl,L0,null,"bool"),pD={kernelName:Vl,backendName:"cpu",kernelFunc:dD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P0(n,t,e){const s=(t-n)/(e-1),r=Ke(e,"float32");r[0]=n;for(let o=1;o<r.length;o++)r[o]=r[o-1]+s;return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const z0=io(n=>Math.log(n)),fD=lo(ca,z0),mD={kernelName:ca,backendName:"cpu",kernelFunc:fD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B0(n,t,e,s){const r=Ge(s,H(e));for(let o=0;o<r.length;++o){const a=o*t;let i=n[a];for(let l=0;l<t;++l){const c=n[a+l];c>i&&(i=c)}r[o]=i}return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const M0=$e(((n,t)=>Math.max(n,t))),gD=Be(ha,M0),yD={kernelName:ha,backendName:"cpu",kernelFunc:gD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const V0=$e(((n,t)=>Math.min(n,t))),bD=Be(da,V0),xD={kernelName:da,backendName:"cpu",kernelFunc:bD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ef=$e(((n,t)=>n*t)),wD=Qp(((n,t,e,s)=>({real:n*e-t*s,imag:n*s+t*e}))),nf=Be(fa,ef,wD),vD={kernelName:fa,backendName:"cpu",kernelFunc:nf};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W0(n,t,e){const s=Ws(-1,e);return ef([],t,s,n,e)}function $D(n){const{inputs:t,backend:e}=n,{x:s}=t;it(s,"neg");const r=e.data.get(s.dataId).values,[o,a]=W0(r,s.shape,s.dtype);return e.makeTensorInfo(a,s.dtype,o)}const kD={kernelName:Ql,backendName:"cpu",kernelFunc:$D};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const U0=$e(((n,t)=>n!==t?1:0)),CD=Be(tc,U0,null,"bool"),ND={kernelName:tc,backendName:"cpu",kernelFunc:CD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sf(n,t,e,s,r){const o=t.length,a=H(t),i=ft(t),l=ft(r),c=Ge(e,H(r));for(let u=0;u<a;++u){const h=zo(u,o,i),d=new Array(h.length);for(let f=0;f<d.length;f++)d[f]=h[s[f]];const p=ss(d,o,l);c[p]=n[u]}return c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function On(n){const{inputs:t,attrs:e,backend:s}=n,{x:r}=t,{perm:o}=e;it(r,"transpose");const a=r.shape.length,i=new Array(a);for(let h=0;h<i.length;h++)i[h]=r.shape[o[h]];const l=s.data.get(r.dataId).values,c=sf(l,r.shape,r.dtype,o,i);return{dataId:s.write(c,i,r.dtype),shape:i,dtype:r.dtype}}const ID={kernelName:gc,backendName:"cpu",kernelFunc:On};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G0(n,t,e,s){const[r,o]=ze(n,s),a=yn(t,"int32"),i=Ke(H(r),a),l=H(o);for(let c=0;c<i.length;++c){const u=c*l;let h=1;for(let d=0;d<l;++d)h*=e[u+d];i[c]=h}return{outVals:i,outShape:r,outDtype:a}}function SD(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o,keepDims:a}=s;it(r,"prod");const i=r.shape.length,l=Et(o,r.shape),c=ye(l,i);let u=l,h=r;const d=[];c!=null&&(h=On({inputs:{x:r},backend:e,attrs:{perm:c}}),d.push(h),u=ve(u.length,i));const p=e.data.get(h.dataId).values,{outVals:f,outShape:m,outDtype:g}=G0(h.shape,h.dtype,p,u);let y=m;return a&&(y=we(m,l)),d.forEach(b=>e.disposeIntermediateTensorInfo(b)),e.makeTensorInfo(y,g,f)}const TD={kernelName:od,backendName:"cpu",kernelFunc:SD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H0(n,t,e,s){const r=n===t,o=n<t&&e<0,a=t<n&&e>1;if(r||o||a)return Ke(0,s);const i=Math.abs(Math.ceil((t-n)/e)),l=Ke(i,s);t<n&&e===1&&(e=-1),l[0]=n;for(let c=1;c<l.length;c++)l[c]=l[c-1]+e;return l}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const j0=io(n=>1/Math.sqrt(n)),ED=lo(wa,j0),AD={kernelName:wa,backendName:"cpu",kernelFunc:ED};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q0(n,t,e,s,r){const o=Nd(s,t,e),a=H(e),i=ft(s);if(o){const h=Id(t,i);return r==="string"?n.slice(h,h+a):n.subarray(h,h+a)}const l=r==="string"?Tp(n):n,c=Ft(s,r,l),u=Ft(e,r);for(let h=0;h<u.size;++h){const d=u.indexToLoc(h),p=d.map((f,m)=>f+t[m]);u.set(c.get(...p),...d)}return r==="string"?fb(u.values):u.values}function gr(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{begin:o,size:a}=s;it(r,"slice");const[i,l]=wc(r,o,a);Cd(r,i,l);const c=e.data.get(r.dataId).values,u=q0(c,i,l,r.shape,r.dtype);return e.makeTensorInfo(l,r.dtype,u)}const DD={kernelName:hc,backendName:"cpu",kernelFunc:gr};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const K0=$e(((n,t)=>{const e=n-t;return e*e})),RD=Be(Ta,K0),FD={kernelName:Ta,backendName:"cpu",kernelFunc:RD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X0(n,t,e,s){const r=Ft(n,t.dtype);for(let o=0;o<r.size;o++){const a=r.indexToLoc(o),i=new Array(a.length);for(let l=0;l<i.length;l++)i[l]=a[l]*e[l]+s[l];r.set(t.get(...i),...a)}return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Y0=$e(((n,t)=>n-t)),OD=Qp(((n,t,e,s)=>({real:n-e,imag:t-s}))),rf=Be(Ea,Y0,OD),_D={kernelName:Ea,backendName:"cpu",kernelFunc:rf};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J0(n,t){const e=new Array(n.rank);for(let r=0;r<e.length;r++)e[r]=n.shape[r]*t[r];const s=Ft(e,n.dtype);for(let r=0;r<s.values.length;++r){const o=s.indexToLoc(r),a=new Array(n.rank);for(let l=0;l<a.length;l++)a[l]=o[l]%n.shape[l];const i=n.locToIndex(a);s.values[r]=n.values[i]}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z0(n,t,e,s,r){const o=t[t.length-1],[a,i]=[n.length/o,o],l=Ge(e,a*s),c=Ge("int32",a*s);for(let h=0;h<a;h++){const d=h*i,p=n.subarray(d,d+i),f=[];for(let b=0;b<p.length;b++)f.push({value:p[b],index:b});f.sort((b,$)=>$.value-b.value);const m=h*s,g=l.subarray(m,m+s),y=c.subarray(m,m+s);for(let b=0;b<s;b++)g[b]=f[b].value,y[b]=f[b].index}const u=t.slice();return u[u.length-1]=s,[Ft(u,e,l),Ft(u,"int32",c)]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q0(n,t,e,s){const r=Et(t,e)[0],o=[1,e[0],1];for(let f=0;f<r;f++)o[0]*=e[f];o[1]=e[r];for(let f=r+1;f<e.length;f++)o[2]*=e[f];const a={},i=new Int32Array(e[r]),l=new _e(o,s,n),c=[],u=o[0]===1&&o[2]===1;for(let f=0;f<e[r];f++){let m;if(u)m=n[f].toString();else{const g=[];for(let y=0;y<o[0];y++)for(let b=0;b<o[2];b++)g.push(l.get(y,f,b));m=g.join(",")}if(a[m]!==void 0)i[f]=a[m];else{const g=Object.keys(a).length;a[m]=g,i[f]=g,c.push(f)}}const h=o.slice();h[1]=Object.keys(a).length;const d=new _e(h,s);c.forEach((f,m)=>{for(let g=0;g<o[0];g++)for(let y=0;y<o[2];y++)d.set(l.get(g,f,y),g,m,y)});const p=e.slice();return p[r]=h[1],{outputValues:d.values,outputShape:p,indices:i}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LD=Object.freeze(Object.defineProperty({__proto__:null,addImpl:I0,bincountImpl:tf,bincountReduceImpl:S0,ceilImpl:T0,concatImpl:E0,expImpl:A0,expm1Impl:R0,floorImpl:F0,gatherV2Impl:O0,greaterImpl:_0,lessImpl:L0,linSpaceImpl:P0,logImpl:z0,maxImpl:B0,maximumImpl:M0,minimumImpl:V0,multiplyImpl:ef,negImpl:W0,notEqualImpl:U0,prodImpl:G0,rangeImpl:H0,rsqrtImpl:j0,simpleAbsImpl:N0,sliceImpl:q0,squaredDifferenceImpl:K0,stridedSliceImpl:X0,subImpl:Y0,tileImpl:J0,topKImpl:Z0,transposeImpl:sf,uniqueImpl:Q0},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */my("cpu",()=>new Jc,1);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const t1=Ht(Zo,n=>n>=0?n:Math.exp(n)-1),PD={kernelName:Zo,backendName:"cpu",kernelFunc:t1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e1(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{alpha:o}=s;it([r],"leakyRelu");const a=H(r.shape),i=e.data.get(r.dataId).values,l=Ge("float32",a);for(let c=0;c<i.length;c++)l[c]=i[c]<0?o*i[c]:i[c];return e.makeTensorInfo(r.shape,"float32",l)}const zD={kernelName:Ml,backendName:"cpu",kernelFunc:e1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BD=$e((n,t)=>n<0?t*n:n);function n1(n){const{inputs:t,backend:e}=n,{x:s,alpha:r}=t;it([s,r],"prelu");const o=e.data.get(s.dataId).values,a=e.data.get(r.dataId).values,[i,l]=BD(s.shape,r.shape,o,a,s.dtype);return e.makeTensorInfo(l,s.dtype,i)}const MD={kernelName:oc,backendName:"cpu",kernelFunc:n1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const s1=Ht(ya,n=>Math.max(0,n)),VD={kernelName:ya,backendName:"cpu",kernelFunc:s1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const r1=Ht(ba,n=>Math.min(Math.max(0,n),6)),WD={kernelName:ba,backendName:"cpu",kernelFunc:r1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function of(n,t,e,s,r){if(e==="linear")return is({inputs:{x:t},backend:n});if(e==="relu")return s1({inputs:{x:t},backend:n});if(e==="elu")return t1({inputs:{x:t},backend:n});if(e==="relu6")return r1({inputs:{x:t},backend:n});if(e==="prelu")return n1({inputs:{x:t,alpha:s},backend:n});if(e==="leakyrelu")return e1({inputs:{x:t},backend:n,attrs:{alpha:r}});throw new Error(`Activation ${e} has not been implemented for the CPU backend.`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function le(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{shape:o}=s,a=H(r.shape),i=Eg(o,a),l=H(i);N(a===l,()=>`The new shape (${i}) has ${l} elements and the old shape (${r.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`),e.incRef(r.dataId);const c=e.data.get(r.dataId);if(c.complexTensorInfos!=null){const u=c.complexTensorInfos.real,h=c.complexTensorInfos.imag;u.shape=i,h.shape=i}return{dataId:r.dataId,shape:i,dtype:r.dtype}}const UD={kernelName:ac,backendName:"cpu",kernelFunc:le};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o1(n){const{inputs:t,backend:e,attrs:s}=n,{a:r,b:o}=t,{transposeA:a,transposeB:i}=s;it([r,o],"matMul");const l=r.shape.length,c=o.shape.length,u=a?r.shape[l-2]:r.shape[l-1],h=i?o.shape[c-1]:o.shape[c-2],d=a?r.shape[l-1]:r.shape[l-2],p=i?o.shape[c-2]:o.shape[c-1],f=r.shape.slice(0,-2),m=o.shape.slice(0,-2),g=H(f),y=H(m),b=g===y||g===1||y===1;N(l>=2&&c>=2&&b,()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${f}) and (${m}).`);const x=(g>y?r.shape.slice(0,-2):o.shape.slice(0,-2)).concat([d,p]);N(u===h,()=>`Error in matMul: inner shapes (${u}) and (${h}) of Tensors with shapes ${r.shape} and ${o.shape} and transposeA=${a} and transposeB=${i} must match.`);const w=a?[g,u,d]:[g,d,u],C=i?[y,p,h]:[y,h,p],k=le({inputs:{x:r},backend:e,attrs:{shape:w}}),I=le({inputs:{x:o},backend:e,attrs:{shape:C}}),S=a?k.shape[1]:k.shape[2],E=a?k.shape[2]:k.shape[1],R=i?I.shape[1]:I.shape[2],L=Math.max(g,y),O=e.data.get(k.dataId).values,z=e.data.get(I.dataId).values,M=ft(k.shape),V=ft(I.shape),[K,G,j]=a?[M[0],1,M[1]]:[M[0],M[1],1],[J,Z,tt]=i?[1,V[1],V[0]]:[V[1],1,V[0]],Q=E*R,et=Ft([L,E,R],k.dtype),st=et.values,rt=e.blockSize;for(let at=0;at<L;at++)for(let ht=0;ht<E;ht+=rt)for(let dt=0;dt<R;dt+=rt)for(let yt=0;yt<S;yt+=rt){const It=Math.min(ht+rt,E),Bt=Math.min(dt+rt,R),Xt=Math.min(yt+rt,S);for(let Yt=ht;Yt<It;Yt++)for(let jt=dt;jt<Bt;jt++){let qt=0;for(let Jt=yt;Jt<Xt;Jt++){const ce=Math.min(at,g-1)*K,Ye=Math.min(at,y-1)*tt,me=O[ce+Yt*G+Jt*j],Ae=z[Jt*J+jt*Z+Ye];qt+=me*Ae}st[at*Q+(Yt*R+jt)]+=qt}}return e.disposeIntermediateTensorInfo(k),e.disposeIntermediateTensorInfo(I),e.makeTensorInfo(x,et.dtype,et.values)}const GD={kernelName:Nl,backendName:"cpu",kernelFunc:o1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HD(n){const{inputs:t,backend:e,attrs:s}=n,{a:r,b:o,bias:a,preluActivationWeights:i}=t,{transposeA:l,transposeB:c,activation:u,leakyreluAlpha:h}=s;let d,p,f;const m=[];d=o1({inputs:{a:r,b:o},attrs:{transposeA:l,transposeB:c},backend:e}),a&&(p=ni({inputs:{a:d,b:a},backend:e}),m.push(d),d=p),u&&(f=of(e,d,u,i,h),m.push(d),d=f);for(const y of m)e.disposeIntermediateTensorInfo(y);return d}const jD={kernelName:Gi,backendName:"cpu",kernelFunc:HD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qD=Ht(Bo,n=>Math.acos(n)),KD={kernelName:Bo,backendName:"cpu",kernelFunc:qD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XD=Ht(Mo,n=>Math.acosh(n)),YD={kernelName:Mo,backendName:"cpu",kernelFunc:XD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JD(n){const{inputs:t,backend:e}=n,s=t;it(t,"addN");const r=s.map(i=>e.data.get(i.dataId).values),o=Ft(s[0].shape,s[0].dtype),a=o.values;for(let i=0;i<s.length;i++){const l=r[i];for(let c=0;c<a.length;c++)a[c]+=l[c]}return e.makeTensorInfo(o.shape,o.dtype,o.values)}const ZD={kernelName:wl,backendName:"cpu",kernelFunc:JD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QD(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o,keepDims:a}=s;it(r,"all");const i=Et(o,r.shape);let l=i;const c=ye(l,r.shape.length);let u=r;c!=null&&(u=On({inputs:{x:r},backend:e,attrs:{perm:c}}),l=ve(l.length,r.shape.length)),je("all",l,u.shape.length);const[h,d]=ze(u.shape,l),p=H(d),f=Ke(H(h),u.dtype),m=e.data.get(u.dataId).values;for(let y=0;y<f.length;++y){const b=y*p;let $=m[b];for(let x=0;x<p;++x){const w=m[b+x];$=$&&w}f[y]=$}c!=null&&e.disposeIntermediateTensorInfo(u);const g=e.makeTensorInfo(h,u.dtype,f);if(a){const y=we(h,i),b=le({inputs:{x:g},backend:e,attrs:{shape:y}});return e.disposeIntermediateTensorInfo(g),b}return g}const tR={kernelName:Eh,backendName:"cpu",kernelFunc:QD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eR(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o,keepDims:a}=s;it(r,"any");const i=Et(o,r.shape);let l=i;const c=ye(l,r.shape.length);let u=r;c!=null&&(u=On({inputs:{x:r},backend:e,attrs:{perm:c}}),l=ve(l.length,r.shape.length)),je("any",l,u.shape.length);const[h,d]=ze(u.shape,l),p=H(d),f=Ke(H(h),u.dtype),m=e.data.get(u.dataId).values;for(let y=0;y<f.length;++y){const b=y*p;let $=m[b];for(let x=0;x<p;++x){const w=m[b+x];$=$||w}f[y]=$}c!=null&&e.disposeIntermediateTensorInfo(u);const g=e.makeTensorInfo(h,u.dtype,f);if(a){const y=we(h,i),b=le({inputs:{x:g},backend:e,attrs:{shape:y}});return e.disposeIntermediateTensorInfo(g),b}return g}const nR={kernelName:Ah,backendName:"cpu",kernelFunc:eR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sR(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o}=s;it(r,"argMax");let a=Et(o,r.shape);const i=ye(a,r.shape.length);let l=r;const c=[];i!=null&&(l=On({inputs:{x:r},backend:e,attrs:{perm:i}}),c.push(l),a=ve(a.length,l.shape.length)),a=[a[0]],je("argMax",a,l.shape.length);const[u,h]=ze(l.shape,a),d=H(u),p=Ke(d,"int32"),f=H(h),m=e.data.get(l.dataId).values;for(let g=0;g<p.length;++g){const y=g*f;let b=m[y],$=0;for(let x=0;x<f;++x){const w=m[y+x];w>b&&(b=w,$=x)}p[g]=$}return c.forEach(g=>e.disposeIntermediateTensorInfo(g)),e.makeTensorInfo(u,"int32",p)}const rR={kernelName:vl,backendName:"cpu",kernelFunc:sR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oR(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o}=s;it(r,"argMin");let a=Et(o,r.shape);const i=ye(a,r.shape.length);let l=r;const c=[];i!=null&&(l=On({inputs:{x:r},backend:e,attrs:{perm:i}}),c.push(l),a=ve(a.length,l.shape.length)),a=[a[0]],je("argMin",a,l.shape.length);const[u,h]=ze(l.shape,a),d=H(u),p=Ke(d,"int32"),f=H(h),m=e.data.get(l.dataId).values;for(let g=0;g<p.length;++g){const y=g*f;let b=m[y],$=0;for(let x=0;x<f;++x){const w=m[y+x];w<b&&(b=w,$=x)}p[g]=$}return c.forEach(g=>e.disposeIntermediateTensorInfo(g)),e.makeTensorInfo(u,"int32",p)}const aR={kernelName:$l,backendName:"cpu",kernelFunc:oR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iR=Ht(Vo,n=>Math.asin(n)),lR={kernelName:Vo,backendName:"cpu",kernelFunc:iR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cR=Ht(Wo,n=>Math.asinh(n)),uR={kernelName:Wo,backendName:"cpu",kernelFunc:cR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hR=Ht(Uo,n=>Math.atan(n)),dR={kernelName:Uo,backendName:"cpu",kernelFunc:hR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pR=$e((n,t)=>Math.atan2(n,t)),fR=Be(Ho,pR),mR={kernelName:Ho,backendName:"cpu",kernelFunc:fR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gR=Ht(Go,n=>Math.atanh(n)),yR={kernelName:Go,backendName:"cpu",kernelFunc:gR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function af(n,t,e,s,r,o){const a=r.strideHeight,i=r.strideWidth,l=r.dilationHeight,c=r.dilationWidth,u=r.effectiveFilterHeight,h=r.effectiveFilterWidth,d=r.padInfo.top,p=r.padInfo.left,f=o==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=Ft(r.outShape,e),g=m.values,y=r.outShape[1]*r.outShape[2]*r.outShape[3],b=r.outShape[2]*r.outShape[3],$=r.outShape[3];for(let x=0;x<r.batchSize;++x){const w=x*y,C=x*s[0];for(let k=0;k<r.inChannels;++k)for(let I=0;I<r.outHeight;++I){const S=I*a-d,E=Math.max(0,S),R=Math.min(r.inHeight,u+S),L=w+I*b;for(let O=0;O<r.outWidth;++O){const z=O*i-p,M=Math.max(0,z),V=Math.min(r.inWidth,h+z);let K=f,G=0,j=0;for(let Z=E;Z<R;Z+=l){const tt=C+Z*s[1];for(let Q=M;Q<V;Q+=c){const et=tt+Q*s[2],st=n[et+k];o==="max"&&st>K?K=st:o==="avg"&&(G+=st,j++)}if(isNaN(K))break}const J=L+O*$+k;g[J]=o==="avg"?G/j:K}}}return m}function a1(n,t,e,s,r=!1,o=!1){const a=Ft(s.outShape,"int32"),i=s.strideHeight,l=s.strideWidth,c=s.dilationHeight,u=s.dilationWidth,h=s.effectiveFilterHeight,d=s.effectiveFilterWidth,p=s.padInfo.top,f=s.padInfo.left,m=Ft(t,e,n);for(let g=0;g<s.batchSize;++g)for(let y=0;y<s.inChannels;++y)for(let b=0;b<s.outHeight;++b){const $=b*i-p;let x=$;for(;x<0;)x+=c;const w=Math.min(s.inHeight,h+$);for(let C=0;C<s.outWidth;++C){const k=C*l-f;let I=k;for(;I<0;)I+=u;const S=Math.min(s.inWidth,d+k);let E=Number.NEGATIVE_INFINITY,R=-1;for(let L=x;L<w;L+=c){const O=L-$;for(let z=I;z<S;z+=u){const M=z-k,V=m.get(g,L,z,y);V>E&&(E=V,r?R=o?((g*s.inHeight+L)*s.inWidth+z)*s.inChannels+y:(L*s.inWidth+z)*s.inChannels+y:R=O*d+M)}}a.set(R,g,b,C,y)}}return a}function i1(n,t,e,s,r,o){const a=r.strideDepth,i=r.strideHeight,l=r.strideWidth,c=r.dilationDepth,u=r.dilationHeight,h=r.dilationWidth,d=r.effectiveFilterDepth,p=r.effectiveFilterHeight,f=r.effectiveFilterWidth,m=r.padInfo.front,g=r.padInfo.top,y=r.padInfo.left,b=o==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,$=Ft(r.outShape,e),x=$.values,w=r.outShape[1]*r.outShape[2]*r.outShape[3]*r.outShape[4],C=r.outShape[2]*r.outShape[3]*r.outShape[4],k=r.outShape[3]*r.outShape[4],I=r.outShape[4];for(let S=0;S<r.batchSize;++S){const E=S*w,R=S*s[0];for(let L=0;L<r.inChannels;++L)for(let O=0;O<r.outDepth;++O){const z=O*a-m;let M=z;for(;M<0;)M+=c;const V=Math.min(r.inDepth,d+z),K=E+O*C;for(let G=0;G<r.outHeight;++G){const j=G*i-g;let J=j;for(;J<0;)J+=u;const Z=Math.min(r.inHeight,p+j),tt=K+G*k;for(let Q=0;Q<r.outWidth;++Q){const et=Q*l-y;let st=et;for(;st<0;)st+=h;const rt=Math.min(r.inWidth,f+et),at=tt+Q*I;let ht=b,dt=0,yt=0;for(let Bt=M;Bt<V;Bt+=c){const Xt=R+Bt*s[1];for(let Yt=J;Yt<Z;Yt+=u){const jt=Xt+Yt*s[2];for(let qt=st;qt<rt;qt+=h){const Jt=jt+qt*s[3],ce=n[Jt+L];if(o==="max"&&ce>ht?ht=ce:o==="avg"&&(dt+=ce,yt++),isNaN(ht))break}if(isNaN(ht))break}if(isNaN(ht))break}const It=at+L;x[It]=o==="avg"?dt/yt:ht}}}}return $}function bR(n,t){const e=Ft(t.outShape,"int32"),s=t.strideDepth,r=t.strideHeight,o=t.strideWidth,a=t.dilationDepth,i=t.dilationHeight,l=t.dilationWidth,c=t.effectiveFilterDepth,u=t.effectiveFilterHeight,h=t.effectiveFilterWidth,d=t.padInfo.front,p=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){const b=y*s-d;let $=b;for(;$<0;)$+=a;const x=Math.min(t.inDepth,c+b);for(let w=0;w<t.outHeight;++w){const C=w*r-p;let k=C;for(;k<0;)k+=i;const I=Math.min(t.inHeight,u+C);for(let S=0;S<t.outWidth;++S){const E=S*o-f;let R=E;for(;R<0;)R+=l;const L=Math.min(t.inWidth,h+E);let O=Number.NEGATIVE_INFINITY,z=-1;for(let M=$;M<x;M+=a){const V=M-b;for(let K=k;K<I;K+=i){const G=K-C;for(let j=R;j<L;j+=l){const J=j-E,Z=n.get(m,M,K,j,g);Z>=O&&(O=Z,z=V*u*h+G*u+J)}}}e.set(z,m,y,w,S,g)}}}return e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xR(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t;it(r,"avgPool");const{filterSize:o,strides:a,pad:i,dimRoundingMode:l}=s,c=1;N(He(a,c),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${c}'`);const u=_n(r.shape,o,a,c,i,l);let h;if(u.filterWidth===1&&u.filterHeight===1&&Gt(u.inShape,u.outShape))h=is({inputs:{x:r},backend:e});else{const d=e.data.get(r.dataId).values,p=ft(r.shape),f=af(d,r.shape,r.dtype,p,u,"avg");h=e.makeTensorInfo(u.outShape,r.dtype,f.values)}return h}const wR={kernelName:kl,backendName:"cpu",kernelFunc:xR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vR(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{filterSize:o,strides:a,pad:i,dimRoundingMode:l,dataFormat:c}=s;it(r,"avgPool3d");const u=vs(r.shape,o,a,1,i,l,c),h=e.data.get(r.dataId).values,d=i1(h,r.shape,r.dtype,ft(r.shape),u,"avg");return e.makeTensorInfo(d.shape,"float32",d.values)}const $R={kernelName:Cl,backendName:"cpu",kernelFunc:vR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kR(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,input:o}=t,{filterSize:a,strides:i,pad:l,dimRoundingMode:c}=s;it([r,o],"avgPool3DGrad");const u=vs(o.shape,a,i,1,l,c),h=u.strideDepth,d=u.strideHeight,p=u.strideWidth,f=u.filterDepth,m=u.filterHeight,g=u.filterWidth,y=u.dilationDepth,b=u.dilationHeight,$=u.dilationWidth,x=u.effectiveFilterDepth,w=u.effectiveFilterHeight,C=u.effectiveFilterWidth,k=x-1-u.padInfo.front,I=C-1-u.padInfo.left,S=w-1-u.padInfo.top,E=Ft(o.shape,"float32"),R=1/(f*m*g),L=e.bufferSync(r);for(let O=0;O<u.batchSize;++O)for(let z=0;z<u.inChannels;++z)for(let M=0;M<u.inDepth;++M)for(let V=0;V<u.inHeight;++V)for(let K=0;K<u.inWidth;++K){const G=M-k,j=V-S,J=K-I;let Z=0;for(let tt=0;tt<x;tt+=y){const Q=(G+tt)/h;if(!(Q<0||Q>=u.outDepth||Math.floor(Q)!==Q))for(let et=0;et<w;et+=b){const st=(j+et)/d;if(!(st<0||st>=u.outHeight||Math.floor(st)!==st))for(let rt=0;rt<C;rt+=$){const at=(J+rt)/p;if(at<0||at>=u.outWidth||Math.floor(at)!==at)continue;const ht=L.get(O,Q,st,at,z);Z+=ht}}}E.set(Z*R,O,M,V,K,z)}return e.makeTensorInfo(E.shape,E.dtype,E.values)}const CR={kernelName:Rh,backendName:"cpu",kernelFunc:kR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NR(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,input:o}=t,a=o;it([r,o],"avgPoolGrad");const{filterSize:i,strides:l,pad:c}=s,u=_n(a.shape,i,l,1,c),h=u.strideHeight,d=u.strideWidth,p=u.filterHeight,f=u.filterWidth,m=u.dilationHeight,g=u.dilationWidth,y=u.effectiveFilterHeight,b=u.effectiveFilterWidth,$=b-1-u.padInfo.left,x=y-1-u.padInfo.top,w=Ft(a.shape,"float32"),C=1/(p*f),k=e.data.get(r.dataId).values,I=Ft(r.shape,"float32",k);for(let S=0;S<u.batchSize;++S)for(let E=0;E<u.inChannels;++E)for(let R=0;R<u.inHeight;++R)for(let L=0;L<u.inWidth;++L){const O=R-x,z=L-$;let M=0;for(let V=0;V<y;V+=m){const K=(O+V)/h;if(!(K<0||K>=u.outHeight||Math.floor(K)!==K))for(let G=0;G<b;G+=g){const j=(z+G)/d;if(j<0||j>=u.outWidth||Math.floor(j)!==j)continue;const J=I.get(S,K,j,E);M+=J}}w.set(M*C,S,R,L,E)}return e.makeTensorInfo(w.shape,w.dtype,w.values)}const IR={kernelName:Dh,backendName:"cpu",kernelFunc:NR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SR(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,scale:o,offset:a,mean:i,variance:l}=t;N(i.shape.length===l.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),N(a==null||i.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),N(o==null||i.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),it([r,i,l,o,a],"batchNorm");let{varianceEpsilon:c}=s;c==null&&(c=.001);const u=e.data.get(r.dataId).values,h=e.data.get(i.dataId).values,d=e.data.get(l.dataId).values,p=o?e.data.get(o.dataId).values:new Float32Array([1]),f=a?e.data.get(a.dataId).values:new Float32Array([0]),m=new Float32Array(u.length),g=f.length,y=p.length,b=d.length,$=h.length;let x=0,w=0,C=0,k=0;for(let I=0;I<u.length;++I)m[I]=f[x++]+(u[I]-h[w++])*p[C++]/Math.sqrt(d[k++]+c),x>=g&&(x=0),w>=$&&(w=0),C>=y&&(C=0),k>=b&&(k=0);return e.makeTensorInfo(r.shape,r.dtype,m)}const TR={kernelName:Pl,backendName:"cpu",kernelFunc:SR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ER(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{blockShape:o,crops:a}=s;it([r],"batchToSpaceND");const i=o.reduce((y,b)=>y*b),l=Ha(r.shape,o,i),c=ja(l.length,o.length),u=qa(r.shape,o,i),h=yp(a,o.length),d=bp(u,a,o.length),p=le({inputs:{x:r},backend:e,attrs:{shape:l}}),f=On({inputs:{x:p},backend:e,attrs:{perm:c}}),m=le({inputs:{x:f},backend:e,attrs:{shape:u}}),g=gr({inputs:{x:m},backend:e,attrs:{begin:h,size:d}});return e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(m),g}const AR={kernelName:Il,backendName:"cpu",kernelFunc:ER};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DR(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,weights:o}=t,{size:a}=s,i=e.data.get(r.dataId).values,l=e.data.get(o.dataId).values,c=tf(i,l,o.dtype,o.shape,a);return e.makeTensorInfo([a],o.dtype,c)}const RR={kernelName:Fh,backendName:"cpu",kernelFunc:DR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FR=Ht(Ko,(n,t)=>{const e=t;return n>e.clipValueMax?e.clipValueMax:n<e.clipValueMin?e.clipValueMin:n}),OR={kernelName:Ko,backendName:"cpu",kernelFunc:FR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _R=n=>{const{x:t}=n.inputs,e=n.backend,s=new Float32Array(H(t.shape)),r=e.data.get(t.dataId),o=r.complexTensorInfos.real,a=r.complexTensorInfos.imag,i=e.data.get(o.dataId).values,l=e.data.get(a.dataId).values;for(let c=0;c<i.length;c++){const u=i[c],h=l[c];s[c]=Math.hypot(u,h)}return e.makeOutput(s,t.shape,"float32")},LR={kernelName:Sl,backendName:"cpu",kernelFunc:_R};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jr(n){const{inputs:t,backend:e}=n,{input:s}=t,r=e.data.get(s.dataId).complexTensorInfos.imag,o=e.data.get(r.dataId).values;return e.makeTensorInfo(r.shape,r.dtype,o)}const PR={kernelName:Xh,backendName:"cpu",kernelFunc:jr};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qr(n){const{inputs:t,backend:e,attrs:s}=n,{axis:r}=s,o=Et(r,t[0].shape)[0];let a=gs(t.map(m=>m.shape),o);if(H(a)===0)return e.makeTensorInfo(a,t[0].dtype,[]);const i=t.filter(m=>H(m.shape)>0);if(i.length===1)return is({inputs:{x:i[0]},backend:e});const l=i.map(m=>m.shape);if(fp(l,o),i[0].dtype==="complex64"){const m=i.map(x=>mr({inputs:{input:x},backend:e})),g=i.map(x=>jr({inputs:{input:x},backend:e})),y=qr({inputs:m,backend:e,attrs:{axis:o}}),b=qr({inputs:g,backend:e,attrs:{axis:o}}),$=cn({inputs:{real:y,imag:b},backend:e});return m.forEach(x=>e.disposeIntermediateTensorInfo(x)),g.forEach(x=>e.disposeIntermediateTensorInfo(x)),e.disposeIntermediateTensorInfo(y),e.disposeIntermediateTensorInfo(b),$}const c=i.map(m=>{const y=[-1,H(m.shape.slice(o))];return le({inputs:{x:m},backend:e,attrs:{shape:y}})}),u=c.map(m=>({vals:e.data.get(m.dataId).values,shape:m.shape}));a=gs(c.map(m=>m.shape),1);const h=c[0].shape[0]===1,d=E0(u,a,t[0].dtype,h),p=gs(i.map(m=>m.shape),o),f=e.makeTensorInfo(p,t[0].dtype,d);return c.forEach(m=>e.disposeIntermediateTensorInfo(m)),f}const zR={kernelName:Tl,backendName:"cpu",kernelFunc:qr};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l1(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,filter:o}=t,{strides:a,pad:i,dataFormat:l,dilations:c,dimRoundingMode:u}=s;it([r,o],"conv2d");const h=$s(l),d=Pe(r.shape,o.shape,a,c,i,u,!1,h),p=d.filterHeight,f=d.filterWidth,m=d.dilationHeight,g=d.dilationWidth,y=d.padInfo.left,b=d.padInfo.top,$=d.dataFormat==="channelsLast",x=new _e(d.outShape,r.dtype),w=ft(r.shape),C=ft(o.shape),k=w[0],I=$?w[1]:w[2],S=$?w[2]:1,E=$?1:w[1],R=x.strides[0],L=$?x.strides[1]:x.strides[2],O=$?x.strides[2]:1,z=$?1:x.strides[1],M=e.data.get(r.dataId).values,V=e.data.get(o.dataId).values,K=x.values;for(let G=0;G<d.batchSize;++G){const j=G*k,J=G*R;for(let Z=0;Z<d.outHeight;++Z){const tt=J+Z*L,Q=Z*d.strideHeight-b;for(let et=0;et<p;++et){const st=Q+et*m;if(st<0||st>=d.inHeight)continue;const rt=et*C[0],at=j+st*I;for(let ht=0;ht<d.outWidth;++ht){const dt=tt+ht*O,yt=ht*d.strideWidth-y;for(let It=0;It<f;++It){const Bt=yt+It*g;if(Bt<0||Bt>=d.inWidth)continue;const Xt=rt+It*C[1],Yt=at+Bt*S;let jt=Xt;for(let qt=0;qt<d.inChannels;++qt){const Jt=M[Yt+qt*E];for(let ce=0;ce<d.outChannels;++ce)K[dt+ce*z]+=Jt*V[jt+ce];jt+=d.outChannels}}}}}}return e.makeTensorInfo(x.shape,x.dtype,K)}const BR={kernelName:El,backendName:"cpu",kernelFunc:l1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MR(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,dy:o}=t,{strides:a,pad:i,dataFormat:l,dimRoundingMode:c,filterShape:u}=s;it([r,o],"conv2dBackpropFilter");const h=$s(l),d=Pe(r.shape,u,a,1,i,c,!1,h),{strideHeight:p,strideWidth:f,filterHeight:m,filterWidth:g}=d,y=d.dataFormat==="channelsLast",b=new _e(d.filterShape,"float32"),$=d.padInfo.left,x=d.padInfo.top,w=e.data.get(r.dataId).values,C=e.data.get(o.dataId).values,k=new _e(r.shape,r.dtype,w),I=new _e(o.shape,o.dtype,C);for(let S=0;S<m;++S){const E=Math.max(0,Math.ceil((x-S)/p)),R=Math.min(d.outHeight,(d.inHeight+x-S)/p);for(let L=0;L<g;++L){const O=Math.max(0,Math.ceil(($-L)/f)),z=Math.min(d.outWidth,(d.inWidth+$-L)/f);for(let M=0;M<d.inChannels;++M)for(let V=0;V<d.outChannels;++V){let K=0;for(let G=0;G<d.batchSize;++G)for(let j=E;j<R;++j){const J=S+j*p-x;for(let Z=O;Z<z;++Z){const tt=L+Z*f-$;y?K+=k.get(G,J,tt,M)*I.get(G,j,Z,V):K+=k.get(G,M,J,tt)*I.get(G,V,j,Z)}}b.set(K,S,L,M,V)}}}return e.makeTensorInfo(b.shape,b.dtype,b.values)}const VR={kernelName:_h,backendName:"cpu",kernelFunc:MR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WR(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,filter:o}=t,{inputShape:a,strides:i,pad:l,dataFormat:c,dimRoundingMode:u}=s;it([r,o],"conv2dBackpropInput");const h=ft(o.shape),d=ft(r.shape);let p=$s(c);const f=Pe(a,o.shape,i,1,l,u,!1,p),m=new _e(f.inShape,"float32"),g=m.values,y=e.data.get(r.dataId).values,b=e.data.get(o.dataId).values,[$,x,w]=h,{batchSize:C,filterHeight:k,filterWidth:I,inChannels:S,inHeight:E,inWidth:R,outChannels:L,outHeight:O,outWidth:z,strideHeight:M,strideWidth:V}=f;p=f.dataFormat;const K=k-1-f.padInfo.top,G=I-1-f.padInfo.left,j=p==="channelsLast",J=m.strides[0],Z=j?m.strides[1]:m.strides[2],tt=j?m.strides[2]:1,Q=j?1:m.strides[1],et=d[0],st=j?d[1]:d[2],rt=j?d[2]:1,at=j?1:d[1];for(let ht=0;ht<C;++ht)for(let dt=0;dt<S;++dt)for(let yt=0;yt<E;++yt){const It=yt-K,Bt=Math.max(0,Math.ceil(It/M)),Xt=Math.min(O,(k+It)/M);for(let Yt=0;Yt<R;++Yt){const jt=Yt-G,qt=Math.max(0,Math.ceil(jt/V)),Jt=Math.min(z,(I+jt)/V);let ce=0;for(let me=Bt;me<Xt;++me){const Ae=me*M-It;for(let en=qt;en<Jt;++en){const hs=en*V-jt,fn=et*ht+st*me+rt*en,vn=$*(k-1-Ae)+x*(I-1-hs)+w*dt;for(let Zn=0;Zn<L;++Zn){const Pn=y[fn+at*Zn],q=b[vn+Zn];ce+=Pn*q}}}const Ye=J*ht+Z*yt+tt*Yt+Q*dt;g[Ye]=ce}}return e.makeTensorInfo(m.shape,m.dtype,m.values)}const UR={kernelName:Al,backendName:"cpu",kernelFunc:WR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GR(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,filter:o}=t,{strides:a,pad:i,dilations:l}=s;it([r,o],"conv3d");const c=Us(r.shape,o.shape,a,l,i),{filterDepth:u,filterHeight:h,filterWidth:d,dilationDepth:p,dilationHeight:f,dilationWidth:m,padInfo:g}=c,y=g.front,b=g.left,$=g.top,x=new _e(c.outShape,r.dtype),w=e.data.get(r.dataId).values,C=e.data.get(o.dataId).values,k=x.values,I=ft(r.shape),S=ft(o.shape);for(let E=0;E<c.batchSize;++E){const R=E*I[0],L=E*x.strides[0];for(let O=0;O<c.outDepth;++O){const z=L+O*x.strides[1],M=O*c.strideDepth-y;for(let V=0;V<u;++V){const K=M+V*p;if(K<0||K>=c.inDepth)continue;const G=V*S[0],j=R+K*I[1];for(let J=0;J<c.outHeight;++J){const Z=z+J*x.strides[2],tt=J*c.strideHeight-$;for(let Q=0;Q<h;++Q){const et=tt+Q*f;if(et<0||et>=c.inHeight)continue;const st=G+Q*S[1],rt=j+et*I[2];for(let at=0;at<c.outWidth;++at){const ht=Z+at*c.outChannels,dt=at*c.strideWidth-b;for(let yt=0;yt<d;++yt){const It=dt+yt*m;if(It<0||It>=c.inWidth)continue;const Bt=st+yt*S[2],Xt=rt+It*c.inChannels;let Yt=Bt;for(let jt=0;jt<c.inChannels;++jt){const qt=w[Xt+jt];for(let Jt=0;Jt<c.outChannels;++Jt)k[ht+Jt]+=qt*C[Yt+Jt];Yt+=c.outChannels}}}}}}}}return e.makeTensorInfo(x.shape,x.dtype,x.values)}const HR={kernelName:Dl,backendName:"cpu",kernelFunc:GR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jR(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,dy:o}=t,{strides:a,pad:i,filterShape:l}=s;it([r,o],"conv3dBackpropFilterV2");const c=ft(r.shape),u=ft(o.shape),h=Us(r.shape,l,a,1,i),d=h.strideDepth,p=h.strideHeight,f=h.strideWidth,m=h.filterDepth,g=h.filterHeight,y=h.filterWidth,b=new _e(h.filterShape,"float32"),$=b.values,[x,w,C,k]=b.strides,I=e.data.get(o.dataId).values,[S,E,R,L]=u,O=e.data.get(r.dataId).values,[z,M,V,K]=c,G=h.padInfo.front,j=h.padInfo.left,J=h.padInfo.top;for(let Z=0;Z<m;++Z){const tt=Math.max(0,Math.ceil((G-Z)/d)),Q=Math.min(h.outDepth,(h.inDepth+G-Z)/d),et=Z*x;for(let st=0;st<g;++st){const rt=Math.max(0,Math.ceil((J-st)/p)),at=Math.min(h.outHeight,(h.inHeight+J-st)/p),ht=st*w+et;for(let dt=0;dt<y;++dt){const yt=Math.max(0,Math.ceil((j-dt)/f)),It=Math.min(h.outWidth,(h.inWidth+j-dt)/f),Bt=dt*C+ht;for(let Xt=0;Xt<h.inChannels;++Xt){const Yt=Xt*k+Bt;for(let jt=0;jt<h.outChannels;++jt){let qt=0;for(let Jt=0;Jt<h.batchSize;++Jt){const ce=Jt*z,Ye=Jt*S;for(let me=tt;me<Q;++me){const en=(Z+me*d-G)*M+ce,hs=me*E+Ye;for(let fn=rt;fn<at;++fn){const Zn=(st+fn*p-J)*V+en,Pn=fn*R+hs;for(let q=yt;q<It;++q){const St=(dt+q*f-j)*K+Zn,At=q*L+Pn;qt+=O[St+Xt]*I[At+jt]}}}}$[Yt+jt]=qt}}}}}return e.makeTensorInfo(b.shape,b.dtype,b.values)}const qR={kernelName:Lh,backendName:"cpu",kernelFunc:jR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KR(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,filter:o}=t,{pad:a,strides:i,inputShape:l}=s;it([r],"conv3dBackpropInputV2");const c=ft(r.shape),u=ft(o.shape),h=Us(l,o.shape,i,1,a),d=new _e(h.inShape,"float32"),p=d.values,[f,m,g,y]=d.strides,b=e.data.get(r.dataId).values,[$,x,w,C]=c,k=e.data.get(o.dataId).values,[I,S,E,R]=u,{batchSize:L,filterDepth:O,filterHeight:z,filterWidth:M,inChannels:V,inDepth:K,inHeight:G,inWidth:j,outChannels:J,outDepth:Z,outHeight:tt,outWidth:Q,strideDepth:et,strideHeight:st,strideWidth:rt}=h,at=O-1-h.padInfo.front,ht=z-1-h.padInfo.top,dt=M-1-h.padInfo.left;for(let yt=0;yt<L;++yt)for(let It=0;It<V;++It)for(let Bt=0;Bt<K;++Bt){const Xt=Bt-at,Yt=Math.max(0,Math.ceil(Xt/et)),jt=Math.min(Z,(O+Xt)/et);for(let qt=0;qt<G;++qt){const Jt=qt-ht,ce=Math.max(0,Math.ceil(Jt/st)),Ye=Math.min(tt,(z+Jt)/st);for(let me=0;me<j;++me){const Ae=me-dt,en=Math.max(0,Math.ceil(Ae/rt)),hs=Math.min(Q,(M+Ae)/rt);let fn=0;for(let vn=Yt;vn<jt;++vn){const Zn=vn*et-Xt;for(let Pn=ce;Pn<Ye;++Pn){const q=Pn*st-Jt;for(let W=en;W<hs;++W){const St=W*rt-Ae,At=$*yt+x*vn+w*Pn+C*W,Mt=I*(O-1-Zn)+S*(z-1-q)+E*(M-1-St)+R*It;for(let Pt=0;Pt<J;++Pt){const zt=b[At+Pt],Vt=k[Mt+Pt];fn+=zt*Vt}}}}p[f*yt+m*Bt+g*qt+y*me+It]=fn}}}return e.makeTensorInfo(d.shape,d.dtype,d.values)}const XR={kernelName:Ph,backendName:"cpu",kernelFunc:KR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YR=Ht(Xo,n=>Math.cos(n)),JR={kernelName:Xo,backendName:"cpu",kernelFunc:YR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZR=Ht(Yo,n=>Math.cosh(n)),QR={kernelName:Yo,backendName:"cpu",kernelFunc:ZR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tF(n){const{inputs:t,backend:e,attrs:s}=n,{image:r,boxes:o,boxInd:a}=t,{cropSize:i,method:l,extrapolationValue:c}=s,[u,h,d,p]=r.shape,f=o.shape[0],[m,g]=i,y=Ft([f,m,g,p],"float32"),b=e.data.get(o.dataId).values,$=e.data.get(a.dataId).values,x=e.data.get(r.dataId).values,w=ft(r.shape),C=ft(y.shape);for(let k=0;k<f;k++){const I=k*4,S=b[I],E=b[I+1],R=b[I+2],L=b[I+3],O=$[k];if(O>=u)continue;const z=m>1?(R-S)*(h-1)/(m-1):0,M=g>1?(L-E)*(d-1)/(g-1):0;for(let V=0;V<m;V++){const K=m>1?S*(h-1)+V*z:.5*(S+R)*(h-1);if(K<0||K>h-1){for(let G=0;G<g;G++)for(let j=0;j<p;j++){const J=j+G*C[2]+V*C[1]+k*C[0];y.values[J]=c}continue}if(l==="bilinear"){const G=Math.floor(K),j=Math.ceil(K),J=K-G;for(let Z=0;Z<g;Z++){const tt=g>1?E*(d-1)+Z*M:.5*(E+L)*(d-1);if(tt<0||tt>d-1){for(let rt=0;rt<p;rt++){const at=rt+Z*C[2]+V*C[1]+k*C[0];y.values[at]=c}continue}const Q=Math.floor(tt),et=Math.ceil(tt),st=tt-Q;for(let rt=0;rt<p;rt++){let at=rt+Q*w[2]+G*w[1]+O*w[0];const ht=x[at];at=rt+et*w[2]+G*w[1]+O*w[0];const dt=x[at];at=rt+Q*w[2]+j*w[1]+O*w[0];const yt=x[at];at=rt+et*w[2]+j*w[1]+O*w[0];const It=x[at],Bt=ht+(dt-ht)*st,Xt=yt+(It-yt)*st;at=rt+Z*C[2]+V*C[1]+k*C[0],y.values[at]=Bt+(Xt-Bt)*J}}}else for(let G=0;G<g;++G){const j=g>1?E*(d-1)+G*M:.5*(E+L)*(d-1);if(j<0||j>d-1){for(let tt=0;tt<p;tt++){const Q=tt+G*C[2]+V*C[1]+k*C[0];y.values[Q]=c}continue}const J=Math.round(j),Z=Math.round(K);for(let tt=0;tt<p;tt++){const Q=tt+J*w[2]+Z*w[1]+O*w[0],et=tt+G*C[2]+V*C[1]+k*C[0];y.values[et]=x[Q]}}}}return e.makeTensorInfo(y.shape,y.dtype,y.values)}const eF={kernelName:zh,backendName:"cpu",kernelFunc:tF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nF(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o,exclusive:a,reverse:i}=s;it(r,"cumsum");const l=ye([o],r.shape.length);let c=r;l!=null&&(c=On({inputs:{x:r},backend:e,attrs:{perm:l}}));const u=ve(1,r.shape.length)[0];if(u!==c.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${c.shape.length-1} but got axis=${u}`);const h=yn(c.dtype,"int32"),d=Ke(H(c.shape),h),p=e.data.get(c.dataId).values,f=c.shape[c.shape.length-1],m=i?(y,b)=>y+f-b-1:(y,b)=>y+b;for(let y=0;y<p.length;y+=f)for(let b=0;b<f;b++){const $=m(y,b);if(b===0)d[$]=a?0:p[$];else{const x=m(y,b-1);d[$]=a?p[x]+d[x]:p[$]+d[x]}}const g=e.makeTensorInfo(c.shape,h,d);if(l!=null){const y=no(l),b=On({inputs:{x:g},backend:e,attrs:{perm:y}});return e.disposeIntermediateTensorInfo(g),e.disposeIntermediateTensorInfo(c),b}return g}const sF={kernelName:Rl,backendName:"cpu",kernelFunc:nF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rF(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,weights:o}=t,{size:a,binaryOutput:i}=s;if(r.shape.length===1){const l=e.data.get(r.dataId).values,c=e.data.get(o.dataId).values,u=tf(l,c,o.dtype,o.shape,a);return e.makeTensorInfo([a],o.dtype,u)}else if(r.shape.length===2){const l=e.bufferSync(r),c=e.bufferSync(o),u=S0(l,c,a,i);return e.makeTensorInfo(u.shape,o.dtype,u.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}const oF={kernelName:Bh,backendName:"cpu",kernelFunc:rF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aF(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{blockSize:o,dataFormat:a}=s;N(a==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${a}`),N(o>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${o}`);const i=r.shape[0],l=r.shape[1],c=r.shape[2],u=r.shape[3],h=l*o,d=c*o,p=u/(o*o),f=e.data.get(r.dataId).values,m=new Float32Array(i*h*d*p);let g=0;for(let y=0;y<i;++y)for(let b=0;b<h;++b){const $=Math.floor(b/o),x=b%o;for(let w=0;w<d;++w){const C=Math.floor(w/o),k=w%o,I=(x*o+k)*p;for(let S=0;S<p;++S){const R=S+I+u*(C+c*($+l*y));m[g++]=f[R]}}}return e.makeTensorInfo([i,h,d,p],r.dtype,m)}const iF={kernelName:Mh,backendName:"cpu",kernelFunc:aF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c1(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,filter:o}=t,{strides:a,pad:i,dilations:l,dimRoundingMode:c}=s;it([r,o],"depthwiseConv2DNative");const u=ft(r.shape),h=ft(o.shape);let d=l;d==null&&(d=[1,1]),N(He(a,d),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${d}'`);const p=Pe(r.shape,o.shape,a,d,i,c,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:y,padInfo:b}=p,$=b.left,x=b.top,w=p.outChannels/p.inChannels,C=new _e(p.outShape,r.dtype),k=e.data.get(r.dataId).values,I=e.data.get(o.dataId).values,S=C.values;for(let E=0;E<p.batchSize;++E){const R=E*u[0],L=E*C.strides[0];for(let O=0;O<p.outHeight;++O){const z=L+O*C.strides[1],M=O*p.strideHeight-$;for(let V=0;V<f;++V){const K=M+V*g;if(K<0||K>=p.inHeight)continue;const G=V*h[0],j=R+K*u[1];for(let J=0;J<p.outWidth;++J){const Z=z+J*C.strides[2],tt=J*p.strideWidth-x;for(let Q=0;Q<m;++Q){const et=tt+Q*y;if(et<0||et>=p.inWidth)continue;const st=G+Q*h[1],rt=j+et*p.inChannels;let at=Z,ht=st;for(let dt=0;dt<p.inChannels;++dt){const yt=k[rt+dt];for(let It=0;It<w;++It)S[at+It]+=yt*I[ht+It];at+=w,ht+=w}}}}}}return e.makeTensorInfo(C.shape,C.dtype,C.values)}const lF={kernelName:Fl,backendName:"cpu",kernelFunc:c1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cF(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,dy:o}=t,{strides:a,dilations:i,pad:l,dimRoundingMode:c,filterShape:u}=s;it([r,o],"depthwiseConv2dNativeBackpropFilter");const h=Pe(r.shape,u,a,i,l,c,!0),{strideHeight:d,strideWidth:p,filterHeight:f,filterWidth:m}=h,g=new _e(h.filterShape,"float32"),y=h.padInfo.left,b=h.padInfo.top,$=h.outChannels/h.inChannels,x=e.data.get(r.dataId).values,w=new _e(r.shape,r.dtype,x),C=e.data.get(o.dataId).values,k=new _e(o.shape,o.dtype,C);for(let I=0;I<f;++I){const S=Math.max(0,Math.ceil((b-I)/d)),E=Math.min(h.outHeight,(h.inHeight+b-I)/d);for(let R=0;R<m;++R){const L=Math.max(0,Math.ceil((y-R)/p)),O=Math.min(h.outWidth,(h.inWidth+y-R)/p);for(let z=0;z<h.outChannels;++z){const M=Math.trunc(z/$),V=z%$;let K=0;for(let G=0;G<h.batchSize;++G)for(let j=S;j<E;++j){const J=I+j*d-b;for(let Z=L;Z<O;++Z){const tt=R+Z*p-y;K+=w.get(G,J,tt,M)*k.get(G,j,Z,z)}}g.set(K,I,R,M,V)}}}return e.makeTensorInfo(g.shape,g.dtype,g.values)}const uF={kernelName:Vh,backendName:"cpu",kernelFunc:cF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hF(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,filter:o}=t,{strides:a,dilations:i,pad:l,dimRoundingMode:c,inputShape:u}=s;it([r,o],"depthwiseConv2DNativeBackpropInput");const h=ft(r.shape),d=ft(o.shape),p=Pe(u,o.shape,a,i,l,c,!0),f=new _e(p.inShape,"float32"),m=f.values,[g,y,b]=f.strides,$=e.data.get(r.dataId).values,[x,w,C]=h,k=e.data.get(o.dataId).values,[I,S,E]=d,{batchSize:R,filterHeight:L,filterWidth:O,inChannels:z,inHeight:M,inWidth:V,outChannels:K,outHeight:G,outWidth:j,strideHeight:J,strideWidth:Z}=p,tt=L-1-p.padInfo.top,Q=O-1-p.padInfo.left,et=K/z;for(let st=0;st<R;++st)for(let rt=0;rt<z;++rt)for(let at=0;at<M;++at){const ht=at-tt,dt=Math.max(0,Math.ceil(ht/J)),yt=Math.min(G,(L+ht)/J);for(let It=0;It<V;++It){const Bt=It-Q,Xt=Math.max(0,Math.ceil(Bt/Z)),Yt=Math.min(j,(O+Bt)/Z);let jt=0;for(let qt=dt;qt<yt;++qt){const Jt=qt*J-ht;for(let ce=Xt;ce<Yt;++ce){const Ye=ce*Z-Bt,me=x*st+w*qt+C*ce,Ae=I*(L-1-Jt)+S*(O-1-Ye)+E*rt;for(let en=0;en<et;++en){const hs=rt*et+en,fn=$[me+hs],vn=k[Ae+en];jt+=fn*vn}}}m[g*st+y*at+b*It+rt]=jt}}return e.makeTensorInfo(f.shape,f.dtype,f.values)}const dF={kernelName:Wh,backendName:"cpu",kernelFunc:hF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pF(n){const{inputs:t,backend:e}=n,{x:s}=t,r=H(s.shape),o=e.data.get(s.dataId).values,a=Ft([r,r],s.dtype),i=a.values;for(let c=0;c<o.length;c++)i[c*r+c]=o[c];const l=[...s.shape,...s.shape];return e.makeTensorInfo(l,a.dtype,a.values)}const fF={kernelName:Pg,backendName:"cpu",kernelFunc:pF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mF={kernelName:Ol,backendName:"cpu",kernelFunc:({inputs:n,backend:t,attrs:e})=>{const{x:s,filter:r}=n,{strides:o,pad:a,dilations:i}=e,l=t,c=l.data.get(s.dataId).values,u=s.shape.length,h=l.data.get(r.dataId).values,d=r.shape.length,{batchSize:p,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:$,strideHeight:x,strideWidth:w,filterHeight:C,filterWidth:k,dilationHeight:I,dilationWidth:S,outShape:E}=za(s.shape,r.shape,o,a,"NHWC",i),R=H(E),L=E.length,O=Jr(s.dtype,R);for(let M=0;M<p;++M)for(let V=0;V<y;++V){const K=V*x-$.top;for(let G=0;G<b;++G){const j=G*w-$.left;for(let J=0;J<g;++J){let Z=Number.MIN_SAFE_INTEGER;for(let Q=0;Q<C;++Q){const et=K+Q*I;if(et>=0&&et<f)for(let st=0;st<k;++st){const rt=j+st*S;if(rt>=0&&rt<m){const at=ss([M,et,rt,J],u,ft(s.shape)),ht=ss([Q,st,J],d,ft(r.shape)),dt=c[at]+h[ht];dt>Z&&(Z=dt)}}}const tt=ss([M,V,G,J],L,ft(E));O[tt]=Z}}}return{dataId:l.write(br(O,s.dtype),E,s.dtype),shape:E,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gF={kernelName:_u,backendName:"cpu",kernelFunc:({inputs:n,backend:t,attrs:e})=>{const{x:s,filter:r,dy:o}=n,{strides:a,pad:i,dilations:l}=e,c=t,u=Dn(s.shape,c.data.get(s.dataId).values),h=Dn(r.shape,c.data.get(r.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:$,strideWidth:x,filterHeight:w,filterWidth:C,dilationHeight:k,dilationWidth:I,outShape:S}=za(s.shape,r.shape,a,i,"NHWC",l);N(o.rank===S.length,()=>`Error in ${_u}, dy must have the same rank as output ${S.length}, but got ${o.rank}`);const E=Dn(S,c.data.get(o.dataId).values),R=Fg(r.shape,r.dtype);for(let O=0;O<d;++O)for(let z=0;z<g;++z){const M=z*$-b.top;for(let V=0;V<y;++V){const K=V*x-b.left;for(let G=0;G<m;++G){let j=Number.MIN_SAFE_INTEGER,J=0,Z=0;for(let tt=0;tt<w;++tt){const Q=M+tt*k;if(Q>=0&&Q<p)for(let et=0;et<C;++et){const st=K+et*I;if(st>=0&&st<f){const rt=u[O][Q][st][G]+h[tt][et][G];rt>j&&(j=rt,J=tt,Z=et)}}}R[J][Z][G]+=E[O][z][V][G]}}}return{dataId:c.write(br(R,s.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yF={kernelName:Ou,backendName:"cpu",kernelFunc:({inputs:n,backend:t,attrs:e})=>{const{x:s,filter:r,dy:o}=n,{strides:a,pad:i,dilations:l}=e,c=t,u=Dn(s.shape,c.data.get(s.dataId).values),h=Dn(r.shape,c.data.get(r.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:$,strideWidth:x,filterHeight:w,filterWidth:C,dilationHeight:k,dilationWidth:I,outShape:S}=za(s.shape,r.shape,a,i,"NHWC",l);N(o.rank===S.length,()=>`Error in ${Ou}, dy must have the same rank as output ${S.length}, but got ${o.rank}`);const E=Dn(S,c.data.get(o.dataId).values),R=Fg(s.shape,s.dtype);for(let O=0;O<d;++O)for(let z=0;z<g;++z){const M=z*$-b.top;for(let V=0;V<y;++V){const K=V*x-b.left;for(let G=0;G<m;++G){let j=Number.MIN_SAFE_INTEGER,J=M<0?0:M,Z=K<0?0:K;for(let tt=0;tt<w;++tt){const Q=M+tt*k;if(Q>=0&&Q<p)for(let et=0;et<C;++et){const st=K+et*I;if(st>=0&&st<f){const rt=u[O][Q][st][G]+h[tt][et][G];rt>j&&(j=rt,J=Q,Z=st)}}}R[O][J][Z][G]+=E[O][z][V][G]}}}return{dataId:c.write(br(R,s.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bF(n){const{inputs:t,backend:e}=n,{dy:s,y:r}=t;it([s,r],"eluGrad");const o=new Float32Array(H(r.shape)),a=e.data.get(r.dataId).values,i=e.data.get(s.dataId).values;for(let l=0;l<a.length;++l){const c=a[l];c>=1?o[l]=i[l]:o[l]=i[l]*(c+1)}return e.makeTensorInfo(r.shape,"float32",o)}const xF={kernelName:Uh,backendName:"cpu",kernelFunc:bF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wF=$e((n,t)=>n===t?1:0),u1=Be(_l,wF,null,"bool"),vF={kernelName:_l,backendName:"cpu",kernelFunc:u1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $F=xp,kF=wp,CF=vp,NF=$p,IF=kp,SF=Cp,TF=Ht(Qo,n=>{const t=Math.sign(n),e=Math.abs(n),s=1/(1+$F*e);return t*(1-((((SF*s+IF)*s+NF)*s+CF)*s+kF)*s*Math.exp(-e*e))}),EF={kernelName:Qo,backendName:"cpu",kernelFunc:TF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pl(n){const{inputs:t,backend:e,attrs:s}=n,{input:r}=t,{dim:o}=s,a=r.shape.length,i=r.shape.slice();let l=o;return o<0&&(N(-(a+1)<=o,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),l=a+o+1),i.splice(l,0,1),le({inputs:{x:r},backend:e,attrs:{shape:i}})}const AF={kernelName:Ll,backendName:"cpu",kernelFunc:pl};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DF=$e((n,t)=>n/t),lf=Be(Jo,DF),bh={kernelName:Jo,backendName:"cpu",kernelFunc:lf};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h1(n,t,e){const s=n.shape,r=s[0],o=s[1],a=e.data.get(n.dataId),i=a.complexTensorInfos.real,l=a.complexTensorInfos.imag,c=[r,o],u=H(c),h=Ge("float32",u),d=Ge("float32",u);for(let g=0;g<r;g++){const y=gr({inputs:{x:i},backend:e,attrs:{begin:[g,0],size:[1,o]}}),b=gr({inputs:{x:l},backend:e,attrs:{begin:[g,0],size:[1,o]}}),$=cn({inputs:{real:y,imag:b},backend:e}),{real:x,imag:w}=RF($,t,e),C=ws(x,w);for(let k=0;k<o;k++){const I=Np(C,k);h[g*o+k]=I.real,d[g*o+k]=I.imag}e.disposeIntermediateTensorInfo(y),e.disposeIntermediateTensorInfo(b),e.disposeIntermediateTensorInfo($)}const p=e.makeTensorInfo(c,"float32",h),f=e.makeTensorInfo(c,"float32",d),m=cn({inputs:{real:p,imag:f},backend:e});return e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(f),m}function RF(n,t,e){const s=H(n.shape),r=e.data.get(n.dataId),o=e.data.get(r.complexTensorInfos.real.dataId).values,a=e.data.get(r.complexTensorInfos.imag.dataId).values;if(FF(s)){const i=xh(o,a,s,t,e),l=[n.shape[0],n.shape[1]];if(t){const c=e.makeTensorInfo(l,"float32",i.real),u=e.makeTensorInfo(l,"float32",i.imag),h=e.makeTensorInfo([],"float32",Ws(s,"float32")),d=is({inputs:{x:h},backend:e}),p=bh.kernelFunc({inputs:{a:c,b:h},backend:e}),f=bh.kernelFunc({inputs:{a:u,b:d},backend:e}),m=e.data.get(p.dataId).values,g=e.data.get(f.dataId).values;return e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(u),e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(f),{real:m,imag:g}}return i}else{const i=ws(o,a),l=OF(i,s,t);return ab(l)}}function FF(n){return(n&n-1)===0}function xh(n,t,e,s,r){if(e===1)return{real:n,imag:t};const o=ws(n,t),a=e/2,i=ib(o),l=i.real,c=i.imag,u=[l.length],h=r.makeTensorInfo(u,"float32",l),d=r.makeTensorInfo(u,"float32",c),p=cn({inputs:{real:h,imag:d},backend:r}),f=lb(o),m=f.real,g=f.imag,y=[m.length],b=r.makeTensorInfo(y,"float32",m),$=r.makeTensorInfo(y,"float32",g),x=cn({inputs:{real:b,imag:$},backend:r}),w=xh(l,c,a,s,r),C=w.real,k=w.imag,I=[C.length],S=r.makeTensorInfo(I,"float32",C),E=r.makeTensorInfo(I,"float32",k),R=cn({inputs:{real:S,imag:E},backend:r}),L=xh(m,g,a,s,r),O=L.real,z=L.imag,M=[O.length],V=r.makeTensorInfo(M,"float32",O),K=r.makeTensorInfo(M,"float32",z),G=cn({inputs:{real:V,imag:K},backend:r}),j=ub(e,s),J=[j.real.length],Z=r.makeTensorInfo(J,"float32",j.real),tt=r.makeTensorInfo(J,"float32",j.imag),Q=cn({inputs:{real:Z,imag:tt},backend:r}),et=nf({inputs:{a:Q,b:G},backend:r}),st=ni({inputs:{a:R,b:et},backend:r}),rt=rf({inputs:{a:R,b:et},backend:r}),at=mr({inputs:{input:st},backend:r}),ht=mr({inputs:{input:rt},backend:r}),dt=jr({inputs:{input:st},backend:r}),yt=jr({inputs:{input:rt},backend:r}),It=qr({inputs:[at,ht],backend:r,attrs:{axis:0}}),Bt=qr({inputs:[dt,yt],backend:r,attrs:{axis:0}}),Xt=r.data.get(It.dataId).values,Yt=r.data.get(Bt.dataId).values;return r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(d),r.disposeIntermediateTensorInfo(p),r.disposeIntermediateTensorInfo(b),r.disposeIntermediateTensorInfo($),r.disposeIntermediateTensorInfo(x),r.disposeIntermediateTensorInfo(S),r.disposeIntermediateTensorInfo(E),r.disposeIntermediateTensorInfo(R),r.disposeIntermediateTensorInfo(V),r.disposeIntermediateTensorInfo(K),r.disposeIntermediateTensorInfo(G),r.disposeIntermediateTensorInfo(Z),r.disposeIntermediateTensorInfo(tt),r.disposeIntermediateTensorInfo(Q),r.disposeIntermediateTensorInfo(et),r.disposeIntermediateTensorInfo(st),r.disposeIntermediateTensorInfo(rt),r.disposeIntermediateTensorInfo(at),r.disposeIntermediateTensorInfo(dt),r.disposeIntermediateTensorInfo(ht),r.disposeIntermediateTensorInfo(yt),r.disposeIntermediateTensorInfo(It),r.disposeIntermediateTensorInfo(Bt),{real:Xt,imag:Yt}}function OF(n,t,e){const s=new Float32Array(t*2);for(let r=0;r<t;r++){let o=0,a=0;for(let i=0;i<t;i++){const l=hb(r*i,t,e),c=Np(n,i);o+=c.real*l.real-c.imag*l.imag,a+=c.real*l.imag+c.imag*l.real}e&&(o/=t,a/=t),cb(s,o,a,r)}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _F(n){const{inputs:t,backend:e}=n,{input:s}=t,r=H(s.shape),o=s.shape[s.shape.length-1],a=r/o,i=le({inputs:{x:s},backend:e,attrs:{shape:[a,o]}}),l=h1(i,!1,e),c=le({inputs:{x:l},backend:e,attrs:{shape:s.shape}});return e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(l),c}const LF={kernelName:Gh,backendName:"cpu",kernelFunc:_F};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cf(n){const{backend:t,attrs:e}=n,{shape:s,value:r,dtype:o}=e,a=o||Po(r),i=Jr(a,H(s));return zF(i,r,a),t.makeTensorInfo(s,a,i)}const PF={kernelName:Hh,backendName:"cpu",kernelFunc:cf};function zF(n,t,e){n.fill(t)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BF={kernelName:jh,backendName:"cpu",kernelFunc:({inputs:n,attrs:t,backend:e})=>{const{image:s}=n,r=e,o=Ge(s.dtype,H(s.shape)),[a,i,l,c]=s.shape,u=r.data.get(s.dataId).values;for(let d=0;d<a;d++){const p=d*l*i*c;for(let f=0;f<i;f++){const m=f*(l*c);for(let g=0;g<l;g++){const y=g*c;for(let b=0;b<c;b++){const x=[a,f,g,b][2],w=Math.round(l-x),C=p+m+y+b;let k=u[C];if(w>=0&&w<l){const I=w*c,S=p+m+I+b;k=u[S]}o[C]=k}}}}return{dataId:r.write(o,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MF=$e((n,t)=>Math.floor(n/t)),VF=Be(sa,MF,null,"int32"),WF={kernelName:sa,backendName:"cpu",kernelFunc:VF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UF(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,filter:o,bias:a,preluActivationWeights:i}=t,{strides:l,pad:c,dataFormat:u,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=s;let m=l1({inputs:{x:r,filter:o},backend:e,attrs:{strides:l,pad:c,dataFormat:u,dilations:h,dimRoundingMode:d}});if(a){const g=m;m=ni({inputs:{a:m,b:a},backend:e}),e.disposeIntermediateTensorInfo(g)}if(p){const g=m;m=of(e,m,p,i,f),e.disposeIntermediateTensorInfo(g)}return m}const GF={kernelName:Hi,backendName:"cpu",kernelFunc:UF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HF(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,filter:o,bias:a,preluActivationWeights:i}=t,{strides:l,pad:c,dataFormat:u,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=s;let m=c1({inputs:{x:r,filter:o},backend:e,attrs:{strides:l,pad:c,dataFormat:u,dilations:h,dimRoundingMode:d}});if(a){const g=m;m=ni({inputs:{a:m,b:a},backend:e}),e.disposeIntermediateTensorInfo(g)}if(p){const g=m;m=of(e,m,p,i,f),e.disposeIntermediateTensorInfo(g)}return m}const jF={kernelName:ji,backendName:"cpu",kernelFunc:HF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qF(n){const{inputs:t,backend:e}=n,{params:s,indices:r}=t,o=H(s.shape),a=r.shape,i=a[a.length-1],[l,c,u,h]=kd(s,r);if(c===0)return e.makeTensorInfo(l,s.dtype,[]);const d=Ft([c,u],s.dtype),p=e.data.get(r.dataId).values,f=e.data.get(s.dataId).values;for(let m=0;m<c;m++){const g=[];let y=0;for(let b=0;b<i;b++){const $=p[m*i+b];y+=$*h[b],g.push($)}if(y<0||y>=o/u)throw new Error(`Invalid indices: ${g} does not index into ${s.shape}`);for(let b=0;b<u;b++)d.values[m*u+b]=f[y*u+b]}return e.makeTensorInfo(l,d.dtype,d.values)}const KF={kernelName:qh,backendName:"cpu",kernelFunc:qF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XF(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,indices:o}=t,{axis:a,batchDims:i}=s;it([r,o],"gatherV2");let l=i;i==null&&(l=0);const c=H(o.shape),u=Et(a,r.shape)[0],h=Sp(r,o,u,l),d=le({inputs:{x:r},backend:e,attrs:{shape:[h.batchSize,h.outerSize,h.dimSize,h.sliceSize]}}),p=le({inputs:{x:o},backend:e,attrs:{shape:[h.batchSize,c/h.batchSize]}}),f=[h.batchSize,h.outerSize,c/h.batchSize,h.sliceSize],m=e.bufferSync(p),g=e.bufferSync(d),y=O0(g,m,f);return e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(p),e.makeTensorInfo(h.outputShape,y.dtype,y.values)}const YF={kernelName:zl,backendName:"cpu",kernelFunc:XF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JF=$e((n,t)=>n>=t?1:0),ZF=Be(ra,JF,null,"bool"),QF={kernelName:ra,backendName:"cpu",kernelFunc:ZF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tO(n){const{inputs:t,backend:e}=n,{input:s}=t,r=H(s.shape),o=s.shape[s.shape.length-1],a=r/o,i=le({inputs:{x:s},backend:e,attrs:{shape:[a,o]}}),l=h1(i,!0,e),c=le({inputs:{x:l},backend:e,attrs:{shape:s.shape}});return e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(l),c}const eO={kernelName:Kh,backendName:"cpu",kernelFunc:tO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nO=Ht(aa,n=>Number.isFinite(n)?1:0,"bool"),sO={kernelName:aa,backendName:"cpu",kernelFunc:nO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rO=Ht(ia,n=>Math.abs(n)===1/0?1:0,"bool"),oO={kernelName:ia,backendName:"cpu",kernelFunc:rO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aO=Ht(la,n=>Number.isNaN(n)?1:0,"bool"),iO={kernelName:la,backendName:"cpu",kernelFunc:aO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lO=$e((n,t)=>n<=t?1:0),cO=Be(Wl,lO,null,"bool"),uO={kernelName:Wl,backendName:"cpu",kernelFunc:cO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hO(n){const{backend:t,attrs:e}=n,{start:s,stop:r,num:o}=e,a=P0(s,r,o);return t.makeTensorInfo([a.length],"float32",a)}const dO={kernelName:Yh,backendName:"cpu",kernelFunc:hO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pO=Ht(ua,n=>Math.log1p(n)),fO={kernelName:ua,backendName:"cpu",kernelFunc:pO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mO=$e((n,t)=>n&&t),gO=Be(Ul,mO,null,"bool"),yO={kernelName:Ul,backendName:"cpu",kernelFunc:gO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bO=Ht(Gl,n=>n?0:1,"bool"),xO={kernelName:Gl,backendName:"cpu",kernelFunc:bO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wO=$e((n,t)=>n||t),vO=Be(Hl,wO,null,"bool"),$O={kernelName:Hl,backendName:"cpu",kernelFunc:vO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kO(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{depthRadius:o,bias:a,alpha:i,beta:l}=s;it(r,"LRN");const c=r.shape[3],u=c-1,h=e.data.get(r.dataId).values,d=H(r.shape),p=new Float32Array(d);function f(m){const g=m%c;let y=m-g+Math.max(0,g-o);const b=m-g+Math.min(g+o,u);let $=0;for(;y<=b;y++){const x=h[y];$+=x*x}return $}for(let m=0;m<d;m++){const g=f(m),y=h[m]*Math.pow(a+i*g,-l);p[m]=y}return e.makeTensorInfo(r.shape,r.dtype,p)}const CO={kernelName:jl,backendName:"cpu",kernelFunc:kO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NO(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,y:o,dy:a}=t,{depthRadius:i,bias:l,alpha:c,beta:u}=s;it(a,"LRNGrad");const h=H(a.shape),d=a.shape[3],p=e.data.get(a.dataId).values,f=e.data.get(r.dataId).values,m=e.data.get(o.dataId).values,g=new Float32Array(h),y=h;for(let b=0;b<y;b++){const $=b%d,x=b-$+Math.max(0,$-i),w=b-$+Math.min(d,$+i+1);let C=0;for(let k=x;k<w;k++)C+=Math.pow(f[k],2);C=c*C+l;for(let k=x;k<w;k++){let I=-2*c*u*f[k]*m[b]/C;b===k&&(I+=Math.pow(C,-u)),I*=p[b],g[k]+=I}}return e.makeTensorInfo(a.shape,r.dtype,g)}const IO={kernelName:Jh,backendName:"cpu",kernelFunc:NO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d1(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{reductionIndices:o,keepDims:a}=s,i=e;let l=r.shape;const c=l.length,u=Et(o,l);let h=u;const d=ye(h,c);let p=i.data.get(r.dataId).values;if(d!=null){const x=new Array(c);for(let w=0;w<x.length;w++)x[w]=l[d[w]];p=sf(p,l,r.dtype,d,x),h=ve(h.length,c),l=x}it(r,"max"),je("max",h,c);const[f,m]=ze(l,h),g=H(m),y=B0(p,g,f,r.dtype),b=i.write(y,f,r.dtype);let $=f;return a&&($=we(f,u)),{dataId:b,shape:$,dtype:r.dtype}}const SO={kernelName:ql,backendName:"cpu",kernelFunc:d1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TO(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t;it(r,"maxPool");const{filterSize:o,strides:a,pad:i,dimRoundingMode:l}=s,c=1;N(He(a,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${c}'`);const u=_n(r.shape,o,a,c,i,l);let h;if(u.filterWidth===1&&u.filterHeight===1&&Gt(u.inShape,u.outShape))h=is({inputs:{x:r},backend:e});else{const d=e.data.get(r.dataId).values,p=ft(r.shape),f=af(d,r.shape,r.dtype,p,u,"max");h=e.makeTensorInfo(u.outShape,r.dtype,f.values)}return h}const EO={kernelName:Kl,backendName:"cpu",kernelFunc:TO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AO(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{filterSize:o,strides:a,pad:i,dimRoundingMode:l,dataFormat:c}=s;it(r,"maxPool3d");const u=vs(r.shape,o,a,1,i,l,c),h=e.data.get(r.dataId).values,d=i1(h,r.shape,r.dtype,ft(r.shape),u,"max");return e.makeTensorInfo(d.shape,"float32",d.values)}const DO={kernelName:Xl,backendName:"cpu",kernelFunc:AO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RO(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,input:o}=t,{filterSize:a,strides:i,pad:l,dimRoundingMode:c}=s;it([r,o],"maxPool3DGrad");const u=vs(o.shape,a,i,1,l,c),h=e.bufferSync(o),d=bR(h,u),p=u.strideDepth,f=u.strideHeight,m=u.strideWidth,g=u.dilationDepth,y=u.dilationHeight,b=u.dilationWidth,$=u.effectiveFilterDepth,x=u.effectiveFilterHeight,w=u.effectiveFilterWidth,C=$-1-u.padInfo.front,k=w-1-u.padInfo.left,I=x-1-u.padInfo.top,S=Ft(o.shape,"float32"),E=e.bufferSync(r);for(let R=0;R<u.batchSize;++R)for(let L=0;L<u.inChannels;++L)for(let O=0;O<u.inDepth;++O)for(let z=0;z<u.inHeight;++z)for(let M=0;M<u.inWidth;++M){const V=O-C,K=z-I,G=M-k;let j=0;for(let J=0;J<$;J+=g){const Z=(V+J)/p;if(!(Z<0||Z>=u.outDepth||Math.floor(Z)!==Z))for(let tt=0;tt<x;tt+=y){const Q=(K+tt)/f;if(!(Q<0||Q>=u.outHeight||Math.floor(Q)!==Q))for(let et=0;et<w;et+=b){const st=(G+et)/m;if(st<0||st>=u.outWidth||Math.floor(st)!==st)continue;const rt=$*x*w-1-d.get(R,Z,Q,st,L),at=J*x*w+tt*w+et,ht=rt===at?1:0;if(ht===0)continue;const dt=E.get(R,Z,Q,st,L);j+=dt*ht}}}S.set(j,R,O,z,M,L)}return e.makeTensorInfo(S.shape,S.dtype,S.values)}const FO={kernelName:Qh,backendName:"cpu",kernelFunc:RO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OO(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,input:o,output:a}=t,i=o;it([o,a],"maxPoolGrad");const{filterSize:l,strides:c,pad:u,dimRoundingMode:h}=s,d=_n(i.shape,l,c,1,u,h),p=e.data.get(i.dataId).values,f=Ft(d.outShape,i.dtype,a1(p,i.shape,i.dtype,d).values),m=d.strideHeight,g=d.strideWidth,y=d.dilationHeight,b=d.dilationWidth,$=d.effectiveFilterHeight,x=d.effectiveFilterWidth,w=x-1-d.padInfo.left,C=$-1-d.padInfo.top,k=Ft(i.shape,"float32"),I=e.data.get(r.dataId).values,S=Ft(r.shape,"float32",I);for(let E=0;E<d.batchSize;++E)for(let R=0;R<d.inChannels;++R)for(let L=0;L<d.inHeight;++L)for(let O=0;O<d.inWidth;++O){const z=L-C,M=O-w;let V=0;for(let K=0;K<$;K+=y){const G=(z+K)/m;if(!(G<0||G>=d.outHeight||Math.floor(G)!==G))for(let j=0;j<x;j+=b){const J=(M+j)/g;if(J<0||J>=d.outWidth||Math.floor(J)!==J)continue;const Z=$*x-1-f.get(E,G,J,R),tt=K*x+j,Q=Z===tt?1:0;if(Q===0)continue;const et=S.get(E,G,J,R);V+=et*Q}}k.set(V,E,L,O,R)}return e.makeTensorInfo(k.shape,k.dtype,k.values)}const _O={kernelName:Zh,backendName:"cpu",kernelFunc:OO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LO(n,t,e,s,r){const o=ft(t),a=af(n,t,e,o,r,"max"),i=a1(n,t,e,r,!0,s);return[a.values,i.values]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PO={kernelName:td,backendName:"cpu",kernelFunc:({inputs:n,attrs:t,backend:e})=>{const{x:s}=n,{filterSize:r,strides:o,pad:a,includeBatchInIndex:i}=t,l=e;it(s,"MaxPoolWithArgmax");const c=l.data.get(s.dataId).values,u=_n(s.shape,r,o,[1,1],a),[h,d]=LO(c,s.shape,s.dtype,i,u),p=l.write(h,u.outShape,s.dtype),f=l.write(d,u.outShape,s.dtype);return[{dataId:p,shape:u.outShape,dtype:s.dtype},{dataId:f,shape:u.outShape,dtype:"int32"}]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zc(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o,keepDims:a}=s;it(r,"sum");let i;r.dtype==="bool"?i=Vs({inputs:{x:r},backend:e,attrs:{dtype:"int32"}}):i=is({inputs:{x:r},backend:e});const l=i.shape.length,c=Et(o,i.shape),u=ye(c,l);let h=c,d=i;u!=null&&(d=On({inputs:{x:i},backend:e,attrs:{perm:u}}),h=ve(h.length,l)),je("sum",h,d.shape.length);const[p,f]=ze(d.shape,h),m=yn(d.dtype,"int32");let g=dl(e,p,m);const y=H(f),b=e.data.get(g.dataId).values,$=e.data.get(d.dataId).values;for(let x=0;x<b.length;++x){const w=x*y;let C=0;for(let k=0;k<y;++k)C+=$[w+k];b[x]=C}if(a){const x=we(g.shape,c),w=g;g=le({inputs:{x:g},backend:e,attrs:{shape:x}}),e.disposeIntermediateTensorInfo(w)}return e.disposeIntermediateTensorInfo(i),u!=null&&e.disposeIntermediateTensorInfo(d),g}const zO={kernelName:dc,backendName:"cpu",kernelFunc:Zc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BO(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o,keepDims:a}=s,i=Et(o,r.shape),c=ze(r.shape,i)[1],u=H(c),h=[],d=e.makeTensorInfo([],"float32",new Float32Array([u]));h.push(d);const p=Vs({inputs:{x:r},backend:e,attrs:{dtype:"float32"}});h.push(p);const f=lf({inputs:{a:p,b:d},backend:e});h.push(f);const m=Zc({inputs:{x:f},backend:e,attrs:{axis:o,keepDims:a}});return h.forEach(g=>e.disposeIntermediateTensorInfo(g)),m}const MO={kernelName:Yl,backendName:"cpu",kernelFunc:BO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VO(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o,keepDims:a}=s;it(r,"min");const i=Et(o,r.shape);let l=i;const c=ye(l,r.shape.length);let u=r;c!=null&&(u=On({inputs:{x:r},backend:e,attrs:{perm:c}}),l=ve(l.length,r.shape.length)),je("min",l,u.shape.length);const[h,d]=ze(u.shape,l),p=H(d),f=Ke(H(h),u.dtype),m=e.data.get(u.dataId).values;for(let y=0;y<f.length;++y){const b=y*p;let $=m[b];for(let x=0;x<p;++x){const w=m[b+x];w<$&&($=w)}f[y]=$}c!=null&&e.disposeIntermediateTensorInfo(u);const g=e.makeTensorInfo(h,u.dtype,f);if(a){const y=we(h,i),b=le({inputs:{x:g},backend:e,attrs:{shape:y}});return e.disposeIntermediateTensorInfo(g),b}return g}const WO={kernelName:Jl,backendName:"cpu",kernelFunc:VO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UO(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{paddings:o,mode:a}=s;it(r,"mirrorPad");const i=o.map(($,x)=>$[0]+r.shape[x]+$[1]),l=o.map($=>$[0]),c=o.map(($,x)=>$[0]+r.shape[x]),u=a==="reflect"?0:1,h=e.data.get(r.dataId).values,d=r.shape.length,p=ft(r.shape),f=H(i),m=i.length,g=ft(i),y=Ge(r.dtype,f);for(let $=0;$<f;$++){let x=zo($,m,g);for(let C=0;C<m;C++)x[C]<l[C]?x[C]=l[C]*2-x[C]-u:x[C]>=c[C]&&(x[C]=(c[C]-1)*2-x[C]+u);x=x.map((C,k)=>C-l[k]);const w=ss(x,d,p);y[$]=h[w]}return{dataId:e.write(y,i,r.dtype),shape:i,dtype:r.dtype}}const GO={kernelName:Zl,backendName:"cpu",kernelFunc:UO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HO=$e(((n,t)=>{const e=n%t;return n<0&&t<0||n>=0&&t>=0?e:(e+t)%t})),jO=Be(pa,HO),qO={kernelName:pa,backendName:"cpu",kernelFunc:jO};var Pi={exports:{}},KO=Pi.exports,Lm;function XO(){return Lm||(Lm=1,(function(n){(function(t,e,s){function r(l){var c=this,u=i();c.next=function(){var h=2091639*c.s0+c.c*23283064365386963e-26;return c.s0=c.s1,c.s1=c.s2,c.s2=h-(c.c=h|0)},c.c=1,c.s0=u(" "),c.s1=u(" "),c.s2=u(" "),c.s0-=u(l),c.s0<0&&(c.s0+=1),c.s1-=u(l),c.s1<0&&(c.s1+=1),c.s2-=u(l),c.s2<0&&(c.s2+=1),u=null}function o(l,c){return c.c=l.c,c.s0=l.s0,c.s1=l.s1,c.s2=l.s2,c}function a(l,c){var u=new r(l),h=c&&c.state,d=u.next;return d.int32=function(){return u.next()*4294967296|0},d.double=function(){return d()+(d()*2097152|0)*11102230246251565e-32},d.quick=d,h&&(typeof h=="object"&&o(h,u),d.state=function(){return o(u,{})}),d}function i(){var l=4022871197,c=function(u){u=u.toString();for(var h=0;h<u.length;h++){l+=u.charCodeAt(h);var d=.02519603282416938*l;l=d>>>0,d-=l,d*=l,l=d>>>0,d-=l,l+=d*4294967296}return(l>>>0)*23283064365386963e-26};return c}e&&e.exports?e.exports=a:this.alea=a})(KO,n)})(Pi)),Pi.exports}var zi={exports:{}},YO=zi.exports,Pm;function JO(){return Pm||(Pm=1,(function(n){(function(t,e,s){function r(i){var l=this,c="";l.x=0,l.y=0,l.z=0,l.w=0,l.next=function(){var h=l.x^l.x<<11;return l.x=l.y,l.y=l.z,l.z=l.w,l.w^=l.w>>>19^h^h>>>8},i===(i|0)?l.x=i:c+=i;for(var u=0;u<c.length+64;u++)l.x^=c.charCodeAt(u)|0,l.next()}function o(i,l){return l.x=i.x,l.y=i.y,l.z=i.z,l.w=i.w,l}function a(i,l){var c=new r(i),u=l&&l.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=c.next()>>>11,p=(c.next()>>>0)/4294967296,f=(d+p)/(1<<21);while(f===0);return f},h.int32=c.next,h.quick=h,u&&(typeof u=="object"&&o(u,c),h.state=function(){return o(c,{})}),h}e&&e.exports?e.exports=a:this.xor128=a})(YO,n)})(zi)),zi.exports}var Bi={exports:{}},ZO=Bi.exports,zm;function QO(){return zm||(zm=1,(function(n){(function(t,e,s){function r(i){var l=this,c="";l.next=function(){var h=l.x^l.x>>>2;return l.x=l.y,l.y=l.z,l.z=l.w,l.w=l.v,(l.d=l.d+362437|0)+(l.v=l.v^l.v<<4^(h^h<<1))|0},l.x=0,l.y=0,l.z=0,l.w=0,l.v=0,i===(i|0)?l.x=i:c+=i;for(var u=0;u<c.length+64;u++)l.x^=c.charCodeAt(u)|0,u==c.length&&(l.d=l.x<<10^l.x>>>4),l.next()}function o(i,l){return l.x=i.x,l.y=i.y,l.z=i.z,l.w=i.w,l.v=i.v,l.d=i.d,l}function a(i,l){var c=new r(i),u=l&&l.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=c.next()>>>11,p=(c.next()>>>0)/4294967296,f=(d+p)/(1<<21);while(f===0);return f},h.int32=c.next,h.quick=h,u&&(typeof u=="object"&&o(u,c),h.state=function(){return o(c,{})}),h}e&&e.exports?e.exports=a:this.xorwow=a})(ZO,n)})(Bi)),Bi.exports}var Mi={exports:{}},t_=Mi.exports,Bm;function e_(){return Bm||(Bm=1,(function(n){(function(t,e,s){function r(i){var l=this;l.next=function(){var u=l.x,h=l.i,d,p;return d=u[h],d^=d>>>7,p=d^d<<24,d=u[h+1&7],p^=d^d>>>10,d=u[h+3&7],p^=d^d>>>3,d=u[h+4&7],p^=d^d<<7,d=u[h+7&7],d=d^d<<13,p^=d^d<<9,u[h]=p,l.i=h+1&7,p};function c(u,h){var d,p=[];if(h===(h|0))p[0]=h;else for(h=""+h,d=0;d<h.length;++d)p[d&7]=p[d&7]<<15^h.charCodeAt(d)+p[d+1&7]<<13;for(;p.length<8;)p.push(0);for(d=0;d<8&&p[d]===0;++d);for(d==8?p[7]=-1:p[d],u.x=p,u.i=0,d=256;d>0;--d)u.next()}c(l,i)}function o(i,l){return l.x=i.x.slice(),l.i=i.i,l}function a(i,l){i==null&&(i=+new Date);var c=new r(i),u=l&&l.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=c.next()>>>11,p=(c.next()>>>0)/4294967296,f=(d+p)/(1<<21);while(f===0);return f},h.int32=c.next,h.quick=h,u&&(u.x&&o(u,c),h.state=function(){return o(c,{})}),h}e&&e.exports?e.exports=a:this.xorshift7=a})(t_,n)})(Mi)),Mi.exports}var Vi={exports:{}},n_=Vi.exports,Mm;function s_(){return Mm||(Mm=1,(function(n){(function(t,e,s){function r(i){var l=this;l.next=function(){var u=l.w,h=l.X,d=l.i,p,f;return l.w=u=u+1640531527|0,f=h[d+34&127],p=h[d=d+1&127],f^=f<<13,p^=p<<17,f^=f>>>15,p^=p>>>12,f=h[d]=f^p,l.i=d,f+(u^u>>>16)|0};function c(u,h){var d,p,f,m,g,y=[],b=128;for(h===(h|0)?(p=h,h=null):(h=h+"\0",p=0,b=Math.max(b,h.length)),f=0,m=-32;m<b;++m)h&&(p^=h.charCodeAt((m+32)%h.length)),m===0&&(g=p),p^=p<<10,p^=p>>>15,p^=p<<4,p^=p>>>13,m>=0&&(g=g+1640531527|0,d=y[m&127]^=p+g,f=d==0?f+1:0);for(f>=128&&(y[(h&&h.length||0)&127]=-1),f=127,m=512;m>0;--m)p=y[f+34&127],d=y[f=f+1&127],p^=p<<13,d^=d<<17,p^=p>>>15,d^=d>>>12,y[f]=p^d;u.w=g,u.X=y,u.i=f}c(l,i)}function o(i,l){return l.i=i.i,l.w=i.w,l.X=i.X.slice(),l}function a(i,l){i==null&&(i=+new Date);var c=new r(i),u=l&&l.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=c.next()>>>11,p=(c.next()>>>0)/4294967296,f=(d+p)/(1<<21);while(f===0);return f},h.int32=c.next,h.quick=h,u&&(u.X&&o(u,c),h.state=function(){return o(c,{})}),h}e&&e.exports?e.exports=a:this.xor4096=a})(n_,n)})(Vi)),Vi.exports}var Wi={exports:{}},r_=Wi.exports,Vm;function o_(){return Vm||(Vm=1,(function(n){(function(t,e,s){function r(i){var l=this,c="";l.next=function(){var h=l.b,d=l.c,p=l.d,f=l.a;return h=h<<25^h>>>7^d,d=d-p|0,p=p<<24^p>>>8^f,f=f-h|0,l.b=h=h<<20^h>>>12^d,l.c=d=d-p|0,l.d=p<<16^d>>>16^f,l.a=f-h|0},l.a=0,l.b=0,l.c=-1640531527,l.d=1367130551,i===Math.floor(i)?(l.a=i/4294967296|0,l.b=i|0):c+=i;for(var u=0;u<c.length+20;u++)l.b^=c.charCodeAt(u)|0,l.next()}function o(i,l){return l.a=i.a,l.b=i.b,l.c=i.c,l.d=i.d,l}function a(i,l){var c=new r(i),u=l&&l.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=c.next()>>>11,p=(c.next()>>>0)/4294967296,f=(d+p)/(1<<21);while(f===0);return f},h.int32=c.next,h.quick=h,u&&(typeof u=="object"&&o(u,c),h.state=function(){return o(c,{})}),h}e&&e.exports?e.exports=a:this.tychei=a})(r_,n)})(Wi)),Wi.exports}var vu={exports:{}},Wm;function a_(){return Wm||(Wm=1,(function(n){(function(t,e){var s=this,r=256,o=6,a=52,i="random",l=e.pow(r,o),c=e.pow(2,a),u=c*2,h=r-1,d;function p(x,w,C){var k=[];w=w==!0?{entropy:!0}:w||{};var I=y(g(w.entropy?[x,$(t)]:x??b(),3),k),S=new f(k),E=function(){for(var R=S.g(o),L=l,O=0;R<c;)R=(R+O)*r,L*=r,O=S.g(1);for(;R>=u;)R/=2,L/=2,O>>>=1;return(R+O)/L};return E.int32=function(){return S.g(4)|0},E.quick=function(){return S.g(4)/4294967296},E.double=E,y($(S.S),t),(w.pass||C||function(R,L,O,z){return z&&(z.S&&m(z,S),R.state=function(){return m(S,{})}),O?(e[i]=R,L):R})(E,I,"global"in w?w.global:this==e,w.state)}e["seed"+i]=p;function f(x){var w,C=x.length,k=this,I=0,S=k.i=k.j=0,E=k.S=[];for(C||(x=[C++]);I<r;)E[I]=I++;for(I=0;I<r;I++)E[I]=E[S=h&S+x[I%C]+(w=E[I])],E[S]=w;(k.g=function(R){for(var L,O=0,z=k.i,M=k.j,V=k.S;R--;)L=V[z=h&z+1],O=O*r+V[h&(V[z]=V[M=h&M+L])+(V[M]=L)];return k.i=z,k.j=M,O})(r)}function m(x,w){return w.i=x.i,w.j=x.j,w.S=x.S.slice(),w}function g(x,w){var C=[],k=typeof x,I;if(w&&k=="object")for(I in x)try{C.push(g(x[I],w-1))}catch{}return C.length?C:k=="string"?x:x+"\0"}function y(x,w){for(var C=x+"",k,I=0;I<C.length;)w[h&I]=h&(k^=w[h&I]*19)+C.charCodeAt(I++);return $(w)}function b(){try{var x;return d&&(x=d.randomBytes)?x=x(r):(x=new Uint8Array(r),(s.crypto||s.msCrypto).getRandomValues(x)),$(x)}catch{var w=s.navigator,C=w&&w.plugins;return[+new Date,s,C,s.screen,$(t)]}}function $(x){return String.fromCharCode.apply(0,x)}if(y(e.random(),t),n.exports){n.exports=p;try{d=Hd}catch{}}})([],Math)})(vu)),vu.exports}var $u,Um;function i_(){if(Um)return $u;Um=1;var n=XO(),t=JO(),e=QO(),s=e_(),r=s_(),o=o_(),a=a_();return a.alea=n,a.xor128=t,a.xorwow=e,a.xorshift7=s,a.xor4096=r,a.tychei=o,$u=a,$u}var l_=i_();/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p1(n){const{inputs:t,backend:e,attrs:s}=n,{logits:r}=t,{dim:o}=s,a=r.shape.length;let i=o;if(i===-1&&(i=a-1),i!==a-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${a} and dim was ${i}`);const l=Et([i],r.shape),c=d1({inputs:{x:r},backend:e,attrs:{reductionIndices:l,keepDims:!1}}),u=we(c.shape,l),h=le({inputs:{x:c},backend:e,attrs:{shape:u}}),d=rf({inputs:{a:r,b:h},backend:e}),p=D0({inputs:{x:d},backend:e}),f=Zc({inputs:{x:p},backend:e,attrs:{axis:l,keepDims:!1}}),m=le({inputs:{x:f},backend:e,attrs:{shape:u}}),g=lf({inputs:{a:p,b:m},backend:e});return e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(m),g}const c_={kernelName:mc,backendName:"cpu",kernelFunc:p1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u_(n){const{inputs:t,backend:e,attrs:s}=n,{logits:r}=t,{numSamples:o,seed:a,normalized:i}=s;it(r,"multinomial");const l=i?r:p1({inputs:{logits:r},backend:e,attrs:{dim:-1}}),c=l.shape[0],u=l.shape[1],h=e.data.get(l.dataId).values,d=[c,o],p=Ke(H(d),"int32");for(let f=0;f<c;++f){const m=f*u,g=new Float32Array(u-1);g[0]=h[m];for(let $=1;$<g.length;++$)g[$]=g[$-1]+h[m+$];const y=l_.alea(a.toString()),b=f*o;for(let $=0;$<o;++$){const x=y();p[b+$]=g.length;for(let w=0;w<g.length;w++)if(x<g[w]){p[b+$]=w;break}}}return i||e.disposeIntermediateTensorInfo(l),e.makeTensorInfo(d,"int32",p)}const h_={kernelName:ed,backendName:"cpu",kernelFunc:u_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const d_=rp;function p_(n){const{inputs:t,backend:e,attrs:s}=n,{boxes:r,scores:o}=t,{maxOutputSize:a,iouThreshold:i,scoreThreshold:l}=s;it(r,"NonMaxSuppression");const c=e.data.get(r.dataId).values,u=e.data.get(o.dataId).values,{selectedIndices:h}=d_(c,u,a,i,l);return e.makeTensorInfo([h.length],"int32",new Int32Array(h))}const f_={kernelName:nd,backendName:"cpu",kernelFunc:p_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const m_=op;function g_(n){const{inputs:t,backend:e,attrs:s}=n,{boxes:r,scores:o}=t,{maxOutputSize:a,iouThreshold:i,scoreThreshold:l,padToMaxOutputSize:c}=s;it(r,"NonMaxSuppressionPadded");const u=e.data.get(r.dataId).values,h=e.data.get(o.dataId).values,{selectedIndices:d,validOutputs:p}=m_(u,h,a,i,l,c);return[e.makeTensorInfo([d.length],"int32",new Int32Array(d)),e.makeTensorInfo([],"int32",new Int32Array([p]))]}const y_={kernelName:sd,backendName:"cpu",kernelFunc:g_};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const b_=ap;function x_(n){const{inputs:t,backend:e,attrs:s}=n,{boxes:r,scores:o}=t,{maxOutputSize:a,iouThreshold:i,scoreThreshold:l,softNmsSigma:c}=s;it(r,"NonMaxSuppressionWithScore");const u=e.data.get(r.dataId).values,h=e.data.get(o.dataId).values,d=a,p=i,f=l,m=c,{selectedIndices:g,selectedScores:y}=b_(u,h,d,p,f,m);return[e.makeTensorInfo([g.length],"int32",new Int32Array(g)),e.makeTensorInfo([y.length],"float32",new Float32Array(y))]}const w_={kernelName:rd,backendName:"cpu",kernelFunc:x_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v_(n){const{inputs:t,backend:e,attrs:s}=n,{indices:r}=t,{depth:o,onValue:a,offValue:i}=s;it(r,"oneHot");const l=H(r.shape),c=new Float32Array(l*o);c.fill(i);const u=e.data.get(r.dataId).values;for(let h=0;h<l;++h)u[h]>=0&&u[h]<o&&(c[h*o+u[h]]=a);return e.makeTensorInfo([...r.shape,o],"int32",c)}const $_={kernelName:nc,backendName:"cpu",kernelFunc:v_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fl(n){const{inputs:t,backend:e}=n,{x:s}=t;if(s.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(s.dtype==="complex64"){const r=mr({inputs:{input:s},backend:e}),o=fl({inputs:{x:r},backend:e}),a=jr({inputs:{input:s},backend:e}),i=fl({inputs:{x:a},backend:e}),l=cn({inputs:{real:o,imag:i},backend:e});return e.disposeIntermediateTensorInfo(r),e.disposeIntermediateTensorInfo(o),e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(i),l}else return cf({backend:e,attrs:{shape:s.shape,value:0,dtype:s.dtype}})}const k_={kernelName:xc,backendName:"cpu",kernelFunc:fl};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f1(n){const{inputs:t,backend:e}=n,{x:s}=t;if(s.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(s.dtype==="complex64"){const r=mr({inputs:{input:s},backend:e}),o=f1({inputs:{x:r},backend:e}),a=jr({inputs:{input:s},backend:e}),i=fl({inputs:{x:a},backend:e}),l=cn({inputs:{real:o,imag:i},backend:e});return e.disposeIntermediateTensorInfo(r),e.disposeIntermediateTensorInfo(o),e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(i),l}else return cf({backend:e,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}const C_={kernelName:ec,backendName:"cpu",kernelFunc:f1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m1(n){const{inputs:t,backend:e,attrs:s}=n,{axis:r}=s;if(t.length===1)return pl({inputs:{input:t[0]},backend:e,attrs:{dim:r}});const o=t[0].shape,a=t[0].dtype;t.forEach(u=>{bl(o,u.shape,"All tensors passed to stack must have matching shapes"),N(a===u.dtype,()=>"All tensors passed to stack must have matching dtypes")});const i=[],l=t.map(u=>{const h=pl({inputs:{input:u},backend:e,attrs:{dim:r}});return i.push(h),h}),c=qr({inputs:l,backend:e,attrs:{axis:r}});return i.forEach(u=>e.disposeIntermediateTensorInfo(u)),c}const N_={kernelName:sc,backendName:"cpu",kernelFunc:m1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I_(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{paddings:o,constantValue:a}=s;it(r,"pad");const i=o.map((b,$)=>b[0]+r.shape[$]+b[1]),l=o.map(b=>b[0]),c=e.data.get(r.dataId).values,u=H(r.shape),h=r.shape.length,d=ft(r.shape),p=H(i),f=i.length,m=ft(i),g=Ge(r.dtype,p);a!==0&&g.fill(a);for(let b=0;b<u;b++){const x=zo(b,h,d).map((C,k)=>C+l[k]),w=ss(x,f,m);g[w]=c[b]}return{dataId:e.write(g,i,r.dtype),shape:i,dtype:r.dtype}}const g1={kernelName:rc,backendName:"cpu",kernelFunc:I_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const S_=$e((n,t)=>Math.pow(n,t)),T_=Be(ma,S_),E_={kernelName:ma,backendName:"cpu",kernelFunc:T_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A_(n){const{backend:t,attrs:e}=n,{start:s,stop:r,dtype:o,step:a}=e,i=H0(s,r,a,o);return t.makeTensorInfo([i.length],o,i)}const D_={kernelName:ad,backendName:"cpu",kernelFunc:A_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const R_=Ht(ga,n=>1/n),F_={kernelName:ga,backendName:"cpu",kernelFunc:R_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O_(n){const{inputs:t,backend:e,attrs:s}=n,{images:r}=t,{alignCorners:o,halfPixelCenters:a,size:i}=s;it(r,"resizeBilinear");const l=ft(r.shape),[c,u]=i,[h,d,p,f]=r.shape,m=e.data.get(r.dataId).values,g=new Float32Array(H([h,c,u,f])),y=[o&&c>1?d-1:d,o&&u>1?p-1:p],b=[o&&c>1?c-1:c,o&&u>1?u-1:u];let $=0;const x=y[0]/b[0],w=y[1]/b[1];for(let C=0;C<h;C++)for(let k=0;k<c;k++){let I;a?I=x*(k+.5)-.5:I=x*k;const S=Math.max(0,Math.floor(I)),E=I-S,R=Math.min(d-1,Math.ceil(I)),L=C*l[0]+S*l[1],O=C*l[0]+R*l[1];for(let z=0;z<u;z++){let M;a?M=w*(z+.5)-.5:M=w*z;const V=Math.max(0,Math.floor(M)),K=M-V,G=Math.min(p-1,Math.ceil(M)),j=L+V*l[2],J=O+V*l[2],Z=L+G*l[2],tt=O+G*l[2];for(let Q=0;Q<f;Q++){const et=m[j+Q],st=m[J+Q],rt=m[Z+Q],at=m[tt+Q],ht=et+(rt-et)*K,dt=st+(at-st)*K,yt=ht+(dt-ht)*E;g[$++]=yt}}}return e.makeTensorInfo([h,c,u,f],"float32",g)}const __={kernelName:lc,backendName:"cpu",kernelFunc:O_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L_(n){const{inputs:t,backend:e,attrs:s}=n,{images:r,dy:o}=t,{alignCorners:a}=s;it([o,r],"resizeBilinearGrad");const i=ft(r.shape),[l,c,u,h]=r.shape,[,d,p]=o.shape,f=new Float32Array(l*c*u*h),m=[a&&d>1?c-1:c,a&&p>1?u-1:u],g=[a&&d>1?d-1:d,a&&p>1?p-1:p],y=m[0]/g[0],b=m[1]/g[1],$=e.data.get(o.dataId).values;let x=0;for(let w=0;w<l;w++){const C=w*i[0];for(let k=0;k<d;k++){const I=k*y,S=Math.floor(I),E=Math.min(Math.ceil(I),c-1),R=C+S*i[1],L=C+E*i[1],O=I-S,z=1-O;for(let M=0;M<p;M++){const V=M*b,K=Math.floor(V),G=Math.min(Math.ceil(V),u-1),j=V-K,J=1-j,Z=R+K*i[2],tt=R+G*i[2],Q=L+K*i[2],et=L+G*i[2],st=z*J,rt=z*j,at=O*J,ht=O*j;for(let dt=0;dt<h;dt++){const yt=$[x++];f[Z+dt]+=yt*st,f[tt+dt]+=yt*rt,f[Q+dt]+=yt*at,f[et+dt]+=yt*ht}}}}return e.makeTensorInfo([l,u,c,h],"float32",f)}const P_={kernelName:cd,backendName:"cpu",kernelFunc:L_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z_(n){const{inputs:t,backend:e,attrs:s}=n,{images:r}=t,{alignCorners:o,halfPixelCenters:a,size:i}=s;it(r,"resizeNearestNeighbor");const l=ft(r.shape),[c,u]=i,[h,d,p,f]=r.shape,m=e.data.get(r.dataId).values,g=new Float32Array(h*c*u*f),y=[o&&c>1?d-1:d,o&&u>1?p-1:p],b=[o&&c>1?c-1:c,o&&u>1?u-1:u],$=y[0]/b[0],x=y[1]/b[1];let w=0;for(let C=0;C<h;C++){const k=C*l[0];for(let I=0;I<c;I++){const S=a?$*(I+.5):$*I;let E=Math.min(d-1,o?Math.round(S):Math.floor(S));a&&(E=Math.max(0,E));const R=k+E*l[1];for(let L=0;L<u;L++){const O=a?x*(L+.5):x*L;let z=Math.min(p-1,o?Math.round(O):Math.floor(O));a&&(z=Math.max(0,z));const M=R+z*l[2];for(let V=0;V<f;V++){const K=m[M+V];g[w++]=K}}}}return e.makeTensorInfo([h,c,u,f],r.dtype,g)}const B_={kernelName:ic,backendName:"cpu",kernelFunc:z_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function M_(n){const{inputs:t,backend:e,attrs:s}=n,{images:r,dy:o}=t,{alignCorners:a}=s;it([o,r],"resizeNearestNeighborGrad");const i=ft(r.shape),l=ft(o.shape),[c,u,h,d]=r.shape,[,p,f]=o.shape,m=new Float32Array(c*u*h*d),g=e.data.get(o.dataId).values,y=[a&&p>1?u-1:u,a&&f>1?h-1:h],b=[a&&p>1?p-1:p,a&&f>1?f-1:f],$=y[0]/b[0],x=y[1]/b[1],w=1/$,C=1/x,k=Math.ceil(w)*2+2,I=Math.ceil(C)*2+2;for(let S=0;S<c;S++){const E=S*i[0];for(let R=0;R<u;R++){const L=E+R*i[1],O=Math.floor(R*w),z=Math.floor(O-k/2);for(let M=0;M<h;M++){const V=L+M*i[2],K=Math.floor(M*C),G=Math.floor(K-I/2);for(let j=0;j<d;j++){let J=0;for(let Z=0;Z<k;Z++){const tt=Z+z;if(tt<0||tt>=p)continue;const Q=E+tt*l[1],et=tt*$,st=Math.min(u-1,a?Math.round(et):Math.floor(et));if(R===st)for(let rt=0;rt<I;rt++){const at=rt+G;if(at<0||at>=f)continue;const ht=Q+at*l[2],dt=at*x,yt=Math.min(h-1,a?Math.round(dt):Math.floor(dt));M===yt&&(J+=g[ht+j])}}m[V+j]=J}}}}return e.makeTensorInfo(r.shape,r.dtype,m)}const V_={kernelName:ld,backendName:"cpu",kernelFunc:M_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W_(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{dims:o}=s;it(r,"reverse");const a=r.shape.length,i=Et(o,r.shape);if(a===0)return is({inputs:{x:r},backend:e});const l=new _e(r.shape,r.dtype),c=e.bufferSync(r);for(let u=0;u<l.size;u++){const h=l.indexToLoc(u),d=h.slice();i.forEach(p=>d[p]=r.shape[p]-1-d[p]),l.set(c.get(...d),...h)}return e.makeTensorInfo(l.shape,l.dtype,l.values)}const U_={kernelName:cc,backendName:"cpu",kernelFunc:W_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const G_={kernelName:yd,backendName:"cpu",kernelFunc:({inputs:n,attrs:t,backend:e})=>{const{image:s}=n,{radians:r,fillValue:o,center:a}=t,i=e,l=Ge(s.dtype,H(s.shape)),[c,u,h,d]=s.shape,[p,f]=gp(a,u,h),m=255,g=Math.sin(r),y=Math.cos(r),b=i.data.get(s.dataId).values;for(let x=0;x<c;x++){const w=x*h*u*d;for(let C=0;C<u;C++){const k=C*(h*d);for(let I=0;I<h;I++){const S=I*d;for(let E=0;E<d;E++){const R=[c,C,I,E],L=R[2],O=R[1];let z=(L-p)*y-(O-f)*g,M=(L-p)*g+(O-f)*y;z=Math.round(z+p),M=Math.round(M+f);let V=o;if(typeof o!="number"&&(E===3?V=m:V=o[E]),z>=0&&z<h&&M>=0&&M<u){const G=M*(h*d),j=z*d,J=w+G+j+E;V=b[J]}const K=w+k+S+E;l[K]=V}}}}return{dataId:i.write(l,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const H_=Ht(xa,n=>{const t=Math.floor(n);return n-t<.5?Math.floor(n):n-t>.5?Math.ceil(n):t%2===0?t:t+1}),j_={kernelName:xa,backendName:"cpu",kernelFunc:H_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y1(n,t,e,s,r,o,a,i,l,c){const u=[s/r,r],h=n.values,d=t.values;if(s===0)return Ft(e,t.dtype);const p=Ft(u,t.dtype);p.values.fill(l);for(let f=0;f<o;f++){const m=[];let g=0;for(let y=0;y<a;y++){const b=h[f*a+y];m.push(b),g+=b*i[y]}if(g<0||g>=s/r)throw new Error(`Invalid indices: ${m} does not index into ${e}`);for(let y=0;y<r;y++)c?p.values[g*r+y]+=d[f*r+y]:p.values[g*r+y]=t.rank===0?d[0]:d[f*r+y]}return p}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q_(n){const{inputs:t,backend:e,attrs:s}=n,{indices:r,updates:o}=t,{shape:a}=s,{sliceRank:i,numUpdates:l,sliceSize:c,strides:u,outputSize:h}=Pa(o,r,a),d=!0,p=e.bufferSync(r),f=e.bufferSync(o),m=y1(p,f,a,h,c,l,i,u,0,d);return e.makeTensorInfo(a,m.dtype,m.values)}const K_={kernelName:ud,backendName:"cpu",kernelFunc:q_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X_(n){const{inputs:t,backend:e}=n,{condition:s,t:r,e:o}=t;it([s,r,o],"select");const a=s.shape.length,i=e.data.get(s.dataId).values,l=e.data.get(r.dataId).values,c=e.data.get(o.dataId).values,u=yn(r.dtype,o.dtype),h=Ke(H(r.shape),u);let d=0;const p=a===0||a>1||r.shape.length===1?1:H(r.shape.slice(1));for(let f=0;f<i.length;f++)for(let m=0;m<p;m++)i[f]===1?h[d++]=l[f]:h[d++]=c[f];return e.makeTensorInfo(r.shape,u,h)}const Y_={kernelName:uc,backendName:"cpu",kernelFunc:X_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const J_=zc,Z_=Bc,Q_=Ht(va,n=>n>=0?Z_*n:J_*(Math.exp(n)-1)),tL={kernelName:va,backendName:"cpu",kernelFunc:Q_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eL=Ht(Na,n=>1/(1+Math.exp(-n))),nL={kernelName:Na,backendName:"cpu",kernelFunc:eL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sL=Ht(Ca,n=>n<0?-1:n>0?1:0),rL={kernelName:Ca,backendName:"cpu",kernelFunc:sL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oL=Ht($a,n=>Math.sin(n)),aL={kernelName:$a,backendName:"cpu",kernelFunc:oL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iL=Ht(ka,n=>Math.sinh(n)),lL={kernelName:ka,backendName:"cpu",kernelFunc:iL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cL=11920928955078125e-23,Gm=Math.log(cL)+2,uL=Ht(Ia,n=>{const t=n>-Gm,e=n<Gm,s=Math.exp(n);let r;return e?r=s:t?r=n:r=Math.log(1+s),r}),hL={kernelName:Ia,backendName:"cpu",kernelFunc:uL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dL(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{blockShape:o,paddings:a}=s;it([r],"spaceToBatchND");const i=H(o),l=[[0,0]];l.push(...a);for(let C=1+o.length;C<r.shape.length;++C)l.push([0,0]);const c=g1.kernelFunc({inputs:{x:r},backend:e,attrs:{paddings:l,constantValue:0}}),u=Ha(c.shape,o,i,!1),h=ja(u.length,o.length,!1),d=qa(c.shape,o,i,!1),m=le({inputs:{x:c},backend:e,attrs:{shape:u}}),b=On({inputs:{x:m},backend:e,attrs:{perm:h}}),w=le({inputs:{x:b},backend:e,attrs:{shape:d}});return e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(b),w}const pL={kernelName:pc,backendName:"cpu",kernelFunc:dL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fL(n){const{inputs:t,backend:e,attrs:s}=n,{sparseIndices:r,sparseValues:o,defaultValue:a}=t,{outputShape:i}=s,{sliceRank:l,numUpdates:c,sliceSize:u,strides:h,outputSize:d}=Pa(o,r,i),p=!1,f=e.bufferSync(r),m=e.bufferSync(o),g=e.data.get(a.dataId).values[0],y=y1(f,m,i,d,u,c,l,h,g,p);return e.makeTensorInfo(i,y.dtype,y.values)}const mL={kernelName:dd,backendName:"cpu",kernelFunc:fL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gL(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{numOrSizeSplits:o,axis:a}=s,i=Et(a,r.shape)[0],l=Ip(r,o,i),c=new Array(r.shape.length).fill(0),u=r.shape.slice();return l.map(h=>{const d=[...u];d[i]=h;const p=gr({inputs:{x:r},backend:e,attrs:{begin:c,size:d}});return c[i]+=h,p})}const yL={kernelName:fc,backendName:"cpu",kernelFunc:gL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bL=Ht(Sa,n=>Math.sqrt(n)),xL={kernelName:Sa,backendName:"cpu",kernelFunc:bL};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wL={kernelName:hd,backendName:"cpu",kernelFunc:({inputs:n,backend:t})=>{const{x:e}=n,s=t;it(e,"square");const r=s.data.get(e.dataId).values,o=new Float32Array(r.length);for(let i=0;i<r.length;++i){const l=r[i];o[i]=l*l}return{dataId:s.write(o,e.shape,e.dtype),shape:e.shape,dtype:e.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vL=Ht(Fa,(n,t)=>{const e=t;return isNaN(n)?NaN:n>0?1:e.alpha}),$L={kernelName:Fa,backendName:"cpu",kernelFunc:vL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kL(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{begin:o,end:a,strides:i,beginMask:l,endMask:c,ellipsisMask:u,newAxisMask:h,shrinkAxisMask:d}=s;it(r,"stridedSlice");const{nonStrided:p,$begin:f,$strides:m,size:g,newShape:y,outShape:b}=Sd(r.shape,o,a,i,l,c,u,h,d),$=le({inputs:{x:r},backend:e,attrs:{shape:y}});let x;if(p){const C=gr({inputs:{x:$},backend:e,attrs:{begin:f,size:g}});x=le({inputs:{x:C},backend:e,attrs:{shape:b}}),e.disposeIntermediateTensorInfo(C)}else if(b.some(C=>C===0))x=e.makeTensorInfo(b,r.dtype,[]);else{const C=e.bufferSync($),k=X0(b,C,m,f);x=e.makeTensorInfo(k.shape,k.dtype,k.values)}const w=le({inputs:{x},backend:e,attrs:{shape:b}});return e.disposeIntermediateTensorInfo($),e.disposeIntermediateTensorInfo(x),w}const CL={kernelName:pd,backendName:"cpu",kernelFunc:kL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NL=Ht(Aa,n=>Math.tan(n)),IL={kernelName:Aa,backendName:"cpu",kernelFunc:NL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SL=Ht(Da,n=>Math.tanh(n)),TL={kernelName:Da,backendName:"cpu",kernelFunc:SL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EL(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{reps:o}=s;it(r,"tile");const a=J0(e.bufferSync(r),o);return e.makeTensorInfo(a.shape,a.dtype,a.values)}const AL={kernelName:Ra,backendName:"cpu",kernelFunc:EL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DL(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{k:o,sorted:a}=s;it(r,"topk");const i=e.data.get(r.dataId).values,[l,c]=Z0(i,r.shape,r.dtype,o);return[e.makeTensorInfo(l.shape,l.dtype,l.values),e.makeTensorInfo(c.shape,c.dtype,c.values)]}const RL={kernelName:fd,backendName:"cpu",kernelFunc:DL};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FL(n){const{inputs:t,attrs:e,backend:s}=n,{image:r,transforms:o}=t,{interpolation:a,fillMode:i,fillValue:l,outputShape:c}=e,[u,h,d,p]=r.shape,[f,m]=c??[h,d],g=[u,f,m,p],y=ft(r.shape),b=y[0],$=y[1],x=y[2],w=Ge(r.dtype,H(g));w.fill(l);const C=s.data.get(r.dataId).values,k=s.data.get(o.dataId).values;for(let S=0;S<u;++S){const E=o.shape[0]===1?k:k.subarray(S*8,S*8+8);for(let R=0;R<f;++R)for(let L=0;L<m;++L)for(let O=0;O<p;++O){let z;const M=E[6]*L+E[7]*R+1;if(M===0)continue;const V=(E[0]*L+E[1]*R+E[2])/M,K=(E[3]*L+E[4]*R+E[5])/M,G=Hm(V,d,i),j=Hm(K,h,i);switch(a){case"nearest":z=BL(C,h,d,b,$,x,S,j,G,O,l);break;case"bilinear":z=ML(C,h,d,b,$,x,S,j,G,O,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${a}`)}const J=S*b+R*$+L*x+O;w[J]=z}return s.makeTensorInfo(g,r.dtype,w)}return{dataId:s.write(w,g,r.dtype),shape:r.shape,dtype:r.dtype}}const OL={kernelName:md,backendName:"cpu",kernelFunc:FL};function Hm(n,t,e){switch(e){case"reflect":return _L(n,t);case"wrap":return LL(n,t);case"nearest":return zL(n,t);case"constant":default:return PL(n)}}function _L(n,t){let e=n;if(e<0)if(t<=1)e=0;else{const s=2*t;e<s&&(e=s*Math.trunc(-e/s)+e),e=e<-t?e+s:-e-1}else if(e>t-1)if(t<=1)e=0;else{const s=2*t;e-=s*Math.trunc(e/s),e>=t&&(e=s-e-1)}return cr(0,e,t-1)}function LL(n,t){let e=n;if(e<0)if(t<=1)e=0;else{const s=t-1;e+=t*(Math.trunc(-e/s)+1)}else if(e>t-1)if(t<=1)e=0;else{const s=t-1;e-=t*Math.trunc(e/s)}return cr(0,e,t-1)}function PL(n,t){return n}function zL(n,t){return cr(0,n,t-1)}function $o(n,t,e,s,r,o,a,i,l,c,u){const h=a*s+i*r+l*o+c;return 0<=i&&i<t&&0<=l&&l<e?n[h]:u}function BL(n,t,e,s,r,o,a,i,l,c,u){const h=Math.round(i),d=Math.round(l);return $o(n,t,e,s,r,o,a,h,d,c,u)}function ML(n,t,e,s,r,o,a,i,l,c,u){const h=Math.floor(i),d=Math.floor(l),p=h+1,f=d+1,m=(f-l)*$o(n,t,e,s,r,o,a,h,d,c,u)+(l-d)*$o(n,t,e,s,r,o,a,h,f,c,u),g=(f-l)*$o(n,t,e,s,r,o,a,p,d,c,u)+(l-d)*$o(n,t,e,s,r,o,a,p,f,c,u);return(p-i)*m+(i-h)*g}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VL(n){const{inputs:t,attrs:e,backend:s}=n,{axis:r}=e,{x:o}=t;it(o,"unique");const a=s.data.get(o.dataId).values,{outputValues:i,outputShape:l,indices:c}=Q0(a,r,o.shape,o.dtype);return[s.makeTensorInfo(l,o.dtype,i),s.makeTensorInfo([c.length],"int32",c)]}const WL={kernelName:gd,backendName:"cpu",kernelFunc:VL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UL(n){const{inputs:t,backend:e,attrs:s}=n,{value:r}=t;let{axis:o}=s;o<0&&(o+=r.shape.length);const a=r.shape.length,i=r.shape[o],l=new Array(a-1);let c=0;for(let p=0;p<a;p++)p!==o&&(l[c++]=r.shape[p]);const u=new Array(a).fill(0),h=r.shape.slice();h[o]=1;const d=new Array(i);for(let p=0;p<d.length;p++){u[o]=p;const f=gr({inputs:{x:r},backend:e,attrs:{begin:u,size:h}});d[p]=le({inputs:{x:f},backend:e,attrs:{shape:l}}),e.disposeIntermediateTensorInfo(f)}return d}const GL={kernelName:yc,backendName:"cpu",kernelFunc:UL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HL(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,segmentIds:o}=t,{numSegments:a}=s;it(r,"unsortedSegmentSum");const i=r.shape.length,l=o.shape.length,c=[],u=[],h=i-l;let d=o;for(let f=0;f<h;++f){const m=pl({inputs:{input:d},backend:e,attrs:{dim:f+1}});d=m,u.push(m)}for(let f=0;f<a;++f){const m=Ws(f,"int32"),g=e.makeTensorInfo([],"int32",m),y=u1({inputs:{a:g,b:d},backend:e}),b=Vs({inputs:{x:y},backend:e,attrs:{dtype:"float32"}}),$=nf({inputs:{a:b,b:r},backend:e}),x=Zc({inputs:{x:$},backend:e,attrs:{axis:0,keepDims:!1}});c.push(x),u.push(g),u.push(y),u.push(b),u.push($),u.push(x)}const p=m1({inputs:c,backend:e,attrs:{axis:0}});return u.forEach(f=>e.disposeIntermediateTensorInfo(f)),p}const jL={kernelName:bc,backendName:"cpu",kernelFunc:HL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qL=[jD,YA,KD,YD,nD,ZD,tR,nR,rR,aR,lR,uR,dR,mR,yR,wR,$R,CR,IR,GD,TR,AR,RR,tD,rD,OR,JA,LR,zR,VR,UR,BR,qR,XR,HR,JR,QR,eF,sF,oF,iF,lF,uF,dF,fF,mF,yF,gF,bh,PD,xF,vF,EF,oD,AF,iD,LF,PF,BF,cD,WF,GF,jF,KF,YF,hD,QF,ZA,eO,PR,sO,oO,iO,zD,pD,uO,dO,mD,fO,yO,xO,$O,CO,IO,yD,EO,DO,FO,_O,PO,SO,MO,WO,xD,GO,qO,h_,vD,kD,f_,y_,w_,ND,$_,C_,N_,g1,E_,MD,TD,D_,QA,F_,VD,WD,UD,__,P_,B_,V_,U_,G_,j_,AD,K_,Y_,tL,nL,rL,aL,lL,DD,c_,hL,pL,mL,yL,xL,wL,FD,$L,CL,_D,zO,IL,TL,AL,RL,ID,OL,WL,GL,jL,k_];for(const n of qL)zg(n);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qs={},ku={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function KL(n,t){Qs[n]=t}function us(n){if(!(n in Qs)){const e=YL(n);if(e!==null)Qs[n]=e;else return console.log("Could not get context for WebGL version",n),null}const t=Qs[n];return t.isContextLost()?(delete Qs[n],us(n)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),Qs[n])}function XL(n){if(typeof OffscreenCanvas<"u"&&n===2)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function YL(n){if(n!==1&&n!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const t=XL(n);return t.addEventListener("webglcontextlost",e=>{e.preventDefault(),delete Qs[n]},!1),n===1?t.getContext("webgl",ku)||t.getContext("experimental-webgl",ku):t.getContext("webgl2",ku)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Oo;(function(n){n[n.DENSE=0]="DENSE",n[n.SHARED_BATCH=1]="SHARED_BATCH"})(Oo||(Oo={}));var mn;(function(n){n[n.RENDER=0]="RENDER",n[n.UPLOAD=1]="UPLOAD",n[n.PIXELS=2]="PIXELS",n[n.DOWNLOAD=3]="DOWNLOAD"})(mn||(mn={}));var Me;(function(n){n[n.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",n[n.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",n[n.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",n[n.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",n[n.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"})(Me||(Me={}));function si(n,t){return[t,n]}function JL(n,t){return n*t}function Co(n){const t=H(n),e=Math.ceil(t/4);return Eu(e)}function co(n,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(n/2))]}function ZL(n,t){const[e,s]=co(n,t);return e*s*4}function uf(n,t){const e=n;let s,r,o,a,i,l,c,u,h,d;return X().getNumber("WEBGL_VERSION")===2?(s=e.R32F,r=e.R16F,o=e.RGBA16F,a=e.RGBA32F,i=e.RED,c=4,u=1,h=e.HALF_FLOAT,d=e.FLOAT):(s=n.RGBA,r=n.RGBA,o=n.RGBA,a=e.RGBA,i=n.RGBA,c=4,u=4,h=t!=null?t.HALF_FLOAT_OES:null,d=n.FLOAT),l=n.RGBA,{internalFormatFloat:s,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:o,internalFormatPackedFloat:a,textureFormatFloat:i,downloadTextureFormat:l,downloadUnpackNumChannels:c,defaultNumChannels:u,textureTypeHalfFloat:h,textureTypeFloat:d}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lt(n,t){const e=t();return X().getBool("DEBUG")&&QL(n),e}function QL(n){const t=n.getError();if(t!==n.NO_ERROR)throw new Error("WebGL Error: "+sP(n,t))}const tP=596e-10,eP=65504;function nP(n){return!!(X().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||n===0||tP<Math.abs(n)&&Math.abs(n)<eP)}function sP(n,t){switch(t){case n.NO_ERROR:return"NO_ERROR";case n.INVALID_ENUM:return"INVALID_ENUM";case n.INVALID_VALUE:return"INVALID_VALUE";case n.INVALID_OPERATION:return"INVALID_OPERATION";case n.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case n.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case n.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function mi(n,t){return Cs(n,()=>n.getExtension(t),'Extension "'+t+'" not supported on this browser.')}function rP(n,t){const e=Cs(n,()=>n.createShader(n.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(lt(n,()=>n.shaderSource(e,t)),lt(n,()=>n.compileShader(e)),n.getShaderParameter(e,n.COMPILE_STATUS)===!1)throw console.log(n.getShaderInfoLog(e)),new Error("Failed to compile vertex shader.");return e}function oP(n,t){const e=Cs(n,()=>n.createShader(n.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(lt(n,()=>n.shaderSource(e,t)),lt(n,()=>n.compileShader(e)),n.getShaderParameter(e,n.COMPILE_STATUS)===!1)throw iP(t,n.getShaderInfoLog(e)),new Error("Failed to compile fragment shader.");return e}const aP=/ERROR: [0-9]+:([0-9]+):/g;function iP(n,t){const e=aP.exec(t);if(e==null){console.log(`Couldn't parse line number in error: ${t}`),console.log(n);return}const s=+e[1],r=n.split(`
`),o=r.length.toString().length+2,a=r.map((h,d)=>_r((d+1).toString(),o)+h);let i=0;for(let h=0;h<a.length;h++)i=Math.max(a[h].length,i);const l=a.slice(0,s-1),c=a.slice(s-1,s),u=a.slice(s);console.log(l.join(`
`)),console.log(t.split(`
`)[0]),console.log(`%c ${_r(c[0],i)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(u.join(`
`))}function lP(n){return Cs(n,()=>n.createProgram(),"Unable to create WebGLProgram.")}function cP(n,t){if(lt(n,()=>n.linkProgram(t)),n.getProgramParameter(t,n.LINK_STATUS)===!1)throw console.log(n.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function Cu(n,t){if(lt(n,()=>n.validateProgram(t)),n.getProgramParameter(t,n.VALIDATE_STATUS)===!1)throw console.log(n.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function uP(n,t){const e=Cs(n,()=>n.createBuffer(),"Unable to create WebGLBuffer");return lt(n,()=>n.bindBuffer(n.ARRAY_BUFFER,e)),lt(n,()=>n.bufferData(n.ARRAY_BUFFER,t,n.STATIC_DRAW)),e}function hP(n,t){const e=Cs(n,()=>n.createBuffer(),"Unable to create WebGLBuffer");return lt(n,()=>n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,e)),lt(n,()=>n.bufferData(n.ELEMENT_ARRAY_BUFFER,t,n.STATIC_DRAW)),e}function dP(n){return Cs(n,()=>n.createTexture(),"Unable to create WebGLTexture.")}function pP(n,t){const e=X().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(n<=0||t<=0){const s=`[${n}x${t}]`;throw new Error("Requested texture size "+s+" is invalid.")}if(n>e||t>e){const s=`[${n}x${t}]`,r=`[${e}x${e}]`;throw new Error("Requested texture size "+s+" greater than WebGL maximum on this browser / GPU "+r+".")}}function fP(n){return Cs(n,()=>n.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function jm(n,t,e,s,r,o,a){const i=n.getAttribLocation(t,e);return i===-1?!1:(lt(n,()=>n.bindBuffer(n.ARRAY_BUFFER,s)),lt(n,()=>n.vertexAttribPointer(i,r,n.FLOAT,!1,o,a)),lt(n,()=>n.enableVertexAttribArray(i)),!0)}function mP(n,t,e){wP(n,e),lt(n,()=>n.activeTexture(n.TEXTURE0+e)),lt(n,()=>n.bindTexture(n.TEXTURE_2D,t))}function gP(n,t,e){return Cs(n,()=>n.getUniformLocation(t,e),'uniform "'+e+'" not present in program.')}function yP(n,t,e){return n.getUniformLocation(t,e)}function bP(n,t,e,s){lt(n,()=>mP(n,t,s)),lt(n,()=>n.uniform1i(e,s))}function Nu(n,t,e){lt(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,e)),lt(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,t,0))}function qm(n,t){lt(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,t)),lt(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,null,0))}function gi(n){const t=n.checkFramebufferStatus(n.FRAMEBUFFER);if(t!==n.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+xP(n,t))}function xP(n,t){switch(t){case n.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case n.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function Cs(n,t,e){const s=lt(n,()=>t());if(s==null)throw new Error(e);return s}function wP(n,t){const e=n.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,s=t+n.TEXTURE0;if(s<n.TEXTURE0||s>e){const r=`[gl.TEXTURE0, gl.TEXTURE${e}]`;throw new Error(`textureUnit must be in ${r}.`)}}function Kr(n,t=2){return H(n.slice(0,n.length-t))}function Xr(n){if(n.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[n.length>1?n[n.length-2]:1,n[n.length-1]]}function Iu(n){let t=[1,1,1];return n.length===0||n.length===1&&n[0]===1||(t=[Kr(n),...Xr(n)]),t}function vP(n,t=!1){let e=X().getNumber("WEBGL_MAX_TEXTURE_SIZE");t&&(e=e*2,n=n.map((r,o)=>o>=n.length-2?Tg(n[o]):n[o]),n.length===1&&(n=[2,n[0]])),n.length!==2&&(n=yr(n).newShape);let s=H(n);if(n.length<=1&&s<=e)return[1,s];if(n.length===2&&n[0]<=e&&n[1]<=e)return n;if(n.length===3&&n[0]*n[1]<=e&&n[2]<=e)return[n[0]*n[1],n[2]];if(n.length===3&&n[0]<=e&&n[1]*n[2]<=e)return[n[0],n[1]*n[2]];if(n.length===4&&n[0]*n[1]*n[2]<=e&&n[3]<=e)return[n[0]*n[1]*n[2],n[3]];if(n.length===4&&n[0]<=e&&n[1]*n[2]*n[3]<=e)return[n[0],n[1]*n[2]*n[3]];if(t){const r=Kr(n);let o=2,a=2;return n.length&&([o,a]=Xr(n)),s=r*(o/2)*(a/2),Eu(s).map(i=>i*2)}return Eu(s)}function yi(n){return n%2===0}function ml(n,t){if(n=n.slice(-2),t=t.slice(-2),Gt(n,t)||!n.length||!t.length||n[0]===0||n[1]===0||t[0]===0||t[1]===0)return!0;if(n.length!==t.length){const e=n.slice(-1)[0],s=t.slice(-1)[0];if(e===s||yi(e)&&yi(s)&&(n[0]===1||t[0]===1))return!0}return n[1]===t[1]&&yi(n[0])&&yi(t[0])}let Su,Tu;function $P(n){if(Su==null){const t=us(n);Su=t.getParameter(t.MAX_TEXTURE_SIZE)}return Su}function kP(n){if(Tu==null){const t=us(n);Tu=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,Tu)}function CP(n){if(n===0)return 0;let t;const e=us(n);return An(e,"EXT_disjoint_timer_query_webgl2")&&n===2?t=2:An(e,"EXT_disjoint_timer_query")?t=1:t=0,t}function An(n,t){return n.getExtension(t)!=null}function Km(n){try{if(us(n)!=null)return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function NP(n){if(n===0)return!1;const t=us(n);if(n===1){if(!An(t,"OES_texture_float"))return!1}else if(!An(t,"EXT_color_buffer_float"))return!1;return wh(t)}function IP(n){if(n===0)return!1;const t=us(n);if(n===1){if(!An(t,"OES_texture_float")||!An(t,"WEBGL_color_buffer_float"))return!1}else{if(An(t,"EXT_color_buffer_float"))return wh(t);const s="EXT_color_buffer_half_float";if(An(t,s)){const r=t.getExtension(s);return SP(t,r)}return!1}return wh(t)}function wh(n){const t=uf(n),e=n.createTexture();n.bindTexture(n.TEXTURE_2D,e),n.texImage2D(n.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const o=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,o),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,e,0);const a=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(e),n.deleteFramebuffer(o),a}function SP(n,t){const e=uf(n,t),s=n.createTexture();n.bindTexture(n.TEXTURE_2D,s),n.texImage2D(n.TEXTURE_2D,0,e.internalFormatHalfFloat,1,1,0,e.textureFormatFloat,e.textureTypeHalfFloat,null);const a=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,a),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,s,0);const i=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(s),n.deleteFramebuffer(a),i}function TP(n){return n!==2?!1:us(n).fenceSync!=null}function ri(n,t){Array.isArray(n)||(n=[n]),n.forEach(e=>{e!=null&&N(e.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the WebGL backend.`)})}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mt=X();mt.registerFlag("HAS_WEBGL",()=>mt.getNumber("WEBGL_VERSION")>0);mt.registerFlag("WEBGL_VERSION",()=>Km(2)?2:Km(1)?1:0);mt.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);mt.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>mt.get("WEBGL_VERSION")===2);mt.registerFlag("WEBGL_CPU_FORWARD",()=>!0);mt.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);mt.registerFlag("WEBGL_PACK",()=>mt.getBool("HAS_WEBGL"));mt.registerFlag("WEBGL_PACK_NORMALIZATION",()=>mt.getBool("WEBGL_PACK"));mt.registerFlag("WEBGL_PACK_CLIP",()=>mt.getBool("WEBGL_PACK"));mt.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>!1);mt.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>mt.getBool("WEBGL_PACK"));mt.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>mt.getBool("WEBGL_PACK"));mt.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>mt.getBool("WEBGL_PACK"));mt.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>mt.getBool("WEBGL_PACK"));mt.registerFlag("WEBGL_PACK_REDUCE",()=>mt.getBool("WEBGL_PACK"));mt.registerFlag("WEBGL_LAZILY_UNPACK",()=>mt.getBool("WEBGL_PACK"));mt.registerFlag("WEBGL_CONV_IM2COL",()=>mt.getBool("WEBGL_PACK"));mt.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>$P(mt.getNumber("WEBGL_VERSION")));mt.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>kP(mt.getNumber("WEBGL_VERSION")));mt.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const n=mt.getNumber("WEBGL_VERSION");return n===0?0:CP(n)});mt.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>mt.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!Gg());mt.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>NP(mt.getNumber("WEBGL_VERSION")));mt.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>mt.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:mt.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));mt.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>IP(mt.getNumber("WEBGL_VERSION")));mt.registerFlag("WEBGL_FENCE_API_ENABLED",()=>TP(mt.getNumber("WEBGL_VERSION")));mt.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>mt.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);mt.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,n=>{if(n<0&&n!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${n}.`)});mt.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>Gg()&&mt.getBool("IS_CHROME")?1:-1,n=>{if(n<0&&n!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${n}.`)});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tn(){let n,t,e,s,r,o,a,i,l,c;return X().getNumber("WEBGL_VERSION")===2?(n="#version 300 es",t="in",e="out",s="in",r="texture",o="outputColor",a="out vec4 outputColor;",i=`
      bool isnan_custom(float val) {
        return (val > 0.0 || val < 0.0) ? false : val != 0.0;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `,l="",c=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(n="",t="attribute",e="varying",s="varying",r="texture2D",o="gl_FragColor",a="",i=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,l=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,c=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:n,attribute:t,varyingVs:e,varyingFs:s,texture2D:r,output:o,defineOutput:a,defineSpecialNaN:i,defineSpecialInf:l,defineRound:c}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cr(n,t,e="index"){const s=ft(t);return s.map((r,o)=>{const a=`int ${n[o]} = ${e} / ${r}`,i=o===s.length-1?`int ${n[o+1]} = ${e} - ${n[o]} * ${r}`:`index -= ${n[o]} * ${r}`;return`${a}; ${i};`}).join("")}function hf(n){const t=ft(n).map(e=>e.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;
  }
`}const b1=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`;/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class EP{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=Oo.DENSE;const e=Co(t),s=tn();this.outputShape=t,this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${Cr(["r","c","d"],t)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx *
          vec2(${e[0]}, ${e[1]}));
        int index = 4 * (resTexRC.x * ${e[1]} + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${s.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class AP{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=Oo.DENSE;const e=Co(t),s=tn();this.outputShape=t,this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${Cr(["r","c","d"],t)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx *
          vec2(${e[0]}, ${e[1]}));
        int index = 4 * (resTexRC.x * ${e[1]} + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${s.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class DP{constructor(t){this.variableNames=["A"],this.outTexUsage=mn.DOWNLOAD;const e=tn();this.outputShape=t,this.userCode=`
      ${b1}

      void main() {
        float x = getAAtOutCoords();
        ${e.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class RP{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=mn.DOWNLOAD;const e=tn();this.outputShape=t,this.userCode=`
      ${b1}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${e.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class FP{constructor(t,e,s=!1){this.variableNames=["A"];const r=tn(),[o,a]=e;this.outputShape=t;let i="result";s&&(i="floor(result * 255. + 0.5)"),this.userCode=`
      ${hf(t)}

      void main() {
        ivec3 coords = getOutputCoords();

        int flatIndex = getFlatIndex(coords);
        int offset = imod(flatIndex, 4);

        flatIndex = idiv(flatIndex, 4, 1.);

        int r = flatIndex / ${a};
        int c = imod(flatIndex, ${a});
        vec2 uv = (vec2(c, r) + halfCR) / vec2(${a}.0, ${o}.0);
        vec4 values = ${r.texture2D}(A, uv);

        float result;

        if(offset == 0) {
          result = values[0];
        } else if(offset == 1) {
          result = values[1];
        } else if(offset == 2) {
          result = values[2];
        } else {
          result = values[3];
        }

        ${r.output} = vec4(${i}, 0., 0., 0.);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class OP{constructor(t,e,s=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const r=tn(),[o,a]=e;this.outputShape=t;let i="",l="result";s&&(l="floor(result * 255. + 0.5)");for(let c=0;c<=1;c++)for(let u=0;u<=1;u++){const h=c*2+u;i+=`
          localCoords = coords;
          if(localCoords[2] + ${u} < ${t[2]}) {
            localCoords[2] += ${u};
            if(localCoords[1] + ${c} < ${t[1]}) {
              localCoords[1] += ${c};

              flatIndex = getFlatIndex(localCoords);
              offset = imod(flatIndex, 4);

              flatIndex = idiv(flatIndex, 4, 1.);

              r = flatIndex / ${a};
              c = imod(flatIndex, ${a});
              uv = (vec2(c, r) + halfCR) / vec2(${a}.0, ${o}.0);
              values = ${r.texture2D}(A, uv);

              if(offset == 0) {
                result[${h}] = values[0];
              } else if(offset == 1) {
                result[${h}] = values[1];
              } else if(offset == 2) {
                result[${h}] = values[2];
              } else {
                result[${h}] = values[3];
              }
            }
          }
        `}this.userCode=`
      ${hf(t)}

      void main() {
        ivec3 coords = getOutputCoords();

        vec4 result = vec4(0.);
        int flatIndex, r, c, offset;
        ivec3 localCoords;
        vec2 uv;
        vec4 values;

        ${i}

        ${r.output} = ${l};
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _P(n){const t=tn(),e=`${t.version}
    precision highp float;
    ${t.attribute} vec3 clipSpacePos;
    ${t.attribute} vec2 uv;
    ${t.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return rP(n,e)}function LP(n){const t=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return uP(n,t)}function PP(n){const t=new Uint16Array([0,1,2,2,1,3]);return hP(n,t)}function oi(n,t,e,s,r,o){pP(t,e);const a=dP(n),i=n.TEXTURE_2D;return lt(n,()=>n.bindTexture(i,a)),lt(n,()=>n.texParameteri(i,n.TEXTURE_WRAP_S,n.CLAMP_TO_EDGE)),lt(n,()=>n.texParameteri(i,n.TEXTURE_WRAP_T,n.CLAMP_TO_EDGE)),lt(n,()=>n.texParameteri(i,n.TEXTURE_MIN_FILTER,n.NEAREST)),lt(n,()=>n.texParameteri(i,n.TEXTURE_MAG_FILTER,n.NEAREST)),lt(n,()=>n.texImage2D(i,0,s,t,e,0,r,o,null)),lt(n,()=>n.bindTexture(n.TEXTURE_2D,null)),a}function x1(n){return n.internalFormatFloat}function zP(n,t,e,s){const[r,o]=si(t,e);return oi(n,r,o,x1(s),s.textureFormatFloat,n.FLOAT)}function w1(n){return n.internalFormatHalfFloat}function BP(n,t,e,s){const[r,o]=si(t,e);return oi(n,r,o,w1(s),s.textureFormatFloat,s.textureTypeHalfFloat)}function v1(n){return n.downloadTextureFormat}function MP(n,t,e,s){const[r,o]=si(t,e);return oi(n,r,o,v1(s),n.RGBA,n.UNSIGNED_BYTE)}function $1(n){return n.internalFormatPackedFloat}function VP(n,t,e,s){const[r,o]=co(t,e);return oi(n,r,o,$1(s),n.RGBA,n.FLOAT)}function k1(n){return n.internalFormatPackedHalfFloat}function WP(n,t,e,s){const[r,o]=co(t,e);return oi(n,r,o,k1(s),n.RGBA,s.textureTypeHalfFloat)}function UP(n,t,e){return lt(n,()=>n.bindBuffer(n.ARRAY_BUFFER,e)),jm(n,t,"clipSpacePos",e,3,20,0)&&jm(n,t,"uv",e,2,20,12)}function GP(n,t,e,s,r,o){lt(n,()=>n.bindTexture(n.TEXTURE_2D,t));let a,i,l;r instanceof Uint8Array?(a=new Uint8Array(e*s*4),i=n.UNSIGNED_BYTE,l=n.RGBA):(a=new Float32Array(e*s*4),i=n.FLOAT,l=o.internalFormatPackedFloat),a.set(r),lt(n,()=>n.texImage2D(n.TEXTURE_2D,0,l,e,s,0,n.RGBA,i,a)),lt(n,()=>n.bindTexture(n.TEXTURE_2D,null))}function HP(n,t,e){lt(n,()=>n.bindTexture(n.TEXTURE_2D,t)),e.data instanceof Uint8Array?lt(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,e.width,e.height,0,n.RGBA,n.UNSIGNED_BYTE,e.data)):lt(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,n.RGBA,n.UNSIGNED_BYTE,e)),lt(n,()=>n.bindTexture(n.TEXTURE_2D,null))}function jP(n,t,e,s){const r=n.createBuffer();lt(n,()=>n.bindBuffer(n.PIXEL_PACK_BUFFER,r));const i=4*4*t*e;return lt(n,()=>n.bufferData(n.PIXEL_PACK_BUFFER,i,n.STREAM_READ)),lt(n,()=>n.readPixels(0,0,e,t,n.RGBA,n.FLOAT,0)),lt(n,()=>n.bindBuffer(n.PIXEL_PACK_BUFFER,null)),r}function qP(n,t,e){const s=n,r=new Float32Array(e);return s.bindBuffer(s.PIXEL_PACK_BUFFER,t),s.getBufferSubData(s.PIXEL_PACK_BUFFER,0,r),s.bindBuffer(s.PIXEL_PACK_BUFFER,null),r}function KP(n,t,e,s){const[r,o]=si(t,e),a=4,i=new Uint8Array(JL(t*e,a));return lt(n,()=>n.readPixels(0,0,r,o,s.downloadTextureFormat,n.UNSIGNED_BYTE,i)),new Float32Array(i.buffer)}function XP(n,t,e,s,r,o,a,i){const l=n,c=new Float32Array(ZL(o,a));return l.bindBuffer(l.PIXEL_PACK_BUFFER,t),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,c),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),c}function YP(n,t,e){const s=new Float32Array(t*e*4);return lt(n,()=>n.readPixels(0,0,e,t,n.RGBA,n.FLOAT,s)),s}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class JP{constructor(t){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const e=X().getNumber("WEBGL_VERSION");t!=null?(this.gl=t,KL(e,t)):this.gl=us(e);let s="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(X().getNumber("WEBGL_VERSION")===1){const o="OES_texture_float",a="OES_texture_half_float";if(this.textureFloatExtension=mi(this.gl,o),An(this.gl,a))this.textureHalfFloatExtension=mi(this.gl,a);else if(X().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(s),An(this.gl,r))this.colorBufferHalfFloatExtension=mi(this.gl,r);else if(X().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(s="EXT_color_buffer_float",An(this.gl,s))this.colorBufferFloatExtension=this.gl.getExtension(s);else if(An(this.gl,r))this.colorBufferHalfFloatExtension=this.gl.getExtension(r);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=LP(this.gl),this.indexBuffer=PP(this.gl),this.framebuffer=fP(this.gl),this.textureConfig=uf(this.gl,this.textureHalfFloatExtension)}get debug(){return X().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const t=this.gl;lt(t,()=>t.finish()),lt(t,()=>t.bindFramebuffer(t.FRAMEBUFFER,null)),lt(t,()=>t.deleteFramebuffer(this.framebuffer)),lt(t,()=>t.bindBuffer(t.ARRAY_BUFFER,null)),lt(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null)),lt(t,()=>t.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(t,e){return this.throwIfDisposed(),zP(this.gl,t,e,this.textureConfig)}createFloat16MatrixTexture(t,e){return this.throwIfDisposed(),BP(this.gl,t,e,this.textureConfig)}createUnsignedBytesMatrixTexture(t,e){return this.throwIfDisposed(),MP(this.gl,t,e,this.textureConfig)}uploadPixelDataToTexture(t,e){this.throwIfDisposed(),HP(this.gl,t,e)}uploadDenseMatrixToTexture(t,e,s,r){this.throwIfDisposed(),GP(this.gl,t,e,s,r,this.textureConfig)}createFloat16PackedMatrixTexture(t,e){return this.throwIfDisposed(),WP(this.gl,t,e,this.textureConfig)}createPackedMatrixTexture(t,e){return this.throwIfDisposed(),VP(this.gl,t,e,this.textureConfig)}deleteMatrixTexture(t){this.throwIfDisposed(),this.outputTexture===t&&(qm(this.gl,this.framebuffer),this.outputTexture=null),lt(this.gl,()=>this.gl.deleteTexture(t))}downloadByteEncodedFloatMatrixFromOutputTexture(t,e,s){return this.downloadMatrixDriver(t,()=>KP(this.gl,e,s,this.textureConfig))}downloadPackedMatrixFromBuffer(t,e,s,r,o,a){return XP(this.gl,t,e,s,r,o,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(t,e){return qP(this.gl,t,e)}createBufferFromTexture(t,e,s){this.bindTextureToFrameBuffer(t);const r=jP(this.gl,e,s,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const t=this.createFence(this.gl);return this.pollFence(t)}createFence(t){let e,s;if(X().getBool("WEBGL_FENCE_API_ENABLED")){const r=t,o=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);t.flush(),s=()=>{const a=r.clientWaitSync(o,0,0);return a===r.ALREADY_SIGNALED||a===r.CONDITION_SATISFIED},e=o}else X().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(e=this.beginQuery(),this.endQuery(),s=()=>this.isQueryAvailable(e,X().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):s=()=>!0;return{query:e,isFencePassed:s}}downloadMatrixFromPackedTexture(t,e,s){return this.downloadMatrixDriver(t,()=>YP(this.gl,e,s))}createProgram(t){this.throwIfDisposed();const e=this.gl,s=oP(e,t),r=_P(e),o=lP(e);return lt(e,()=>e.attachShader(o,r)),lt(e,()=>e.attachShader(o,s)),cP(e,o),this.debug&&Cu(e,o),this.vertexAttrsAreBound||(this.setProgram(o),this.vertexAttrsAreBound=UP(e,this.program,this.vertexBuffer)),o}deleteProgram(t){this.throwIfDisposed(),t===this.program&&(this.program=null),t!=null&&lt(this.gl,()=>this.gl.deleteProgram(t))}setProgram(t){this.throwIfDisposed(),this.program=t,this.program!=null&&this.debug&&Cu(this.gl,this.program),lt(this.gl,()=>this.gl.useProgram(t))}getUniformLocation(t,e,s=!0){return this.throwIfDisposed(),s?gP(this.gl,t,e):yP(this.gl,t,e)}getAttributeLocation(t,e){return this.throwIfDisposed(),lt(this.gl,()=>this.gl.getAttribLocation(t,e))}getUniformLocationNoThrow(t,e){return this.throwIfDisposed(),this.gl.getUniformLocation(t,e)}setInputMatrixTexture(t,e,s){this.throwIfDisposed(),this.throwIfNoProgram(),bP(this.gl,t,e,s)}setOutputMatrixTexture(t,e,s){this.setOutputMatrixTextureDriver(t,s,e)}setOutputPackedMatrixTexture(t,e,s){this.throwIfDisposed();const[r,o]=co(e,s);this.setOutputMatrixTextureDriver(t,r,o)}setOutputMatrixWriteRegion(t,e,s,r){this.setOutputMatrixWriteRegionDriver(s,t,r,e)}setOutputPackedMatrixWriteRegion(t,e,s,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&Cu(this.gl,this.program),gi(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const t=this.gl;this.debug&&this.debugValidate(),lt(t,()=>t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),lt(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=mi(this.gl,X().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(X().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const s=this.gl,r=this.getQueryTimerExtensionWebGL2(),o=s.createQuery();return s.beginQuery(r.TIME_ELAPSED_EXT,o),o}const t=this.getQueryTimerExtensionWebGL1(),e=t.createQueryEXT();return t.beginQueryEXT(t.TIME_ELAPSED_EXT,e),e}endQuery(){if(X().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const e=this.gl,s=this.getQueryTimerExtensionWebGL2();e.endQuery(s.TIME_ELAPSED_EXT);return}const t=this.getQueryTimerExtensionWebGL1();t.endQueryEXT(t.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(t){return await xf(()=>this.disposed||this.isQueryAvailable(t,X().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(t,X().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(t,e){if(e===0)return null;if(e===2){const s=this.gl;return s.getQueryParameter(t,s.QUERY_RESULT)/1e6}else{const s=this.getQueryTimerExtensionWebGL1();return s.getQueryObjectEXT(t,s.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(t,e){if(e===0)return!0;if(e===2){const s=this.gl,r=this.getQueryTimerExtensionWebGL2(),o=s.getQueryParameter(t,s.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(r.GPU_DISJOINT_EXT)),o&&!this.disjoint}else{const s=this.getQueryTimerExtensionWebGL1(),r=s.getQueryObjectEXT(t,s.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(s.GPU_DISJOINT_EXT)),r&&!this.disjoint}}pollFence(t){return new Promise(e=>{this.addItemToPoll(()=>t.isFencePassed(),()=>e())})}pollItems(){const t=ZP(this.itemsToPoll.map(e=>e.isDoneFn));for(let e=0;e<=t;++e){const{resolveFn:s}=this.itemsToPoll[e];s()}this.itemsToPoll=this.itemsToPoll.slice(t+1)}addItemToPoll(t,e){this.itemsToPoll.push({isDoneFn:t,resolveFn:e}),!(this.itemsToPoll.length>1)&&xf(()=>(this.pollItems(),this.itemsToPoll.length===0))}bindTextureToFrameBuffer(t){this.throwIfDisposed(),Nu(this.gl,t,this.framebuffer),this.debug&&gi(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(Nu(this.gl,this.outputTexture,this.framebuffer),this.debug&&gi(this.gl)):qm(this.gl,this.framebuffer)}downloadMatrixDriver(t,e){this.bindTextureToFrameBuffer(t);const s=e();return this.unbindTextureToFrameBuffer(),s}setOutputMatrixTextureDriver(t,e,s){this.throwIfDisposed();const r=this.gl;Nu(r,t,this.framebuffer),this.debug&&gi(r),this.outputTexture=t,lt(r,()=>r.viewport(0,0,e,s)),lt(r,()=>r.scissor(0,0,e,s))}setOutputMatrixWriteRegionDriver(t,e,s,r){this.throwIfDisposed(),lt(this.gl,()=>this.gl.scissor(t,e,s,r))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}}function ZP(n){let t=0;for(;t<n.length&&n[t]();++t);return t-1}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{getBroadcastDims:C1}=TI;function QP(n,t,e,s){const r=[];n.forEach(f=>{const m=H(f.shapeInfo.logicalShape);f.shapeInfo.isUniform?r.push(`uniform float ${f.name}${m>1?`[${m}]`:""};`):(r.push(`uniform sampler2D ${f.name};`),r.push(`uniform int offset${f.name};`))});const o=r.join(`
`),a=n.map(f=>t3(f,t,s)).join(`
`),i=t.texShape,l=tn(),c=s3(l);let u,h,d=a3(l);return t.isPacked?(u=e3(t.logicalShape,i),h=o3(l)):(u=n3(t.logicalShape,i),h=r3(l)),s&&(d+=u3),[d,c,h,o,u,a,e].join(`
`)}function uo(n){const t=n.shapeInfo.logicalShape;switch(t.length){case 0:return $3(n);case 1:return C3(n);case 2:return I3(n);case 3:return T3(n);case 4:return A3(n);case 5:return D3(n);case 6:return R3(n);default:throw new Error(`${t.length}-D input sampling is not yet supported`)}}function N1(n){switch(n.shapeInfo.logicalShape.length){case 0:return v3(n);case 1:return k3(n);case 2:return N3(n);case 3:return S3(n);default:return E3(n)}}function t3(n,t,e=!1){let s="";e?s+=N1(n):s+=uo(n);const r=n.shapeInfo.logicalShape,o=t.logicalShape;return r.length<=o.length&&(e?s+=F3(n,t):s+=O3(n,t)),s}function e3(n,t){switch(n.length){case 0:return I1();case 1:return h3(n,t);case 2:return x3(n,t);case 3:return p3(n,t);default:return m3(n,t)}}function n3(n,t){switch(n.length){case 0:return I1();case 1:return d3(n,t);case 2:return w3(n,t);case 3:return f3(n,t);case 4:return g3(n,t);case 5:return y3(n,t);case 6:return b3(n,t);default:throw new Error(`${n.length}-D output sampling is not yet supported`)}}function s3(n){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${n.texture2D}(textureSampler, uv).r;
    }
  `}function r3(n){return`
    void setOutput(float val) {
      ${n.output} = vec4(val, 0, 0, 0);
    }
  `}function o3(n){return`
    void setOutput(vec4 val) {
      ${n.output} = val;
    }
  `}function a3(n){return`${n.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${n.varyingFs} vec2 resultUV;
    ${n.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${n.defineSpecialNaN}
    ${n.defineSpecialInf}
    ${n.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${i3}
    ${l3}
    ${c3}
  `}const i3=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,l3=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,c3=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,u3=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function I1(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function h3(n,t){const e=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return e[0]===1?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${e[1]}.0);
      }
    `:e[1]===1?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${e[0]}.0);
      }
    `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      return 2 * (resTexRC.x * ${e[1]} + resTexRC.y);
    }
  `}function d3(n,t){return t[0]===1?`
      int getOutputCoords() {
        return int(resultUV.x * ${t[1]}.0);
      }
    `:t[1]===1?`
      int getOutputCoords() {
        return int(resultUV.y * ${t[0]}.0);
      }
    `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      return resTexRC.x * ${t[1]} + resTexRC.y;
    }
  `}function p3(n,t){const e=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],s=Math.ceil(n[2]/2),r=s*Math.ceil(n[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      int b = index / ${r};
      index -= b * ${r};

      int r = 2 * (index / ${s});
      int c = imod(index, ${s}) * 2;

      return ivec3(b, r, c);
    }
  `}function f3(n,t){const e=Cr(["r","c","d"],n);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${e}
      return ivec3(r, c, d);
    }
  `}function m3(n,t){const e=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],s=Math.ceil(n[n.length-1]/2),r=s*Math.ceil(n[n.length-2]/2);let o=r,a="",i="b, r, c";for(let l=2;l<n.length-1;l++)o*=n[n.length-l-1],a=`
      int b${l} = index / ${o};
      index -= b${l} * ${o};
    `+a,i=`b${l}, `+i;return`
    ivec${n.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${a}

      int b = index / ${r};
      index -= b * ${r};

      int r = 2 * (index / ${s});
      int c = imod(index, ${s}) * 2;

      return ivec${n.length}(${i});
    }
  `}function g3(n,t){const e=Cr(["r","c","d","d2"],n);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${e}
      return ivec4(r, c, d, d2);
    }
  `}function y3(n,t){const e=Cr(["r","c","d","d2","d3"],n);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},
                             ${t[1]}));

      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${e}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function b3(n,t){const e=Cr(["r","c","d","d2","d3","d4"],n);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${e}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function x3(n,t){const e=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(Gt(n,t))return`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${e[0]}, ${e[1]}));
      }
    `;const s=Math.ceil(n[1]/2);return`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));

      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      int r = 2 * (index / ${s});
      int c = imod(index, ${s}) * 2;

      return ivec2(r, c);
    }
  `}function w3(n,t){return Gt(n,t)?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));
      }
    `:n[1]===1?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:n[0]===1?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      int r = index / ${n[1]};
      int c = index - r * ${n[1]};
      return ivec2(r, c);
    }
  `}function Nr(n){return`offset${n}`}function v3(n){const t=n.name,e="get"+t.charAt(0).toUpperCase()+t.slice(1),s=tn();return`
    vec4 ${e}() {
      return ${s.texture2D}(${t}, halfCR);
    }
  `}function $3(n){const t=n.name,e="get"+t.charAt(0).toUpperCase()+t.slice(1);if(n.shapeInfo.isUniform)return`float ${e}() {return ${t};}`;const[s,r]=n.shapeInfo.texShape;if(s===1&&r===1)return`
      float ${e}() {
        return sampleTexture(${t}, halfCR);
      }
    `;const[o,a]=n.shapeInfo.texShape,i=Nr(t);return`
    float ${e}() {
      vec2 uv = uvFromFlat(${o}, ${a}, ${i});
      return sampleTexture(${t}, uv);
    }
  `}function k3(n){const t=n.name,e="get"+t.charAt(0).toUpperCase()+t.slice(1),s=n.shapeInfo.texShape,r=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],o=tn();return`
    vec4 ${e}(int index) {
      vec2 uv = packedUVfrom1D(
        ${r[0]}, ${r[1]}, index);
      return ${o.texture2D}(${t}, uv);
    }
  `}function C3(n){const t=n.name,e="get"+t.charAt(0).toUpperCase()+t.slice(1);if(n.shapeInfo.isUniform)return`
      float ${e}(int index) {
        ${ho(n)}
      }
    `;const s=n.shapeInfo.texShape,r=s[0],o=s[1];if(o===1&&r===1)return`
      float ${e}(int index) {
        return sampleTexture(${t}, halfCR);
      }
    `;const a=Nr(t);return o===1?`
      float ${e}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${a}) + 0.5) / ${r}.0);
        return sampleTexture(${t}, uv);
      }
    `:r===1?`
      float ${e}(int index) {
        vec2 uv = vec2((float(index + ${a}) + 0.5) / ${o}.0, 0.5);
        return sampleTexture(${t}, uv);
      }
    `:`
    float ${e}(int index) {
      vec2 uv = uvFromFlat(${r}, ${o}, index + ${a});
      return sampleTexture(${t}, uv);
    }
  `}function N3(n){const t=n.shapeInfo.logicalShape,e=n.name,s="get"+e.charAt(0).toUpperCase()+e.slice(1),r=n.shapeInfo.texShape,o=r[0],a=r[1],i=tn();if(r!=null&&Gt(t,r))return`
      vec4 ${s}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${a}.0, ${o}.0);

        return ${i.texture2D}(${e}, uv);
      }
    `;const l=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)],c=Math.ceil(t[1]/2);return`
    vec4 ${s}(int row, int col) {
      vec2 uv = packedUVfrom2D(${c}, ${l[0]}, ${l[1]}, row, col);
      return ${i.texture2D}(${e}, uv);
    }
  `}function I3(n){const t=n.shapeInfo.logicalShape,e=n.name,s="get"+e.charAt(0).toUpperCase()+e.slice(1),r=n.shapeInfo.texShape;if(r!=null&&Gt(t,r)){const h=r[0],d=r[1];return`
    float ${s}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${d}.0, ${h}.0);
      return sampleTexture(${e}, uv);
    }
  `}const{newShape:o,keptDims:a}=yr(t),i=o;if(i.length<t.length){const h=po(n,i),d=["row","col"];return`
      ${uo(h)}
      float ${s}(int row, int col) {
        return ${s}(${fo(d,a)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${t[1]}, 1)));
        ${ho(n)}
      }
    `;const l=r[0],c=r[1],u=Nr(e);return c===1?`
    float ${s}(int row, int col) {
      float index = dot(vec3(row, col, ${u}), vec3(${t[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${l}.0);
      return sampleTexture(${e}, uv);
    }
  `:l===1?`
    float ${s}(int row, int col) {
      float index = dot(vec3(row, col, ${u}), vec3(${t[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);
      return sampleTexture(${e}, uv);
    }
  `:`
  float ${s}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${t[1]} + col + ${u};
    vec2 uv = uvFromFlat(${l}, ${c}, index);
    return sampleTexture(${e}, uv);
  }
`}function S3(n){const t=n.shapeInfo.logicalShape,e=n.name,s="get"+e.charAt(0).toUpperCase()+e.slice(1),r=n.shapeInfo.texShape,o=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];if(t[0]===1){const h=t.slice(1),d=[1,2],p=po(n,h),f=["b","row","col"];return`
        ${N1(p)}
        vec4 ${s}(int b, int row, int col) {
          return ${s}(${fo(f,d)});
        }
      `}const a=o[0],i=o[1],l=Math.ceil(t[2]/2),c=l*Math.ceil(t[1]/2),u=tn();return`
    vec4 ${s}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${a}, ${i}, ${c}, ${l}, b, row, col);
      return ${u.texture2D}(${e}, uv);
    }
  `}function T3(n){const t=n.shapeInfo.logicalShape,e=n.name,s="get"+e.charAt(0).toUpperCase()+e.slice(1),r=t[1]*t[2],o=t[2],{newShape:a,keptDims:i}=yr(t),l=a;if(l.length<t.length){const f=po(n,l),m=["row","col","depth"];return`
        ${uo(f)}
        float ${s}(int row, int col, int depth) {
          return ${s}(${fo(m,i)});
        }
      `}if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${r}, ${o}, 1)));
        ${ho(n)}
      }
    `;const c=n.shapeInfo.texShape,u=c[0],h=c[1],d=n.shapeInfo.flatOffset;if(h===r&&d==null)return`
        float ${s}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${o}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${h}.0, ${u}.0);
          return sampleTexture(${e}, uv);
        }
      `;if(h===o&&d==null)return`
    float ${s}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${t[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${h}.0, ${u}.0);
      return sampleTexture(${e}, uv);
    }
  `;const p=Nr(e);return`
      float ${s}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${r} + col * ${o} + depth + ${p};
        vec2 uv = uvFromFlat(${u}, ${h}, index);
        return sampleTexture(${e}, uv);
      }
  `}function E3(n){const t=n.shapeInfo.logicalShape,e=t.length,s=n.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),o=n.shapeInfo.texShape,a=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],i=a[0],l=a[1],c=Math.ceil(t[e-1]/2);let u=c*Math.ceil(t[e-2]/2),h="int b, int row, int col",d=`b * ${u} + (row / 2) * ${c} + (col / 2)`;for(let f=2;f<e-1;f++)h=`int b${f}, `+h,u*=t[e-f-1],d=`b${f} * ${u} + `+d;const p=tn();return`
    vec4 ${r}(${h}) {
      int index = ${d};
      int texR = index / ${l};
      int texC = index - texR * ${l};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${l}, ${i});
      return ${p.texture2D}(${s}, uv);
    }
  `}function A3(n){const t=n.shapeInfo.logicalShape,e=n.name,s="get"+e.charAt(0).toUpperCase()+e.slice(1),r=t[3],o=t[2]*r,a=t[1]*o,{newShape:i,keptDims:l}=yr(t);if(i.length<t.length){const f=po(n,i),m=["row","col","depth","depth2"];return`
      ${uo(f)}
      float ${s}(int row, int col, int depth, int depth2) {
        return ${s}(${fo(m,l)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${a}, ${o}, ${r}, 1)));
        ${ho(n)}
      }
    `;const c=n.shapeInfo.flatOffset,u=n.shapeInfo.texShape,h=u[0],d=u[1];if(d===a&&c==null)return`
      float ${s}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${o}, ${r}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${d}.0, ${h}.0);
        return sampleTexture(${e}, uv);
      }
    `;if(d===r&&c==null)return`
      float ${s}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${t[1]*t[2]}, ${t[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${d}.0, ${h}.0);
        return sampleTexture(${e}, uv);
      }
    `;const p=Nr(e);return`
    float ${s}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${a} + col * ${o} +
          depth * ${r} + depth2;
      vec2 uv = uvFromFlat(${h}, ${d}, index + ${p});
      return sampleTexture(${e}, uv);
    }
  `}function D3(n){const t=n.shapeInfo.logicalShape,e=n.name,s="get"+e.charAt(0).toUpperCase()+e.slice(1),r=t[4],o=t[3]*r,a=t[2]*o,i=t[1]*a,{newShape:l,keptDims:c}=yr(t);if(l.length<t.length){const m=po(n,l),g=["row","col","depth","depth2","depth3"];return`
      ${uo(m)}
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        return ${s}(${fo(g,c)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${i}, ${a}, ${o}, ${r})) +
          depth3;
        ${ho(n)}
      }
    `;const u=n.shapeInfo.flatOffset,h=n.shapeInfo.texShape,d=h[0],p=h[1];if(p===i&&u==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${a}, ${o}, ${r}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${p}.0, ${d}.0);
        return sampleTexture(${e}, uv);
      }
    `;if(p===r&&u==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]},
               ${t[2]*t[3]}, ${t[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${p}.0, ${d}.0);
        return sampleTexture(${e}, uv);
      }
    `;const f=Nr(e);return`
    float ${s}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${i} + col * ${a} + depth * ${o} +
          depth2 * ${r} + depth3 + ${f};
      vec2 uv = uvFromFlat(${d}, ${p}, index);
      return sampleTexture(${e}, uv);
    }
  `}function R3(n){const t=n.shapeInfo.logicalShape,e=n.name,s="get"+e.charAt(0).toUpperCase()+e.slice(1),{newShape:r,keptDims:o}=yr(t);if(r.length<t.length){const g=po(n,r),y=["row","col","depth","depth2","depth3","depth4"];return`
      ${uo(g)}
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${s}(${fo(y,o)});
      }
    `}const a=t[5],i=t[4]*a,l=t[3]*i,c=t[2]*l,u=t[1]*c;if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${u}, ${c}, ${l}, ${i})) +
          dot(
            vec2(depth3, depth4),
            vec2(${a}, 1)));
        ${ho(n)}
      }
    `;const h=n.shapeInfo.flatOffset,d=n.shapeInfo.texShape,p=d[0],f=d[1];if(f===u&&h==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${c}, ${l}, ${i}, ${a})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${p}.0);
        return sampleTexture(${e}, uv);
      }
    `;if(f===a&&h==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]*t[4]},
               ${t[2]*t[3]*t[4]},
               ${t[3]*t[4]},
               ${t[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${p}.0);
        return sampleTexture(${e}, uv);
      }
    `;const m=Nr(e);return`
    float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${u} + col * ${c} + depth * ${l} +
          depth2 * ${i} + depth3 * ${a} + depth4 + ${m};
      vec2 uv = uvFromFlat(${p}, ${f}, index);
      return sampleTexture(${e}, uv);
    }
  `}function ho(n){const t=n.name,e=H(n.shapeInfo.logicalShape);return e<2?`return ${t};`:`
    for (int i = 0; i < ${e}; i++) {
      if (i == index) {
        return ${t}[i];
      }
    }
  `}function F3(n,t){const e=n.name,s=e.charAt(0).toUpperCase()+e.slice(1),r="get"+s+"AtOutCoords",o=n.shapeInfo.logicalShape.length,a=t.logicalShape.length,i=C1(n.shapeInfo.logicalShape,t.logicalShape),l=ne(a),c=a-o;let u;const h=["x","y","z","w","u","v"];o===0?u="":a<2&&i.length>=1?u="coords = 0;":u=i.map(b=>`coords.${h[b+c]} = 0;`).join(`
`);let d="";a<2&&o>0?d="coords":d=n.shapeInfo.logicalShape.map((b,$)=>`coords.${h[$+c]}`).join(", ");let p="return outputValue;";const m=H(n.shapeInfo.logicalShape)===1,y=H(t.logicalShape)===1;if(o===1&&!m&&!y)p=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(m&&!y)a===1?p=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:p=`
        return vec4(outputValue.x);
      `;else if(i.length){const b=o-2,$=o-1;i.indexOf(b)>-1&&i.indexOf($)>-1?p="return vec4(outputValue.x);":i.indexOf(b)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":i.indexOf($)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${r}() {
      ${l} coords = getOutputCoords();
      ${u}
      vec4 outputValue = get${s}(${d});
      ${p}
    }
  `}function O3(n,t){const e=n.name,s=e.charAt(0).toUpperCase()+e.slice(1),r="get"+s+"AtOutCoords",o=t.texShape,a=n.shapeInfo.texShape,i=n.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!n.shapeInfo.isUniform&&i===l&&n.shapeInfo.flatOffset==null&&Gt(a,o))return`
      float ${r}() {
        return sampleTexture(${e}, resultUV);
      }
    `;const c=ne(l),u=C1(n.shapeInfo.logicalShape,t.logicalShape),h=l-i;let d;const p=["x","y","z","w","u","v"];i===0?d="":l<2&&u.length>=1?d="coords = 0;":d=u.map(m=>`coords.${p[m+h]} = 0;`).join(`
`);let f="";return l<2&&i>0?f="coords":f=n.shapeInfo.logicalShape.map((m,g)=>`coords.${p[g+h]}`).join(", "),`
    float ${r}() {
      ${c} coords = getOutputCoords();
      ${d}
      return get${s}(${f});
    }
  `}function ne(n){if(n<=1)return"int";if(n===2)return"ivec2";if(n===3)return"ivec3";if(n===4)return"ivec4";if(n===5)return"ivec5";if(n===6)return"ivec6";throw Error(`GPU for rank ${n} is not yet supported`)}function po(n,t){const e=JSON.parse(JSON.stringify(n));return e.shapeInfo.logicalShape=t,e}function fo(n,t){return t.map(e=>n[e]).join(", ")}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _3(n,t,e,s){const r=t.userCode,o=e.map((p,f)=>{const m={logicalShape:p.shape,texShape:p.isUniform?null:p.texData.texShape,isUniform:p.isUniform,isPacked:p.isUniform?!1:p.texData.isPacked,flatOffset:null};return p.texData!=null&&p.texData.slice!=null&&p.texData.slice.flatOffset>0&&(m.flatOffset=p.texData.slice.flatOffset),{name:t.variableNames[f],shapeInfo:m}}),a=o.map(p=>p.shapeInfo),i={logicalShape:s.shape,texShape:s.texData.texShape,isUniform:!1,isPacked:s.texData.isPacked,flatOffset:null},l=QP(o,i,r,t.packedInputs),c=n.createProgram(l);let u=null;const h=n.getUniformLocation(c,"NAN",!1);X().getNumber("WEBGL_VERSION")===1&&(u=n.getUniformLocation(c,"INFINITY",!1));const d={};for(let p=0;p<t.variableNames.length;p++){const f=t.variableNames[p],m=!1;d[f]=n.getUniformLocation(c,f,m),d[`offset${f}`]=n.getUniformLocation(c,`offset${f}`,m)}return{program:t,source:l,webGLProgram:c,uniformLocations:d,inShapeInfos:a,outShapeInfo:i,infLoc:u,nanLoc:h}}function Xm(n,t){if(n.length!==t.length)throw Error(`Binary was compiled with ${n.length} inputs, but was executed with ${t.length} inputs`);n.forEach((e,s)=>{const r=e.logicalShape,o=t[s],a=o.shape;if(!Gt(r,a))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${a} must match`);if(e.isUniform&&o.isUniform)return;const i=e.texShape,l=o.isUniform?null:o.texData.texShape;if(!Gt(i,l))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${l} must match`)})}function L3(n,t,e,s,r){Xm(t.inShapeInfos,e),Xm([t.outShapeInfo],[s]);const o=s.texData.texture,a=s.texData.texShape;s.texData.isPacked?n.setOutputPackedMatrixTexture(o,a[0],a[1]):n.setOutputMatrixTexture(o,a[0],a[1]),n.setProgram(t.webGLProgram),X().getNumber("WEBGL_VERSION")===1&&t.infLoc!==null&&n.gl.uniform1f(t.infLoc,1/0),t.nanLoc!==null&&n.gl.uniform1f(t.nanLoc,NaN),e.forEach((i,l)=>{const c=t.program.variableNames[l],u=t.uniformLocations[c],h=t.uniformLocations[`offset${c}`];if(u!=null){if(i.isUniform){if(H(i.shape)<2)n.gl.uniform1f(u,i.uniformValues[0]);else{let d=i.uniformValues;d instanceof Float32Array||(d=new Float32Array(d)),n.gl.uniform1fv(u,d)}return}i.texData.slice!=null&&h!=null&&n.gl.uniform1i(h,i.texData.slice.flatOffset),n.setInputMatrixTexture(i.texData.texture,u,l)}}),r!=null&&r(n,t.webGLProgram),n.executeProgram()}function P3(n,t,e){let s="";t.concat(e).forEach(a=>{const i=a.texData!=null&&a.texData.slice!=null&&a.texData.slice.flatOffset>0,l=a.isUniform?"uniform":a.texData.texShape;s+=`${a.shape}_${l}_${i}`});const r=n.userCode;let o=n.constructor.name;return o+="_"+s+"_"+r,o}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{addImpl:z3,bincountImpl:S1,bincountReduceImpl:B3,ceilImpl:M3,concatImpl:V3,expImpl:W3,expm1Impl:U3,floorImpl:G3,gatherV2Impl:H3,greaterImpl:j3,lessImpl:q3,linSpaceImpl:K3,logImpl:X3,maxImpl:Y3,maximumImpl:J3,minimumImpl:Z3,multiplyImpl:Q3,negImpl:tz,prodImpl:ez,rangeImpl:nz,rsqrtImpl:sz,simpleAbsImpl:T1,sliceImpl:rz,stridedSliceImpl:oz,subImpl:az,tileImpl:iz,topKImpl:lz,transposeImpl:df,uniqueImpl:cz}=LD;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E1(n,t){return["x","y","z","w","u","v"].slice(0,t).map(e=>`${n}.${e}`)}function Qe(n,t){return t===1?[n]:E1(n,t)}function uz(n,t){if(n===1)return"rc";let e="";for(let s=0;s<n;s++)e+=t[s],s<n-1&&(e+=",");return e}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hz{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=t;const e=t.length;if(e===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{const s=Qe("rc",e),r=ne(e),o=pz(e,t,s),a=fz(e,t[t.length-1],t[t.length-2],s),i=mz(t,s);this.userCode=`
        void main() {
          ${r} rc = getOutputCoords();

          if(${o}) {
            setOutput(vec4(0));
          } else {
            ${a}

            setOutput(vec4(${i}));
          }
        }
      `}}}function dz(n,t){const e=[];for(let s=0;s<=1;s++)for(let r=0;r<=1;r++){let o=`${s===0?"r":"rp1"}, ${r===0?"c":"cp1"}`;for(let a=2;a<n;a++)o=`${t[t.length-1-a]},`+o;e.push(o)}return e}function pz(n,t,e){if(n===1)return`rc > ${t[0]}`;let s="";for(let r=n-2;r<n;r++)s+=`${e[r]} >= ${t[r]}`,r<n-1&&(s+="||");return s}function fz(n,t,e,s){if(n===1)return"";const r=s.slice(-2);return`
    int r = ${r[0]};
    int c = ${r[1]};
    int rp1 = r + 1;
    int cp1 = c + 1;

    bool cEdge = cp1 >= ${t};
    bool rEdge = rp1 >= ${e};
  `}function mz(n,t){const e=n.length,s=dz(e,t);return e===1?`getA(rc),
            rc + 1 >= ${n[0]} ? 0. : getA(rc + 1),
            0, 0`:`getA(${s[0]}),
          cEdge ? 0. : getA(${s[1]}),
          rEdge ? 0. : getA(${s[2]}),
          rEdge || cEdge ? 0. : getA(${s[3]})`}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class A1{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t;let s="";for(let r=0;r<4;r++){let o="thisRC = rc;";r%2===1&&(o+="thisRC.z += 1;"),r>1&&(o+="thisRC.y += 1;"),s+=`
        ${o}
        ${r>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${r}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${r>0?"}":""}
      `}this.userCode=`
      ${gz(e)}
      ${hf(t)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${t[1]};
        int cols = ${t[2]};

        ${s}

        setOutput(result);
      }
    `}}function gz(n){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${Cr(["r","c","d"],n)}
      return ivec3(r, c, d);
    }
  `}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yz{constructor(t){this.gpgpu=t,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(t,e,s){const r=Jm(e,s),o=Zm(t,r,s);o in this.freeTextures||(this.freeTextures[o]=[]),o in this.usedTextures||(this.usedTextures[o]=[]);const a=Ym(t,r,this.gpgpu.gl,this.gpgpu.textureConfig,s);if(this.freeTextures[o].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();const l=this.freeTextures[o].shift();return this.usedTextures[o].push(l),l}let i;return r===Me.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(t[0],t[1]):r===Me.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(t[0],t[1]):r===Me.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(t[0],t[1]):r===Me.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(t[0],t[1]):r===Me.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(t[0],t[1])),this.usedTextures[o].push(i),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),i}releaseTexture(t,e,s,r){if(this.freeTextures==null)return;const o=Jm(s,r),a=Zm(e,o,r);a in this.freeTextures||(this.freeTextures[a]=[]);const i=Ym(e,o,this.gpgpu.gl,this.gpgpu.textureConfig,r),l=X().get("WEBGL_DELETE_TEXTURE_THRESHOLD");l!==-1&&this._numBytesAllocated>l?(this.gpgpu.deleteMatrixTexture(t),this._numBytesAllocated-=i):(this.freeTextures[a].push(t),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const c=this.usedTextures[a],u=c.indexOf(t);if(u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");c.splice(u,1),this.log()}log(){if(!this.logEnabled)return;const t=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${t})`);const e=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*e)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(const t in this.freeTextures)this.freeTextures[t].forEach(e=>{this.gpgpu.deleteMatrixTexture(e)});for(const t in this.usedTextures)this.usedTextures[t].forEach(e=>{this.gpgpu.deleteMatrixTexture(e)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function bz(n,t){const e=n;if(t===e.R32F)return 4;if(t===e.R16F)return 2;if(t===e.RGBA32F)return 16;if(t===n.RGBA)return 16;if(t===e.RGBA16F)return 8;throw new Error(`Unknown internal format ${t}`)}function Ym(n,t,e,s,r){const o=xz(t,s);let a;if(r){const[l,c]=co(n[0],n[1]);a=l*c}else{const[l,c]=si(n[0],n[1]);a=l*c}const i=bz(e,o);return a*i}function xz(n,t){switch(n){case Me.PACKED_2X2_FLOAT32:return $1(t);case Me.PACKED_2X2_FLOAT16:return k1(t);case Me.UNPACKED_FLOAT32:return x1(t);case Me.UNPACKED_FLOAT16:return w1(t);case Me.PACKED_4X1_UNSIGNED_BYTE:return v1(t);default:throw new Error(`Unknown physical texture type ${n}`)}}function wz(n){return X().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?n?Me.PACKED_2X2_FLOAT32:Me.UNPACKED_FLOAT32:n?Me.PACKED_2X2_FLOAT16:Me.UNPACKED_FLOAT16}function Jm(n,t){if(n===mn.UPLOAD)return Me.PACKED_2X2_FLOAT32;if(n===mn.RENDER||n==null)return wz(t);if(n===mn.DOWNLOAD||n===mn.PIXELS)return Me.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${n}`)}function Zm(n,t,e){return`${n[0]}_${n[1]}_${t}_${e}`}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Fs{constructor(t,e){this.variableNames=["A"],this.outputShape=t,this.userCode=`
      float unaryOperation(float x) {
        ${e}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}}const Jn="if (isnan(x)) return x;",vz="return x;",Qm="return abs(x);",$z="return (x >= 0.0) ? x : (exp(x) - 1.0);",kz=Jn+`
  return (x < 0.0) ? 0.0 : x;
`,Cz=Jn+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,bi="return x;";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nz="return x;",Iz=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,Sz=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Tz=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;class Br{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${e}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ez{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=t;const e=t.length,s=Qe("rc",e),r=ne(e),o=uz(e,s),a=s.slice(-2),i=e<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`
      void main() {
        ${r} rc = getOutputCoords();
        vec4 packedInput = getA(${o});

        setOutput(getChannel(packedInput, ${i}));
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Az=ep,Dz=1e-7,Rz=1e-4,xi={};function Fz(n){return n in xi||(xi[n]={}),xi[n]}const Oz=128,_z=600;function Lz(){return X().global.screen==null?1024:X().global.screen.height*X().global.screen.width*window.devicePixelRatio*_z/1024/1024}class Qc extends Ih{constructor(t){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.warnedAboutCPUBackend=!1,this.pendingDeletes=0,this.disposed=!1,!X().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(t==null){const e=us(X().getNumber("WEBGL_VERSION"));this.binaryCache=Fz(X().getNumber("WEBGL_VERSION")),this.gpgpu=new JP(e),this.canvas=e.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=t,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=t.gl.canvas;this.textureManager=new yz(this.gpgpu),this.numMBBeforeWarning=Lz(),this.texData=new Sg(this,Ss())}nextDataId(){return Qc.nextDataId++}numDataIds(){return this.texData.numDataIds()+(this.cpuBackend?this.cpuBackend.numDataIds():0)-this.pendingDeletes}write(t,e,s){if((X().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||X().getBool("DEBUG"))&&this.checkNumericalProblems(t),s==="complex64"&&t!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:e,dtype:s,values:t,usage:mn.UPLOAD,refCount:1}),r}refCount(t){return this.texData.has(t)?this.texData.get(t).refCount:0}incRef(t){const e=this.texData.get(t);e.refCount++}decRef(t){if(this.texData.has(t)){const e=this.texData.get(t);e.refCount--}}move(t,e,s,r,o){if(X().getBool("DEBUG")&&this.checkNumericalProblems(e),r==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(t,{shape:s,dtype:r,values:e,usage:mn.UPLOAD,refCount:o})}disposeIntermediateTensorInfo(t){this.disposeData(t.dataId)}readSync(t){const e=this.texData.get(t),{values:s,dtype:r,complexTensorInfos:o,slice:a,shape:i,isPacked:l}=e;if(a!=null){let d;l?d=new Br(i,bi):d=new Fs(i,bi);const p=this.runWebGLProgram(d,[{dataId:t,shape:i,dtype:r}],r),f=this.readSync(p.dataId);return this.disposeIntermediateTensorInfo(p),f}if(s!=null)return this.convertAndCacheOnCPU(t);if(r==="string")return s;const c=this.activeTimers!=null;let u;c&&(u=nn());let h;if(r==="complex64"){const d=this.readSync(o.real.dataId),p=this.readSync(o.imag.dataId);h=ws(d,p)}else h=this.getValuesFromTexture(t);return c&&(this.downloadWaitMs+=nn()-u),this.convertAndCacheOnCPU(t,h)}async read(t){if(this.pendingRead.has(t)){const f=this.pendingRead.get(t);return new Promise(m=>f.push(m))}const e=this.texData.get(t),{values:s,shape:r,slice:o,dtype:a,complexTensorInfos:i,isPacked:l}=e;if(o!=null){let f;l?f=new Br(r,bi):f=new Fs(r,bi);const m=this.runWebGLProgram(f,[{dataId:t,shape:r,dtype:a}],a),g=this.read(m.dataId);return this.disposeIntermediateTensorInfo(m),g}if(s!=null)return this.convertAndCacheOnCPU(t);if(!X().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&X().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let c=null,u;if(a!=="complex64"&&X().get("WEBGL_BUFFER_SUPPORTED")){u=this.decode(t);const f=this.texData.get(u.dataId);c=this.gpgpu.createBufferFromTexture(f.texture,...Co(r))}this.pendingRead.set(t,[]),a!=="complex64"&&await this.gpgpu.createAndWaitForFence();let h;if(a==="complex64"){const f=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]),m=f[0],g=f[1];h=ws(m,g)}else if(c==null)h=this.getValuesFromTexture(t);else{const f=H(r);h=this.gpgpu.downloadFloat32MatrixFromBuffer(c,f)}u!=null&&this.disposeIntermediateTensorInfo(u);const d=this.convertAndCacheOnCPU(t,h),p=this.pendingRead.get(t);return this.pendingRead.delete(t),p.forEach(f=>f(d)),this.pendingDisposal.has(t)&&(this.pendingDisposal.delete(t),this.disposeData(t)&&Ss().removeDataId(t,this),this.pendingDeletes--),d}bufferSync(t){const e=this.readSync(t.dataId);let s=e;if(t.dtype==="string")try{s=e.map(r=>Vr(r))}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Ft(t.shape,t.dtype,s)}checkNumericalProblems(t){if(t!=null)for(let e=0;e<t.length;e++){const s=t[e];if(!nP(s))throw X().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${s} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${s} cannot be represented on this device.`)}}getValuesFromTexture(t){const{shape:e,dtype:s,isPacked:r}=this.texData.get(t),o=H(e);if(X().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const d=this.decode(t),p=this.texData.get(d.dataId),f=this.gpgpu.downloadMatrixFromPackedTexture(p.texture,...Co(e)).subarray(0,o);return this.disposeIntermediateTensorInfo(d),f}const a=X().getBool("WEBGL_PACK")&&r===!0,i=a?Iu(e):e,l=a?new RP(i):new DP(i),c=this.runWebGLProgram(l,[{shape:i,dtype:s,dataId:t}],"float32"),u=this.texData.get(c.dataId),h=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture,u.texShape[0],u.texShape[1]).subarray(0,o);return this.disposeIntermediateTensorInfo(c),h}timerAvailable(){return X().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}async time(t){const e=this.activeTimers,s=[];let r=!1;this.programTimersStack==null?(this.programTimersStack=s,r=!0):this.activeTimers.push(s),this.activeTimers=s,t();const o=Mr(this.activeTimers.map(l=>l.query)).filter(l=>l!=null),a=Mr(this.activeTimers.map(l=>l.name)).filter(l=>l!=null);this.activeTimers=e,r&&(this.programTimersStack=null);const i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};if(X().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const l=await Promise.all(o);i.kernelMs=Ew(l),i.getExtraProfileInfo=()=>l.map((c,u)=>({name:a[u],ms:c})).map(c=>`${c.name}: ${c.ms}`).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return X().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:nn(),endMs:null}}endTimer(t){return X().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),t):(t.endMs=nn(),t)}async getQueryTime(t){if(X().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(t);const e=t;return e.endMs-e.startMs}disposeData(t,e=!1){if(this.pendingDisposal.has(t))return!1;if(!this.texData.has(t))return!0;if(e?this.texData.get(t).refCount=0:this.texData.get(t).refCount--,!e&&this.texData.get(t).refCount>0)return!1;if(this.pendingRead.has(t))return this.pendingDisposal.add(t),this.pendingDeletes++,!1;this.releaseGPUData(t);const{complexTensorInfos:s}=this.texData.get(t);return s!=null&&(this.disposeData(s.real.dataId,e),this.disposeData(s.imag.dataId,e)),this.texData.delete(t),!0}releaseGPUData(t){const{texture:e,dtype:s,texShape:r,usage:o,isPacked:a,slice:i}=this.texData.get(t),l=i&&i.origDataId||t,c=this.dataRefCount.get(l);c>1?this.dataRefCount.set(l,c-1):(this.dataRefCount.delete(l),e!=null&&(this.numBytesInGPU-=this.computeBytes(r,s),this.textureManager.releaseTexture(e,r,o,a)));const u=this.texData.get(t);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(t){return this.uploadToGPU(t),this.texData.get(t).texture}getDataInfo(t){return this.texData.get(t)}getCPUBackend(){return X().getBool("WEBGL_CPU_FORWARD")?(this.cpuBackend==null&&(this.cpuBackend=Ss().findBackend("cpu")),this.cpuBackend):null}shouldExecuteOnCPU(t,e=Oz){const s=this.getCPUBackend();return!X().getBool("IS_TEST")&&!this.warnedAboutCPUBackend&&s==null&&(console.warn("Your application contains ops that are small enough to be executed on the CPU backend, however the CPU backend cannot be found. Consider importing the CPU backend (@tensorflow/tfjs-backend-cpu) for better performance."),this.warnedAboutCPUBackend=!0),s!=null&&t.every(r=>this.texData.get(r.dataId).texture==null&&H(r.shape)<e)}getGPGPUContext(){return this.gpgpu}where(t){ro("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const e=t.dataSync();return Az(t.shape,e)}packedUnaryOp(t,e,s){const r=new Br(t.shape,e),o=this.compileAndRun(r,[t],s);return Ss().makeTensorFromDataId(o.dataId,o.shape,o.dtype)}abs(t){if(this.shouldExecuteOnCPU([t])&&t.dtype!=="complex64"){const r=T1(this.texData.get(t.dataId).values);return this.makeOutput(t.shape,t.dtype,r)}if(X().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,Qm,t.dtype);const e=new Fs(t.shape,Qm),s=this.compileAndRun(e,[t]);return Ss().makeTensorFromDataId(s.dataId,s.shape,s.dtype)}makeTensorInfo(t,e,s){let r;if(e==="string"&&s!=null&&s.length>0&&Lo(s[0])){const o=s.map(a=>Oa(a));r=this.write(o,t,e)}else r=this.write(s,t,e);return this.texData.get(r).usage=null,{dataId:r,shape:t,dtype:e}}makeOutput(t,e,s){const{dataId:r}=this.makeTensorInfo(t,e,s);return Ss().makeTensorFromDataId(r,t,e,this)}unpackTensor(t){const e=new Ez(t.shape);return this.runWebGLProgram(e,[t],t.dtype)}packTensor(t){const e=new hz(t.shape);return this.runWebGLProgram(e,[t],t.dtype,null,!0)}packedReshape(t,e){const s=[Kr(t.shape),...Xr(t.shape)],r={dtype:t.dtype,shape:s,dataId:t.dataId},o=[Kr(e),...Xr(e)],a=new A1(o,s),l=this.runWebGLProgram(a,[r],t.dtype,null,!0);return{dataId:l.dataId,shape:e,dtype:l.dtype}}decode(t){const e=this.texData.get(t),{isPacked:s,shape:r,dtype:o}=e,a=Iu(r);let i;s?i=new AP(a):i=new EP(a);const c=this.runWebGLProgram(i,[{shape:a,dtype:o,dataId:t}],o,null,!0);return{dtype:o,shape:r,dataId:c.dataId}}runWebGLProgram(t,e,s,r,o=!1){const a=this.makeTensorInfo(t.outputShape,s),i=this.texData.get(a.dataId);if(t.packedOutput&&(i.isPacked=!0),t.outPackingScheme===Oo.DENSE){const g=Co(t.outputShape);i.texShape=g.map(y=>y*2)}if(t.outTexUsage!=null&&(i.usage=t.outTexUsage),H(a.shape)===0)return i.values=Ge(a.dtype,0),a;const l=[],c=e.map(g=>{if(g.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let y=this.texData.get(g.dataId);if(y.texture==null){if(!t.packedInputs&&H(g.shape)<=X().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:g.shape,texData:null,isUniform:!0,uniformValues:y.values};t.packedInputs&&(y.isPacked=!0,y.shape=g.shape)}else if(!!y.isPacked!=!!t.packedInputs)g=y.isPacked?this.unpackTensor(g):this.packTensor(g),l.push(g),y=this.texData.get(g.dataId);else if(y.isPacked&&!ml(y.shape,g.shape)){const b=g,$=g.shape;g.shape=y.shape,g=this.packedReshape(g,$),l.push(g),y=this.texData.get(g.dataId),b.shape=$}return this.uploadToGPU(g.dataId),{shape:g.shape,texData:y,isUniform:!1}});this.uploadToGPU(a.dataId);const u={shape:a.shape,texData:i,isUniform:!1},h=P3(t,c,u),d=this.getAndSaveBinary(h,()=>_3(this.gpgpu,t,c,u)),p=this.activeTimers!=null;let f;p&&(f=this.startTimer()),L3(this.gpgpu,d,c,u,r),l.forEach(g=>this.disposeIntermediateTensorInfo(g)),p&&(f=this.endTimer(f),this.activeTimers.push({name:t.constructor.name,query:this.getQueryTime(f)}));const m=X().get("WEBGL_FLUSH_THRESHOLD");if(m>0){const g=nn();g-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=g)}if(!X().getBool("WEBGL_LAZILY_UNPACK")&&i.isPacked&&o===!1){const g=this.unpackTensor(a);return this.disposeIntermediateTensorInfo(a),g}return a}compileAndRun(t,e,s,r,o=!1){return s=s||e[0].dtype,this.runWebGLProgram(t,e,s,r,o)}getAndSaveBinary(t,e){return t in this.binaryCache||(this.binaryCache[t]=e()),this.binaryCache[t]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(X().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=_(()=>{if(!X().get("WEBGL_RENDER_FLOAT32_ENABLED")){const t=X().getBool("DEBUG");X().set("DEBUG",!1);const e=this.abs(Nt(1e-8)).dataSync()[0];if(X().set("DEBUG",t),e>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?Dz:Rz}uploadToGPU(t){const e=this.texData.get(t),{shape:s,dtype:r,values:o,texture:a,usage:i,isPacked:l}=e;if(a!=null)return;const c=this.activeTimers!=null;let u;c&&(u=nn());let h=e.texShape;if(h==null&&(h=vP(s,l),e.texShape=h),o!=null){const d=Iu(s);let p,f=h[1],m=h[0];const g=o instanceof Uint8Array;l?([f,m]=co(h[0],h[1]),p=new OP(d,[m,f],g)):p=new FP(d,[m,f],g);const y=this.makeTensorInfo([m,f],r);g?this.texData.get(y.dataId).usage=mn.PIXELS:this.texData.get(y.dataId).usage=mn.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(y.dataId),f,m,o);const $=this.runWebGLProgram(p,[y],r,null,!0),x=this.texData.get($.dataId);e.texture=x.texture,e.texShape=x.texShape,e.isPacked=x.isPacked,e.usage=x.usage,this.disposeIntermediateTensorInfo(y),this.texData.delete($.dataId),e.values=null,c&&(this.uploadWaitMs+=nn()-u)}else{const d=this.acquireTexture(h,i,r,l);e.texture=d}}convertAndCacheOnCPU(t,e){const s=this.texData.get(t),{dtype:r}=s;return this.releaseGPUData(t),e!=null&&(s.values=Pz(e,r)),s.values}acquireTexture(t,e,s,r){if(this.numBytesInGPU+=this.computeBytes(t,s),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){const o=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${o} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(t,e,r)}computeBytes(t,e){return t[0]*t[1]*Au(e)}}Qc.nextDataId=0;function Pz(n,t){if(t==="float32"||t==="complex64")return n;if(t==="int32"||t==="bool"){const e=t==="int32"?new Int32Array(n.length):new Uint8Array(n.length);for(let s=0;s<e.length;++s)e[s]=Math.round(n[s]);return e}else throw new Error(`Unknown dtype ${t}`)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Hg()&&my("webgl",()=>new Qc,2);/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const D1=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`;class Yr{constructor(t,e,s){this.variableNames=["A","B"],this.outputShape=Rt(e,s),this.userCode=`
      float binaryOperation(float a, float b) {
        ${t}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tu=`
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;
`;class ai{constructor(t,e,s,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=Rt(e,s);const o=this.outputShape.length;let a="";if(r)if(o===0||H(this.outputShape)===1)a=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(a=`
          ${ne(o)} coords = getOutputCoords();
        `,o===1)a+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{const l=Qe("coords",o);a+=`
            bool nextRowOutOfBounds =
              (${l[o-2]} + 1) >= ${this.outputShape[o-2]};
            bool nextColOutOfBounds =
              (${l[o-1]} + 1) >= ${this.outputShape[o-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${t}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${a}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dn(n){const{inputs:t,backend:e}=n,{x:s}=t;return e.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const zz={kernelName:oa,backendName:"webgl",kernelFunc:dn};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qs(n){const{inputs:t,backend:e}=n,{real:s,imag:r}=t,o=e.makeTensorInfo(s.shape,"complex64"),a=e.texData.get(o.dataId),i=dn({inputs:{x:s},backend:e}),l=dn({inputs:{x:r},backend:e});return a.complexTensorInfos={real:i,imag:l},o}const Bz={kernelName:Oh,backendName:"webgl",kernelFunc:qs};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const R1="return (a < 0.) ? b * a : a;",F1=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function Mz(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{alpha:o}=s,a=e.makeTensorInfo([],"float32",Ws(o,"float32")),i=X().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new ai(F1,r.shape,a.shape):new Yr(R1,r.shape,a.shape),l=e.runWebGLProgram(i,[r,a],r.dtype);return e.disposeIntermediateTensorInfo(a),l}const Vz={kernelName:Ml,backendName:"webgl",kernelFunc:Mz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const O1="return (a < 0.) ? b * a : a;",_1=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function Wz(n){const{inputs:t,backend:e}=n,{x:s,alpha:r}=t,o=X().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new ai(_1,s.shape,r.shape):new Yr(O1,s.shape,r.shape);return e.runWebGLProgram(o,[s,r],s.dtype)}const Uz={kernelName:oc,backendName:"webgl",kernelFunc:Wz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const L1="if (isnan(x)) return x;",Gz=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`,Hz=`
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;
`;function Lt({opSnippet:n,packedOpSnippet:t,cpuKernelImpl:e,dtype:s}){return({inputs:r,backend:o})=>{const{x:a}=r,i=o,l=s||a.dtype;if(i.shouldExecuteOnCPU([a])&&e!=null){const h=i.texData.get(a.dataId),d=e(h.values,l);return i.makeTensorInfo(a.shape,l,d)}const c=X().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&t!=null;let u;return c?u=new Br(a.shape,t):u=new Fs(a.shape,n),i.runWebGLProgram(u,[a],l)}}function qe({opSnippet:n,packedOpSnippet:t,checkOutOfBounds:e=!1,supportsComplex:s=!1,cpuKernelImpl:r,dtype:o}){return({inputs:a,backend:i})=>{const{a:l,b:c}=a,u=i;if(s&&l.dtype==="complex64"){const f=u.texData.get(l.dataId),m=u.texData.get(c.dataId),[g,y]=[[f.complexTensorInfos.real,m.complexTensorInfos.real],[f.complexTensorInfos.imag,m.complexTensorInfos.imag]].map($=>{const[x,w]=$,C={dataId:x.dataId,dtype:x.dtype,shape:l.shape},k={dataId:w.dataId,dtype:w.dtype,shape:c.shape},I=new Yr(n,l.shape,c.shape);return u.runWebGLProgram(I,[C,k],yn(x.dtype,w.dtype))}),b=qs({inputs:{real:g,imag:y},backend:u});return u.disposeIntermediateTensorInfo(g),u.disposeIntermediateTensorInfo(y),b}const h=o||yn(l.dtype,c.dtype);if(u.shouldExecuteOnCPU([l,c])&&r!=null){const f=u.texData.get(l.dataId),m=u.texData.get(c.dataId),[g,y]=r(l.shape,c.shape,f.values,m.values,h),b=u.makeTensorInfo(y,h),$=u.texData.get(b.dataId);return $.values=g,b}const d=X().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&t!=null;let p;return d?p=new ai(t,l.shape,c.shape,e):p=new Yr(n,l.shape,c.shape),u.runWebGLProgram(p,[l,c],h)}}function eu(n,t=!1){if(n==="linear")return t?Nz:vz;if(n==="relu")return t?Sz:kz;if(n==="elu")return t?Iz:$z;if(n==="relu6")return t?Tz:Cz;if(n==="prelu")return t?_1:O1;if(n==="leakyrelu")return t?F1:R1;throw new Error(`Activation ${n} has not been implemented for the WebGL backend.`)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class P1{constructor(t,e,s,r=!1,o=!1,a=!1,i=null,l=!1,c=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s;const u=r?t[1]:t[2],h=Math.ceil(u/2),d=r?"i * 2, rc.y":"rc.y, i * 2",p=o?"rc.z, i * 2":"i * 2, rc.z",f=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],m=o?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let g="",y="";i&&(l?g=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${i}
        }`:c?g=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${i}
        }`:g=`vec4 activation(vec4 x) {
          ${i}
        }`,y="result = activation(result);");const b=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),l&&this.variableNames.push("preluActivationWeights"),c&&this.variableNames.push("leakyreluAlpha");let $="rc.x",x="rc.x";t[0]<e[0]?$=`int(min(float(rc.x), ${t[0]-1}.))`:e[0]<t[0]&&(x=`int(min(float(rc.x), ${e[0]-1}.))`),this.userCode=`
      ${g}

      const float sharedDimension = ${h}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        for (int i = 0; i < ${h}; i++) {
          int batchA = ${$};
          int batchB = ${x};
          vec4 a = getMatrixA(batchA, ${d});
          vec4 b = getMatrixB(batchB, ${p});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${f[0]} * ${m[0]});
          result += (${f[1]} * ${m[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${b}

        ${y}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tg={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class eg{constructor(t,e,s){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=Rt(e,s),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${t}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ng="return a * b;";function z1(n){const{inputs:t,backend:e}=n,{a:s,b:r}=t,o=yn(s.dtype,r.dtype);if(s.dtype==="complex64"){const i=e.texData.get(s.dataId),l=e.texData.get(r.dataId),c=new eg(tg.REAL,s.shape,r.shape),u=new eg(tg.IMAG,s.shape,r.shape),h=[{dataId:i.complexTensorInfos.real.dataId,dtype:i.complexTensorInfos.real.dtype,shape:s.shape},{dataId:i.complexTensorInfos.imag.dataId,dtype:i.complexTensorInfos.imag.dtype,shape:s.shape},{dataId:l.complexTensorInfos.real.dataId,dtype:l.complexTensorInfos.real.dtype,shape:r.shape},{dataId:l.complexTensorInfos.imag.dataId,dtype:l.complexTensorInfos.imag.dtype,shape:r.shape}],d=e.runWebGLProgram(c,h,"float32"),p=e.runWebGLProgram(u,h,"float32"),f=qs({inputs:{real:d,imag:p},backend:e});return e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(p),f}if(e.shouldExecuteOnCPU([s,r])){const i=e.texData.get(s.dataId),l=e.texData.get(r.dataId),[c,u]=Q3(s.shape,r.shape,i.values,l.values,o),h=e.makeTensorInfo(u,o),d=e.texData.get(h.dataId);return d.values=c,h}let a;return X().getBool("WEBGL_PACK_BINARY_OPERATIONS")?a=new ai(ng,s.shape,r.shape):a=new Yr(ng,s.shape,r.shape),e.runWebGLProgram(a,[s,r],o)}const jz={kernelName:fa,backendName:"webgl",kernelFunc:z1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qz(n,t,e){const s=[Kr(n.shape),...Xr(n.shape)],r={dtype:n.dtype,shape:s,dataId:n.dataId},o=[Kr(t),...Xr(t)],a=new A1(o,s),l=e.runWebGLProgram(a,[r],n.dtype,null,!0);return{dataId:l.dataId,shape:t,dtype:l.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ot(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{shape:o}=s,a=e,i=H(r.shape),l=Eg(o,i),c=H(l);N(i===c,()=>`The new shape (${l}) has ${c} elements and the old shape (${r.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`);const u=a.texData.get(r.dataId);return u.isPacked&&!ml(r.shape,l)&&!(u.texture!==null&&ml(u.shape,l))?qz(r,l,a):(a.incRef(r.dataId),{dataId:r.dataId,shape:l,dtype:r.dtype})}const Kz={kernelName:ac,backendName:"webgl",kernelFunc:ot};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sg{constructor(t,e){this.variableNames=["x"];const{windowSize:s,batchSize:r,inSize:o,outSize:a}=t;this.outputShape=[r,a];const i=Math.floor(s/4)*4,l=s%4;let c="sumValue += dot(values, ones);";if(e!=null){const h=1/e;c=`sumValue += dot(values * ${Le(h)?h.toPrecision(2):h}, ones);`}let u="";o%s>0&&(u=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${u}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        float sumValue = 0.0;

        for (int i = 0; i < ${i}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${c}
        }

        int inIdx = inOffset + ${i};
        if (${l===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${c}
        } else if (${l===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${c}
        } else if (${l===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${c}
        }
        setOutput(sumValue);
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Xz{constructor(t,e){this.variableNames=["x"];const{windowSize:s,batchSize:r,inSize:o,outSize:a}=t;this.outputShape=[r,a];let i="0.0",l="";e==="prod"?i="1.0":e==="min"?(i="1.0 / 1e-20",l="min"):e==="max"&&(i="-1.0 / 1e-20",l="max");let c=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;e==="sum"?c="sumValue":e==="prod"?c="prodValue":e==="all"?c="allValue":e==="any"&&(c="anyValue");const u=Math.floor(s/4)*4,h=s%4;let d=`
      if (${e==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${e==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${l}(values, minMaxValue);
      }
    `,p="vec4";e==="all"?(i="1.0",d=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,p="bvec4"):e==="any"&&(i="0.0",d=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,p="bvec4");let f="";o%s>0&&(f=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${i};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${f}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        vec4 minMaxValue = vec4(${i});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${u}; i += 4) {
          int inIdx = inOffset + i;
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${d}
        }

        int inIdx = inOffset + ${u};
        if (${h===1}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${h===2}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${h===3}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${d}
        }
        setOutput(${c});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yz(n){const t=[];for(;t.length===0||t[t.length-1].outSize!==1;){const e=t.length?t[t.length-1].outSize:n[1],s=Pc(e);t.push({inSize:e,windowSize:s,outSize:Math.ceil(e/s)})}return t}function Ir(n,t,e,s){const r=Yz(n.shape);let o=n;for(let a=0;a<r.length;a++){const{inSize:i,windowSize:l,outSize:c}=r[a];let u,h;e==="mean"?u=a===0?new sg({windowSize:l,inSize:i,batchSize:n.shape[0],outSize:c},i):new sg({windowSize:l,inSize:i,batchSize:n.shape[0],outSize:c}):u=new Xz({windowSize:l,inSize:i,batchSize:n.shape[0],outSize:c},e),h=o,o=s.runWebGLProgram(u,[o],t),h.dataId!==n.dataId&&s.disposeIntermediateTensorInfo(h)}return o}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Jz{constructor(t,e){this.variableNames=["A"];const s=new Array(t.length);for(let a=0;a<s.length;a++)s[a]=t[e[a]];this.outputShape=s,this.rank=s.length;const r=ne(this.rank),o=Zz(e);this.userCode=`
    void main() {
      ${r} resRC = getOutputCoords();
      setOutput(getA(${o}));
    }
    `}}function Zz(n){const t=n.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const e=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],s=new Array(t);for(let r=0;r<n.length;r++)s[n[r]]=e[r];return s.join()}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Qz{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const s=new Array(t.length);for(let u=0;u<s.length;u++)s[u]=t[e[u]];if(this.outputShape=s,this.rank=s.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=ne(this.rank),o=E1("rc",this.rank),a=new Array(this.rank);for(let u=0;u<e.length;u++)a[e[u]]=o[u];const i=`vec2(${a.slice(-2).join()})`,l=`++${o[this.rank-1]} < ${s[this.rank-1]}`,c=`getChannel(getA(${a.join()}), ${i})`;this.userCode=`
    void main() {
      ${r} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${c};
      if(${l}) {
        result[1] = ${c};
      }
      --${o[this.rank-1]};
      if(++${o[this.rank-2]} < ${s[this.rank-2]}) {
        result[2] = ${c};
        if(${l}) {
          result[3] = ${c};
        }
      }
      setOutput(result);
    }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nu(n,t,e){const s=X().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Qz(n.shape,t):new Jz(n.shape,t);return e.runWebGLProgram(s,[n],n.dtype)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tB(n,t,e,s){const r=t,o=n.shape.length,a=Et(r,n.shape);let i=a;const l=ye(i,o),c=l!=null;let u=n;c&&(u=nu(n,l,s),i=ve(i.length,o)),je("sum",i,o);const[h,d]=ze(u.shape,i);let p=h;e&&(p=we(h,a));const f=H(d),g=H(n.shape)/f,y=ot({inputs:{x:u},attrs:{shape:[g,f]},backend:s}),b=bd(n.dtype),$=Ir(y,b,"sum",s),x=ot({inputs:{x:$},attrs:{shape:p},backend:s});return s.disposeIntermediateTensorInfo(y),s.disposeIntermediateTensorInfo($),c&&s.disposeIntermediateTensorInfo(u),x}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pf(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o,keepDims:a}=s;return tB(r,o,a,e)}const eB={kernelName:dc,backendName:"webgl",kernelFunc:pf};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function on(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{perm:o}=s,a=e,i=r.shape.length,l=new Array(i);for(let u=0;u<l.length;u++)l[u]=r.shape[o[u]];let c;if(a.shouldExecuteOnCPU([r])){const h=a.texData.get(r.dataId).values,d=df(h,r.shape,r.dtype,o,l);c=a.makeTensorInfo(l,r.dtype);const p=a.texData.get(c.dataId);p.values=d}else c=nu(r,o,a);return c}const nB={kernelName:gc,backendName:"webgl",kernelFunc:on};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const B1=1e3;function gl({a:n,b:t,transposeA:e,transposeB:s,backend:r,bias:o=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:l=null}){const c=n.shape.length,u=t.shape.length,h=e?n.shape[c-2]:n.shape[c-1],d=s?t.shape[u-1]:t.shape[u-2],p=e?n.shape[c-1]:n.shape[c-2],f=s?t.shape[u-2]:t.shape[u-1],m=n.shape.slice(0,-2),g=t.shape.slice(0,-2),y=H(m),b=H(g),$=y===b||y===1||b===1;N(c>=2&&u>=2&&$,()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${m}) and (${g}).`);const w=(y>b?n.shape.slice(0,-2):t.shape.slice(0,-2)).concat([p,f]);N(h===d,()=>`Error in matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${n.shape} and ${t.shape} and transposeA=${e} and transposeB=${s} must match.`);const C=e?[y,h,p]:[y,p,h],k=s?[b,f,d]:[b,d,f],I=ot({inputs:{x:n},backend:r,attrs:{shape:C}}),S=ot({inputs:{x:t},backend:r,attrs:{shape:k}}),E=[I,S],R=Math.max(y,b),L=e?I.shape[1]:I.shape[2],O=o!=null,z=a!=null,M=l==="leakyrelu",V=l!=null?eu(l,!0):null,K=O||z||M||V!=null;let G;if((p===1||f===1)&&L>B1&&K===!1){let J=I,Z=S;e&&(J=on({inputs:{x:I},backend:r,attrs:{perm:[0,2,1]}}),E.push(J)),s&&(Z=on({inputs:{x:S},backend:r,attrs:{perm:[0,2,1]}}),E.push(Z));const tt=f!==1,Q=f===1;let et=J;tt&&(et=ot({inputs:{x:J},backend:r,attrs:{shape:[R,L,1]}}),E.push(et));const st=f===1?2:1;let rt=Z;Q&&(rt=ot({inputs:{x:Z},backend:r,attrs:{shape:[R,1,L]}}),E.push(rt));const at=z1({inputs:{a:et,b:rt},backend:r});G=pf({inputs:{x:at},backend:r,attrs:{axis:st,keepDims:!0}}),E.push(at)}else{const J=yn(n.dtype,t.dtype),Z=new P1(C,k,[R,p,f],e,s,O,V,z,M),tt=[I,S];if(o!=null&&tt.push(o),z&&tt.push(a),M){const Q=r.makeTensorInfo([],"float32",Ws(i,"float32"));tt.push(Q),E.push(Q)}G=r.runWebGLProgram(Z,tt,J)}const j=ot({inputs:{x:G},backend:r,attrs:{shape:w}});E.push(G);for(const J of E)r.disposeIntermediateTensorInfo(J);return j}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sB(n){const{inputs:t,backend:e,attrs:s}=n,{a:r,b:o,bias:a,preluActivationWeights:i}=t,{transposeA:l,transposeB:c,activation:u,leakyreluAlpha:h}=s;return gl({a:r,b:o,transposeA:l,transposeB:c,backend:e,bias:a,preluActivationWeights:i,leakyreluAlpha:h,activation:u})}const rB={kernelName:Gi,backendName:"webgl",kernelFunc:sB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rg="return abs(x);";function oB(n){const{inputs:t,backend:e}=n,{x:s}=t;if(e.shouldExecuteOnCPU([s])&&s.dtype!=="complex64"){const o=e.texData.get(s.dataId),a=T1(o.values);return e.makeTensorInfo(s.shape,s.dtype,a)}let r;return X().getBool("WEBGL_PACK_UNARY_OPERATIONS")?r=new Br(s.shape,rg):r=new Fs(s.shape,rg),e.runWebGLProgram(r,[s],s.dtype)}const aB={kernelName:xl,backendName:"webgl",kernelFunc:oB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iB=Jn+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,lB=Lt({opSnippet:iB}),cB={kernelName:Bo,backendName:"webgl",kernelFunc:lB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uB=Jn+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,hB=Lt({opSnippet:uB}),dB={kernelName:Mo,backendName:"webgl",kernelFunc:hB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const og="return a + b;",pB=qe({opSnippet:og,packedOpSnippet:og,supportsComplex:!0,cpuKernelImpl:z3}),fB={kernelName:Zr,backendName:"webgl",kernelFunc:pB};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mB{constructor(t,e){this.outputShape=[],this.outputShape=t,this.variableNames=e.map((o,a)=>`T${a}`);const s=[];this.variableNames.forEach(o=>{s.push(`float v${o} = get${o}AtOutCoords();`)});const r=this.variableNames.map(o=>`v${o}`).join(" + ");this.userCode=`
      void main() {
        ${s.join(`
        `)}

        float result = ${r};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class gB{constructor(t,e){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.variableNames=e.map((o,a)=>`T${a}`);const s=[];this.variableNames.forEach(o=>{s.push(`vec4 v${o} = get${o}AtOutCoords();`)});const r=this.variableNames.map(o=>`v${o}`).join(" + ");this.userCode=`
      void main() {
        ${s.join(`
        `)}

        vec4 result = ${r};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ui(n){const{inputs:t,backend:e}=n,s=t;if(s.length===1)return dn({inputs:{x:s[0]},backend:e});if(s.length>X().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const l=Math.floor(s.length/2),c=Ui({inputs:s.slice(0,l),backend:e}),u=Ui({inputs:s.slice(l),backend:e});return Ui({inputs:[c,u],backend:e})}const r=s.map(l=>l.dtype).reduce((l,c)=>yn(l,c)),o=s.map(l=>l.shape),i=X().getBool("WEBGL_PACK")?new gB(s[0].shape,o):new mB(s[0].shape,o);return e.runWebGLProgram(i,s,r)}const yB={kernelName:wl,backendName:"webgl",kernelFunc:Ui};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bB(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o,keepDims:a}=s,i=r.shape.length,l=Et(o,r.shape);let c=l;const u=ye(c,i);let h=r;u!=null&&(h=on({inputs:{x:r},backend:e,attrs:{perm:u}}),c=ve(c.length,i)),je("all",c,i);const[d,p]=ze(h.shape,c),f=H(p),m=ot({inputs:{x:h},backend:e,attrs:{shape:[-1,f]}}),g=Ir(m,m.dtype,"all",e);let y;if(a){const b=we(d,l);y=ot({inputs:{x:g},backend:e,attrs:{shape:b}})}else y=ot({inputs:{x:g},backend:e,attrs:{shape:d}});return e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(g),u!=null&&e.disposeIntermediateTensorInfo(h),y}const xB={kernelName:Eh,backendName:"webgl",kernelFunc:bB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wB(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o,keepDims:a}=s,i=r.shape.length,l=Et(o,r.shape);let c=l;const u=ye(c,i);let h=r;u!=null&&(h=on({inputs:{x:r},backend:e,attrs:{perm:u}}),c=ve(c.length,i)),je("any",c,i);const[d,p]=ze(h.shape,c),f=H(p),m=ot({inputs:{x:h},backend:e,attrs:{shape:[-1,f]}}),g=Ir(m,m.dtype,"any",e);let y;if(a){const b=we(d,l);y=ot({inputs:{x:g},backend:e,attrs:{shape:b}})}else y=ot({inputs:{x:g},backend:e,attrs:{shape:d}});return e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(g),u!=null&&e.disposeIntermediateTensorInfo(h),y}const vB={kernelName:Ah,backendName:"webgl",kernelFunc:wB};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $B{constructor(t,e,s){this.variableNames=["A"];const{windowSize:r,batchSize:o,outSize:a}=t;s||this.variableNames.push("bestIndicesA"),this.outputShape=[o,a];const i=e==="max"?">":"<",l=s?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${r};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${r}; i++) {
          int inIdx = ${l};
          float candidate = getA(batch, inIdx);
          if (candidate ${i} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kB{constructor(t,e,s,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,N(t.length>2,()=>`Packed arg${s.charAt(0).toUpperCase()+s.slice(1)} supports only inputs with rank above 2.`);const o=t[t.length-1],a=Math.ceil(o/e);this.outputShape=t.slice(0,-1),a>1&&this.outputShape.push(a),r||this.variableNames.push("bestIndicesA");const i=this.outputShape,l=i.length,c=ne(l),u=Qe("coords",l);let h,d;if(a===1){d=l+1;const I=ne(d);h=`
        ${I} sourceLocR = ${I}(${u.join()}, 0);
        ++${u[l-1]};
        ${I} sourceLocG = ${I}(${u.join()}, 0);
        ++${u[l-2]};
        ${I} sourceLocA = ${I}(${u.join()}, 0);
        --${u[l-1]};
        ${I} sourceLocB = ${I}(${u.join()}, 0);
        --${u[l-2]};`}else d=l,h=`
        ${c} sourceLocR = coords;
        ++${u[l-1]};
        ${c} sourceLocG = coords;
        ++${u[l-2]};
        ${c} sourceLocA = coords;
        --${u[l-1]};
        ${c} sourceLocB = coords;
        --${u[l-2]};`;const p=["x","y","z","w","u","v"].slice(0,d),f="."+p[d-1],m=p.map(I=>"int "+I),g=Qe("sourceLocR",d-1).concat("inIdx.r"),y=Qe("sourceLocG",d-1).concat("inIdx.g"),b=Qe("sourceLocB",d-1).concat("inIdx.b"),$=Qe("sourceLocA",d-1).concat("inIdx.a"),x=s==="max"?"greaterThan":"lessThan",w=r?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${g.join()}),
                             getBestIndicesAChannel(${y.join()}),
                             getBestIndicesAChannel(${b.join()}),
                             getBestIndicesAChannel(${$.join()})));`,C=`vec4(
            getAChannel(${g.join()}),
            hasNextCol ? getAChannel(${y.join()}) : 0.,
            hasNextRow ? getAChannel(${b.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${$.join()}) : 0.)`,k=r?"":`
      float getBestIndicesAChannel(${m.join()}) {
        return getChannel(getBestIndicesA(${p.join()}),
                                          vec2(${p.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${m.join()}) {
        return getChannel(getA(${p.join()}),
                               vec2(${p.slice(-2).join()}));
      }
      ${k}
      void main() {
        ${c} coords = getOutputCoords();
        bool hasNextCol = ${u[l-1]} < ${i[l-1]-1};
        bool hasNextRow = ${u[l-2]} < ${i[l-2]-1};
        ${h}
        ivec4 srcIdx = ivec4(sourceLocR${f}, sourceLocG${f},
          sourceLocB${f}, sourceLocA${f}) * ${e};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${C};

        for (int i = 0; i < ${e}; i++) {
          inIdx = srcIdx;
          ${w}
          vec4 candidate = ${C};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${x}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function M1(n,t,e,s=null){let r=t.shape[0],o=t.shape[1];s!=null&&(r=s.shape[0],o=s.shape[1]);const a=Pc(o),i={windowSize:a,inSize:o,batchSize:r,outSize:Math.ceil(o/a)},l=new $B(i,e,s==null),c=[t];s!=null&&c.push(s);const u=n.runWebGLProgram(l,c,"int32");if(u.shape[1]===1)return u;const h=M1(n,t,e,u);return n.disposeIntermediateTensorInfo(u),h}function V1(n,t,e,s=null){const r=s!=null?s.shape:t.shape,o=r[r.length-1],a=Pc(o),i=new kB(r,a,e,s==null),l=s==null?[t]:[t,s],c=n.runWebGLProgram(i,l,"int32");if(c.shape.length===t.shape.length){const u=V1(n,t,e,c);return n.disposeIntermediateTensorInfo(c),u}return c}function W1(n,t,e,s){const r=[e];if(je("arg"+s.charAt(0).toUpperCase()+s.slice(1),r,t.shape.length),!X().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const o=[],[a,i]=ze(t.shape,r),l=H(i),c=ot({inputs:{x:t},backend:n,attrs:{shape:[-1,l]}});o.push(c);const u=M1(n,c,s);o.push(u);const h=ot({inputs:{x:u},backend:n,attrs:{shape:a}});return o.forEach(d=>n.disposeIntermediateTensorInfo(d)),h}return V1(n,t,s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CB(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o}=s;let a=Et(o,r.shape);const i=ye(a,r.shape.length);let l=r;const c=[];i!=null&&(l=on({inputs:{x:r},backend:e,attrs:{perm:i}}),c.push(l),a=ve(a.length,l.shape.length)),je("argMax",[a[0]],l.shape.length);const u=W1(e,l,a[0],"max");return c.forEach(h=>e.disposeIntermediateTensorInfo(h)),u}const NB={kernelName:vl,backendName:"webgl",kernelFunc:CB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IB(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o}=s;let a=Et(o,r.shape);const i=ye(a,r.shape.length);let l=r;const c=[];i!=null&&(l=on({inputs:{x:r},backend:e,attrs:{perm:i}}),c.push(l),a=ve(a.length,l.shape.length)),je("argMin",[a[0]],l.shape.length);const u=W1(e,l,a[0],"min");return c.forEach(h=>e.disposeIntermediateTensorInfo(h)),u}const SB={kernelName:$l,backendName:"webgl",kernelFunc:IB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TB=Jn+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,EB=Lt({opSnippet:TB}),AB={kernelName:Vo,backendName:"webgl",kernelFunc:EB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DB=Jn+"return log(x + sqrt(x * x + 1.0));",RB=Lt({opSnippet:DB}),FB={kernelName:Wo,backendName:"webgl",kernelFunc:RB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OB=Jn+`
  return atan(x);
`,_B=Lt({opSnippet:OB}),LB={kernelName:Uo,backendName:"webgl",kernelFunc:_B};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PB=Gz+`
  return atan(a, b);
`,zB=`
  vec4 result = atan(a, b);
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+Hz+`
  return result;
`,BB=qe({opSnippet:PB,packedOpSnippet:zB}),MB={kernelName:Ho,backendName:"webgl",kernelFunc:BB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VB=Jn+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,WB=Lt({opSnippet:VB}),UB={kernelName:Go,backendName:"webgl",kernelFunc:WB};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _o{constructor(t,e,s,r=!1,o=!1){if(this.variableNames=["x"],e==="avg"&&s)throw new Error("Cannot compute positions for average pool.");const a=t.filterWidth,i=t.strideHeight,l=t.strideWidth,c=t.dilationHeight,u=t.dilationWidth,h=t.effectiveFilterHeight,d=t.effectiveFilterWidth,p=t.padInfo.top,f=t.padInfo.left;this.outputShape=t.outShape;const m=e==="avg",g=`((batch  * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + d`,y=`(xR * ${t.inWidth} + xC) * ${t.inChannels} + d`;let b="0.0";if(m||(b="-1.0 / 1e-20"),s){this.userCode=`
        const ivec2 strides = ivec2(${i}, ${l});
        const ivec2 pads = ivec2(${p}, ${f});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${h};
              wR += ${c}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${d};
                wC += ${u}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value >= currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${r?o?g:y:`wR * ${d} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const $="max";let x=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;e==="avg"&&(x="avgValue / count");const w=Math.floor(a/4)*4,C=a%4,k=`
      if (${m}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${$}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${i}, ${l});
      const ivec2 pads = ivec2(${p}, ${f});
      const float initializationValue = ${b};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${t.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${b});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${h};
            wR += ${c}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${t.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${w}; wC += 4) {
            int xC = xCCorner + wC * ${u};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              getValue(batch, xR, xC + 2 * ${u}, d),
              getValue(batch, xR, xC + 3 * ${u}, d)
            );

            ${k}
          }

          int xC = xCCorner + ${w};
          if (${C===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${k}
          } else if (${C===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              initializationValue,
              initializationValue
            );

            ${k}
          } else if (${C===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              getValue(batch, xR, xC + 2 * ${u}, d),
              initializationValue
            );

            ${k}
          }
        }
        setOutput(${x});
      }
    `}}class ff{constructor(t,e,s,r=!1,o=!1){if(this.variableNames=["x"],e==="avg"&&s)throw new Error("Cannot compute positions for average pool.");const a=t.filterWidth,i=t.strideDepth,l=t.strideHeight,c=t.strideWidth,u=t.dilationDepth,h=t.dilationHeight,d=t.dilationWidth,p=t.effectiveFilterDepth,f=t.effectiveFilterHeight,m=t.effectiveFilterWidth,g=t.padInfo.front,y=t.padInfo.top,b=t.padInfo.left;this.outputShape=t.outShape;const $=e==="avg";let x="0.0";if($||(x="-1.0 / 1e-20"),s){this.userCode=`
        const ivec3 strides =
            ivec3(${i}, ${l}, ${c});
        const ivec3 pads = ivec3(${g}, ${y}, ${b});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${p};
              wD += ${u}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${t.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${f};
                wR += ${h}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${t.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${m};
                  wC += ${d}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${t.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value >= currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${r?o?`(((batch * ${t.inDepth} + xD) * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`((xD * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`wD * ${f} * ${m} +
                      wR * ${m} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const w="max";let C=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;e==="avg"&&(C="avgValue / count");const k=Math.floor(a/4)*4,I=a%4,S=`
      if (${$}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${w}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${i}, ${l}, ${c});
      const ivec3 pads = ivec3(${g}, ${y}, ${b});
      const float initializationValue = ${x};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${t.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${x});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${p};
            wD += ${u}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${t.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${f};
            wR += ${h}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${k}; wC += 4) {
              int xC = xCCorner + wC * ${d};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                getValue(batch, xD, xR, xC + 2 * ${d}, ch),
                getValue(batch, xD, xR, xC + 3 * ${d}, ch)
              );

              ${S}
            }

            int xC = xCCorner + ${k};
            if (${I===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${S}
            } else if (${I===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                initializationValue,
                initializationValue
              );

              ${S}
            } else if (${I===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                getValue(batch, xD, xR, xC + 2 * ${d}, ch),
                initializationValue
              );

              ${S}
            }
          }
          setOutput(${C});
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GB(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t;ri(r,"avgPool");const{filterSize:o,strides:a,pad:i,dimRoundingMode:l}=s,c=1;N(He(a,c),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${c}'`);const u=_n(r.shape,o,a,c,i,l);if(u.filterWidth===1&&u.filterHeight===1&&Gt(u.inShape,u.outShape))return dn({inputs:{x:r},backend:e});const h=new _o(u,"avg",!1);return e.runWebGLProgram(h,[r],"float32")}const HB={kernelName:kl,backendName:"webgl",kernelFunc:GB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jB(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{filterSize:o,strides:a,pad:i,dimRoundingMode:l,dataFormat:c}=s,u=[1,1,1],h=vs(r.shape,o,a,u,i,l,c),d=new ff(h,"avg",!1);return e.runWebGLProgram(d,[r],"float32")}const qB={kernelName:Cl,backendName:"webgl",kernelFunc:jB};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class KB{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterHeight,s=t.filterWidth,r=t.strideHeight,o=t.strideWidth,a=t.dilationHeight,i=t.dilationWidth,l=t.effectiveFilterHeight,c=t.effectiveFilterWidth,u=l-1-t.padInfo.top,h=c-1-t.padInfo.left,d=1/(e*s);this.userCode=`
      const ivec2 pads = ivec2(${u}, ${h});
      const float avgMultiplier = float(${d});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${l};
            wR += ${a}) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${c};
            wC+= ${i}) {
            float dyC = float(dyCCorner + wC) / ${o}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}}class XB{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterDepth,s=t.filterHeight,r=t.filterWidth,o=t.strideDepth,a=t.strideHeight,i=t.strideWidth,l=t.dilationDepth,c=t.dilationHeight,u=t.dilationWidth,h=t.effectiveFilterDepth,d=t.effectiveFilterHeight,p=t.effectiveFilterWidth,f=h-1-t.padInfo.front,m=d-1-t.padInfo.top,g=p-1-t.padInfo.left,y=1/(e*s*r);this.userCode=`
      const ivec3 pads = ivec3(${f}, ${m}, ${g});
      const float avgMultiplier = float(${y});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${h};
            wD += ${l}) {
          float dyD = float(dyDCorner + wD) / ${o}.0;

          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${d};
              wR += ${c}) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${p};
                wC += ${u}) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YB(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,input:o}=t,a=o,{filterSize:i,strides:l,pad:c,dimRoundingMode:u}=s,h=[1,1,1],d=vs(a.shape,i,l,h,c,u),p=new XB(d);return e.runWebGLProgram(p,[r],a.dtype)}const JB={kernelName:Rh,backendName:"webgl",kernelFunc:YB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZB(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,input:o}=t,a=o;ri([r,o],"avgPoolGrad");const{filterSize:i,strides:l,pad:c}=s,u=_n(a.shape,i,l,1,c),h=new KB(u);return e.runWebGLProgram(h,[r],a.dtype)}const QB={kernelName:Dh,backendName:"webgl",kernelFunc:ZB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tM(n){const{inputs:t,backend:e,attrs:s}=n,{a:r,b:o}=t,{transposeA:a,transposeB:i}=s;return gl({a:r,b:o,transposeA:a,transposeB:i,backend:e})}const eM={kernelName:Nl,backendName:"webgl",kernelFunc:tM};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class nM{constructor(t,e,s,r,o,a){this.outputShape=[],this.variableNames=["x","mean","variance"],Rt(t,e),Rt(t,s);let i="0.0";r!=null&&(Rt(t,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let l="1.0";o!=null&&(Rt(t,o),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${i};
        float scale = ${l};
        float inv = scale * inversesqrt(variance + float(${a}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sM{constructor(t,e,s,r,o,a){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],Rt(t,e),Rt(t,s);let i="vec4(0.0)";r!=null&&(Rt(t,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let l="vec4(1.0)";o!=null&&(Rt(t,o),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`
      void main() {
        vec4 offset = ${i};
        vec4 scale = ${l};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${a}));

        setOutput((x - mean) * inv + offset);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rM=({inputs:n,backend:t,attrs:e})=>{const{x:s,mean:r,variance:o,offset:a,scale:i}=n;N(r.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),N(a==null||r.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),N(i==null||r.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:l}=e;l==null&&(l=.001);const c=[s,r,o];let u=null;a!=null&&(u=a.shape,c.push(a));let h=null;i!=null&&(h=i.shape,c.push(i));const d=X().getBool("WEBGL_PACK_NORMALIZATION")?new sM(s.shape,r.shape,o.shape,u,h,l):new nM(s.shape,r.shape,o.shape,u,h,l);return t.runWebGLProgram(d,c,c[0].dtype)},oM={kernelName:Pl,backendName:"webgl",kernelFunc:rM};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class aM{constructor(t){this.variableNames=["source"],this.outputShape=t,this.rank=t.length;const e=ne(this.rank),s=`uniform int start[${this.rank}];`,r=iM(this.rank);let o;const a=t.map((i,l)=>`sourceLoc.${vh[l]} = start[${l}] + coords.${vh[l]};`);o=`
        ${e} sourceLoc;
        ${e} coords = getOutputCoords();
        ${a.join(`
`)}
      `,this.userCode=`
      ${s}
      void main() {
        ${o}
        setOutput(getSource(${r}));
      }
    `}getCustomSetupFunc(t){if(t.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${t.length})`);return(e,s)=>{this.startLoc==null&&(this.startLoc=e.getUniformLocationNoThrow(s,"start"),this.startLoc==null)||e.gl.uniform1iv(this.startLoc,t)}}}const vh=["x","y","z","w","u","v"];function iM(n){if(n===1)return"sourceLoc";if(n<=6)return vh.slice(0,n).map(t=>"sourceLoc."+t).join(",");throw Error(`Slicing for rank ${n} is not yet supported`)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class lM{constructor(t){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.rank=t.length;const e=ne(this.rank),s=Qe("coords",this.rank),r=Qe("sourceLoc",this.rank),o=this.rank===1?"sourceLoc":`vec2(${r.slice(-2).join()})`,a=`getChannel(getSource(${r.join()}), ${o})`,i=`
      result.x = ${a};
      if (++${s[this.rank-1]} < ${t[this.rank-1]}) {
        ++${r[this.rank-1]};
        result.y = ${a};
        --${r[this.rank-1]};
      }
    `,l=this.rank===1?"":`
      --${s[this.rank-1]};
      if (++${s[this.rank-2]} < ${t[this.rank-2]}) {
        ++${r[this.rank-2]};
        result.z = ${a};
        if (++${s[this.rank-1]} < ${t[this.rank-1]}) {
          ++${r[this.rank-1]};
          result.w = ${a};
        }
      }
    `,c=this.rank<=4?`sourceLoc = coords +
            ${e}(${t.map((u,h)=>`start[${h}]`).join()});`:t.map((u,h)=>`${r[h]} = ${s[h]} + start[${h}];`).join(`
`);this.userCode=`
      uniform int start[${this.rank}];
      void main() {
        ${e} coords = getOutputCoords();
        ${e} sourceLoc;
        ${c}
        vec4 result = vec4(0.);
        ${i}
        ${l}
        setOutput(result);
      }
    `}getCustomSetupFunc(t){if(t.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${t.length})`);return(e,s)=>{this.startLoc==null&&(this.startLoc=e.getUniformLocationNoThrow(s,"start"),this.startLoc==null)||e.gl.uniform1iv(this.startLoc,t)}}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cM(n,t,e,s){const r=s.texData.get(n.dataId),o=s.makeTensorInfo(e,n.dtype),a=s.texData.get(o.dataId);Object.assign(a,r),a.refCount=1,a.shape=e,a.dtype=n.dtype;let i=Id(t,ft(n.shape));r.slice&&(i+=r.slice.flatOffset),a.slice={flatOffset:i,origDataId:r.slice&&r.slice.origDataId||n.dataId};const l=s.dataRefCount.get(a.slice.origDataId)||1;return s.dataRefCount.set(a.slice.origDataId,l+1),o}function ii(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{begin:o,size:a}=s,[i,l]=wc(r,o,a);if(Cd(r,i,l),H(l)===0)return e.makeTensorInfo(l,r.dtype,[]);if(e.shouldExecuteOnCPU([r])||r.dtype==="string"){const h=e.texData.get(r.dataId),d=rz(h.values,i,l,r.shape,r.dtype);return e.makeTensorInfo(l,r.dtype,d)}const{isPacked:c}=e.texData.get(r.dataId),u=Nd(r.shape,i,l);if(c||!u){const h=X().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new lM(l):new aM(l),d=h.getCustomSetupFunc(i);return e.runWebGLProgram(h,[r],r.dtype,d)}return e.uploadToGPU(r.dataId),cM(r,i,l,e)}const uM={kernelName:hc,backendName:"webgl",kernelFunc:ii};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hM=n=>{const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{blockShape:o,crops:a}=s;N(r.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const i=o.reduce((b,$)=>b*$),l=Ha(r.shape,o,i),c=ja(l.length,o.length),u=qa(r.shape,o,i),h=yp(a,o.length),d=bp(u,a,o.length),p=[],f=ot({inputs:{x:r},backend:e,attrs:{shape:l}}),m=on({inputs:{x:f},backend:e,attrs:{perm:c}}),g=ot({inputs:{x:m},backend:e,attrs:{shape:u}}),y=ii({inputs:{x:g},backend:e,attrs:{begin:h,size:d}});return p.push(f),p.push(m),p.push(g),p.forEach(b=>e.disposeIntermediateTensorInfo(b)),y},dM={kernelName:Il,backendName:"webgl",kernelFunc:hM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pM(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,weights:o}=t,{size:a}=s,i=e.readSync(r.dataId),l=e.readSync(o.dataId),c=S1(i,l,o.dtype,o.shape,a);return e.makeTensorInfo([a],o.dtype,c)}const fM={kernelName:Fh,backendName:"webgl",kernelFunc:pM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mM="return float(a != b);",U1=qe({opSnippet:mM,dtype:"bool"}),gM={kernelName:tc,backendName:"webgl",kernelFunc:U1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function li(n){const{inputs:t,backend:e}=n,{input:s}=t,r=e.texData.get(s.dataId);return dn({inputs:{x:r.complexTensorInfos.real},backend:e})}const yM={kernelName:id,backendName:"webgl",kernelFunc:li};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bM="return float(int(x));";function xM(n,t){const e=new Fs(n.shape,bM),s=t.runWebGLProgram(e,[n],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $h(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{dtype:o}=s;if(o==="complex64"){if(r.dtype==="complex64")return dn({inputs:{x:r},backend:e});const a=xe(r.shape),i=$h({inputs:{x:r},backend:e,attrs:{dtype:"float32"}}),l=qs({inputs:{real:i,imag:a},backend:e});return a.dispose(),e.disposeIntermediateTensorInfo(i),l}if(r.dtype==="complex64"){const a=li({inputs:{input:r},backend:e}),i=$h({inputs:{x:a},backend:e,attrs:{dtype:o}});return e.disposeIntermediateTensorInfo(a),i}if(!Ag(r.dtype,o)){const a=dn({inputs:{x:r},backend:e});return{dataId:a.dataId,shape:a.shape,dtype:o}}if(o==="int32")return xM(r,e);if(o==="bool"){const a=e.makeTensorInfo([],"bool",Ge("bool",1)),l=U1({inputs:{a:r,b:a},backend:e});return e.disposeIntermediateTensorInfo(a),l}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${o}`)}const wM={kernelName:jo,backendName:"webgl",kernelFunc:$h};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ag="return ceil(x);",vM=Lt({opSnippet:ag,packedOpSnippet:ag,cpuKernelImpl:M3}),$M={kernelName:qo,backendName:"webgl",kernelFunc:vM};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kM{constructor(t){this.variableNames=["A"],this.outputShape=t,this.userCode=`
      uniform float minVal;
      uniform float maxVal;

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}getCustomSetupFunc(t,e){return(s,r)=>{this.minLoc==null&&(this.minLoc=s.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=s.getUniformLocationNoThrow(r,"maxVal")),s.gl.uniform1f(this.minLoc,t),s.gl.uniform1f(this.maxLoc,e)}}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class CM{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.userCode=`
      uniform float minVal;
      uniform float maxVal;

      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}getCustomSetupFunc(t,e){return(s,r)=>{this.minLoc==null&&(this.minLoc=s.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=s.getUniformLocationNoThrow(r,"maxVal")),s.gl.uniform1f(this.minLoc,t),s.gl.uniform1f(this.maxLoc,e)}}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NM(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{clipValueMin:o,clipValueMax:a}=s;let i;X().getBool("WEBGL_PACK_CLIP")?i=new CM(r.shape):i=new kM(r.shape);const l=i.getCustomSetupFunc(o,a);return e.runWebGLProgram(i,[r],r.dtype,l)}const IM={kernelName:Ko,backendName:"webgl",kernelFunc:NM};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class SM{constructor(t){this.variableNames=["real","imag"],this.outputShape=t,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ig(n,t){return{dataId:t.dataId,dtype:t.dtype,shape:n.shape}}function TM(n){const{inputs:t,backend:e}=n,{x:s}=t,r=e.texData.get(s.dataId),o=new SM(s.shape),a=[ig(s,r.complexTensorInfos.real),ig(s,r.complexTensorInfos.imag)];return e.runWebGLProgram(o,a,a[0].dtype)}const EM={kernelName:Sl,backendName:"webgl",kernelFunc:TM};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class AM{constructor(t){this.outputShape=[],this.outputShape=gs(t,1),this.variableNames=t.map((a,i)=>`T${i}`);const e=new Array(t.length-1);e[0]=t[0][1];for(let a=1;a<e.length;a++)e[a]=e[a-1]+t[a][1];const s=[`if (yC < ${e[0]}) setOutput(getT0(yR, yC));`];for(let a=1;a<e.length;a++){const i=e[a-1];s.push(`else if (yC < ${e[a]}) setOutput(getT${a}(yR, yC-${i}));`)}const r=e.length,o=e[e.length-1];s.push(`else setOutput(getT${r}(yR, yC-${o}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${s.join(`
        `)}
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class DM{constructor(t,e){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=gs(t,e);const s=this.outputShape,r=s.length,o=ne(r),a=Qe("coords",r),i=["x","y","z","w","u","v"].slice(0,r);this.variableNames=t.map((m,g)=>`T${g}`);const l=new Array(t.length-1);l[0]=t[0][e];for(let m=1;m<l.length;m++)l[m]=l[m-1]+t[m][e];const c=i[e],u=i.slice(-2),h=i.join();let d=`if (${c} < ${l[0]}) {
        return getChannel(
            getT0(${h}), vec2(${u.join()}));
        }`;for(let m=1;m<l.length;m++){const g=l[m-1];d+=`
        if (${c} < ${l[m]}  && ${c} >= ${l[m-1]}) {
          return getChannel(
            getT${m}(${wi(i,c,g)}),
            vec2(${wi(u,c,g)}));
        }`}const p=l.length,f=l[l.length-1];d+=`
        return getChannel(
          getT${p}(${wi(i,c,f)}),
          vec2(${wi(u,c,f)}));`,this.userCode=`
      float getValue(${i.map(m=>"int "+m)}) {
        ${d}
      }

      void main() {
        ${o} coords = getOutputCoords();
        vec4 result = vec4(getValue(${a}), 0., 0., 0.);

        ${a[r-1]} = ${a[r-1]} + 1;
        if (${a[r-1]} < ${s[r-1]}) {
          result.g = getValue(${a});
        }

        ${a[r-2]} = ${a[r-2]} + 1;
        if (${a[r-2]} < ${s[r-2]}) {
          result.a = getValue(${a});
        }

        ${a[r-1]} = ${a[r-1]} - 1;
        if (${a[r-2]} < ${s[r-2]} &&
            ${a[r-1]} < ${s[r-1]}) {
          result.b = getValue(${a});
        }
        setOutput(result);
      }
    `}}function wi(n,t,e){const s=n.indexOf(t);return n.map((o,a)=>a===s?`${o} - ${e}`:o).join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function su(n){const{inputs:t,backend:e}=n,{input:s}=t,r=e.texData.get(s.dataId);return dn({inputs:{x:r.complexTensorInfos.imag},backend:e})}const RM={kernelName:Xh,backendName:"webgl",kernelFunc:su};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Or(n,t,e){const s=n[0].dtype;if(s==="complex64"){const c=n.map(f=>li({inputs:{input:f},backend:e})),u=n.map(f=>su({inputs:{input:f},backend:e})),h=Or(c,t,e),d=Or(u,t,e),p=qs({inputs:{real:h,imag:d},backend:e});return c.forEach(f=>e.disposeIntermediateTensorInfo(f)),u.forEach(f=>e.disposeIntermediateTensorInfo(f)),e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(d),p}if(s==="string"){const{tensors2D:c,outShape:u}=lg(n,t,e),h=c.map(g=>({vals:e.readSync(g.dataId),shape:g.shape})),d=c[0].shape[0]===1,p=V3(h,u,s,d),f=gs(n.map(g=>g.shape),t),m=e.makeTensorInfo(f,s,p);return c.forEach(g=>e.disposeIntermediateTensorInfo(g)),m}if(n.length>X().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const c=Math.floor(n.length/2),u=Or(n.slice(0,c),t,e),h=Or(n.slice(c),t,e),d=Or([u,h],t,e);return e.disposeIntermediateTensorInfo(u),e.disposeIntermediateTensorInfo(h),d}if(X().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&n[0].shape.length>1){const c=new DM(n.map(u=>u.shape),t);return e.runWebGLProgram(c,n,s)}const{tensors2D:r,outShape:o}=lg(n,t,e),a=new AM(r.map(c=>c.shape)),i=e.runWebGLProgram(a,r,s);r.forEach(c=>e.disposeIntermediateTensorInfo(c));const l=ot({inputs:{x:i},attrs:{shape:o},backend:e});return e.disposeIntermediateTensorInfo(i),l}function lg(n,t,e){const s=gs(n.map(o=>o.shape),t);return{tensors2D:n.map(o=>ot({inputs:{x:o},attrs:{shape:[-1,H(o.shape.slice(t))]},backend:e})),outShape:s}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G1(n){const{inputs:t,backend:e,attrs:s}=n,{axis:r}=s,o=Et(r,t[0].shape)[0],a=gs(t.map(c=>c.shape),o);if(H(a)===0)return e.makeTensorInfo(a,t[0].dtype,[]);const i=t.filter(c=>H(c.shape)>0);if(i.length===1)return dn({inputs:{x:i[0]},backend:e});const l=i.map(c=>c.shape);return fp(l,o),Or(i,o,e)}const FM={kernelName:Tl,backendName:"webgl",kernelFunc:G1};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class H1{constructor(t,e=!1,s=null,r=!1,o=!1){this.variableNames=["x","W"],this.outputShape=t.outShape;const a=t.padInfo.top,i=t.padInfo.left,l=t.strideHeight,c=t.strideWidth,u=t.dilationHeight,h=t.dilationWidth,d=t.filterHeight,p=t.filterWidth,f=Math.floor(t.inChannels/4)*4,m=t.inChannels%4,g=t.dataFormat==="channelsLast",y=g?1:2,b=g?2:3,$=g?3:1;let x="",w="";s&&(r?x=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:o?x=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:x=`
          float activation(float x) {
            ${s}
          }
        `,w="result = activation(result);");const C=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${x}

      const ivec2 strides = ivec2(${l}, ${c});
      const ivec2 pads = ivec2(${a}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${$}];

        ivec2 xRCCorner =
            ivec2(coords[${y}], coords[${b}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${d}; wR++) {
          int xR = xRCorner + wR * ${u};

          if (xR < 0 || xR >= ${t.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${p}; wC++) {
            int xC = xCCorner + wC * ${h};

            if (xC < 0 || xC >= ${t.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${f}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${g}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${m===1}) {

              if (${g}) {
                dotProd +=
                    getX(batch, xR, xC, ${f}) *
                    getW(wR, wC, ${f}, d2);
              } else {
                dotProd +=
                    getX(batch, ${f}, xR, xC) *
                    getW(wR, wC, ${f}, d2);
              }

            } else if (${m===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${f}, d2),
                getW(wR, wC, ${f} + 1, d2)
              );

              if (${g}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${f}),
                  getX(batch, xR, xC, ${f} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${f}, xR, xC),
                  getX(batch, ${f} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${m===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${f}, d2),
                getW(wR, wC, ${f} + 1, d2),
                getW(wR, wC, ${f} + 2, d2)
              );

              if (${g}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${f}),
                  getX(batch, xR, xC, ${f} + 1),
                  getX(batch, xR, xC, ${f} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${f}, xR, xC),
                  getX(batch, ${f} + 1, xR, xC),
                  getX(batch, ${f} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${C}
        ${w}
        setOutput(result);
      }
    `}}class OM{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const e=t.padInfo.front,s=t.padInfo.top,r=t.padInfo.left,o=t.strideDepth,a=t.strideHeight,i=t.strideWidth,l=t.dilationDepth,c=t.dilationHeight,u=t.dilationWidth,h=t.filterDepth,d=t.filterHeight,p=t.filterWidth,f=Math.floor(t.inChannels/4)*4,m=t.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${o}, ${a}, ${i});
      const ivec3 pads = ivec3(${e}, ${s}, ${r});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${h}; wF++) {
          int xF = xFCorner + wF * ${l};

          if (xF < 0 || xF >= ${t.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${d}; wR++) {
            int xR = xRCorner + wR * ${c};

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${p}; wC++) {
              int xC = xCCorner + wC * ${u};

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${f}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${m===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${f}) *
                  getW(wF, wR, wC, ${f}, d2);
              } else if (${m===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${f}),
                  getX(batch, xF, xR, xC, ${f} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${f}, d2),
                  getW(wF, wR, wC, ${f} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${m===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${f}),
                  getX(batch, xF, xR, xC, ${f} + 1),
                  getX(batch, xF, xR, xC, ${f} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${f}, d2),
                  getW(wF, wR, wC, ${f} + 1, d2),
                  getW(wF, wR, wC, ${f} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _M{constructor(t,e,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t;const{filterWidth:r,inChannels:o,strideWidth:a,strideHeight:i,padInfo:l,outWidth:c,dilationWidth:u,dilationHeight:h,dataFormat:d}=s,{left:p,top:f}=l,m=o*r,g=tn(),y=d==="channelsLast",b=y?0:1,$=y?1:2;let x="";for(let w=0;w<=1;w++)for(let C=0;C<=1;C++)x+=`
          blockIndex = rc.y + ${C};
          pos = rc.x + ${w};

          if(blockIndex < ${t[1]} && pos < ${t[0]}) {
            offsetY = int(blockIndex / (${c})) * ${i} - ${f};
            d0 = offsetY + ${h} * (pos / ${m});

            if(d0 < ${e[b]} && d0 >= 0) {

              offsetX = int(mod(float(blockIndex), ${c}.) * ${a}. - ${p}.);
              d1 = offsetX + ${u} * (int(mod(float(pos), ${m}.) / ${o}.));

              if(d1 < ${e[$]} && d1 >= 0) {

                ch = int(mod(float(pos), ${o}.));

                if (${y}) {
                  innerDims = vec2(d1, ch);
                  result[${w*2+C}] = getChannel(
                    getA(d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${w*2+C}] = getChannel(
                    getA(ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec2 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${x}

        ${g.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j1({x:n,filter:t,convInfo:e,backend:s,bias:r=null,preluActivationWeights:o=null,leakyreluAlpha:a=0,activation:i=null}){const l=n.shape,c=s.texData.get(n.dataId),u=e.inChannels,h=l[0]*l[1]*l[2],d=e.outChannels,p=e.dataFormat==="channelsLast",f=!1,m=!1;let g;const y=[],b=(h===1||d===1)&&u>B1,$=l[2]%2!==0&&!!c.isPacked;if(b||!X().getBool("WEBGL_LAZILY_UNPACK")||!X().getBool("WEBGL_PACK_BINARY_OPERATIONS")||!$){const x=p?l[0]*l[1]*l[2]:l[0]*l[2]*l[3],w=ot({inputs:{x:n},backend:s,attrs:{shape:[1,x,e.inChannels]}}),C=ot({inputs:{x:t},backend:s,attrs:{shape:[1,e.inChannels,e.outChannels]}}),k=gl({a:w,b:C,transposeA:f,transposeB:m,backend:s,bias:r,activation:i,preluActivationWeights:o,leakyreluAlpha:a});g=ot({inputs:{x:k},backend:s,attrs:{shape:e.outShape}}),y.push(w),y.push(C),y.push(k)}else{const x=p?l[0]*l[1]*(l[2]+1):l[0]*l[2]*(l[3]+1),w={dataId:n.dataId,shape:[1,x,e.inChannels],dtype:n.dtype},C=c.shape;c.shape=c.shape.slice(),c.shape[c.shape.length-2]++,N(ml(c.shape,w.shape),()=>`packed reshape ${c.shape} to ${w.shape} isn't free`);const k=ot({inputs:{x:t},backend:s,attrs:{shape:[1,e.inChannels,e.outChannels]}});y.push(k);const I=gl({a:w,b:k,backend:s,transposeA:f,transposeB:m,bias:r,activation:i,preluActivationWeights:o,leakyreluAlpha:a}),S=s.texData.get(I.dataId);N(S.isPacked,()=>"batchMatMul result is expected to be packed"),c.shape=C,S.shape=e.outShape,g=dn({inputs:{x:I},backend:s}),g.shape=e.outShape,y.push(I)}for(const x of y)s.disposeIntermediateTensorInfo(x);return g}function q1({x:n,filter:t,convInfo:e,backend:s,bias:r=null,preluActivationWeights:o=null,leakyreluAlpha:a=0,activation:i=null}){const{filterWidth:l,filterHeight:c,inChannels:u,outWidth:h,outHeight:d,dataFormat:p}=e,f=p==="channelsLast",m=l*c*u,g=d*h,y=[m,g],b=!0,$=!1,x=[],w=ot({inputs:{x:n},backend:s,attrs:{shape:n.shape.slice(1)}}),C=ot({inputs:{x:t},backend:s,attrs:{shape:[1,m,H(t.shape)/m]}});x.push(w),x.push(C);const k=new _M(y,w.shape,e),I=s.runWebGLProgram(k,[w],"float32"),S=ot({inputs:{x:I},backend:s,attrs:{shape:[1,y[0],y[1]]}});x.push(I),x.push(S);const E=r!=null,R=o!=null,L=i==="leakyrelu",O=i?eu(i,!0):null,z=new P1(S.shape,C.shape,[1,g,e.outChannels],b,$,E,O,R,L),M=[S,C];if(r&&M.push(r),R&&M.push(o),L){const j=s.makeTensorInfo([],"float32",Ws(a,"float32"));M.push(j),x.push(j)}const V=s.runWebGLProgram(z,M,"float32"),K=f?[1,d,h,e.outChannels]:[1,e.outChannels,d,h],G=ot({inputs:{x:V},backend:s,attrs:{shape:K}});x.push(V);for(const j of x)s.disposeIntermediateTensorInfo(j);return G}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LM(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,filter:o}=t,{strides:a,pad:i,dataFormat:l,dilations:c,dimRoundingMode:u}=s,h=$s(l),d=Pe(r.shape,o.shape,a,c,i,u,!1,h);let p;if(d.filterHeight===1&&d.filterWidth===1&&d.dilationHeight===1&&d.dilationWidth===1&&d.strideHeight===1&&d.strideWidth===1&&(d.padInfo.type==="SAME"||d.padInfo.type==="VALID"))p=j1({x:r,filter:o,convInfo:d,backend:e});else if(X().getBool("WEBGL_CONV_IM2COL")&&r.shape[0]===1)p=q1({x:r,filter:o,convInfo:d,backend:e});else{const m=new H1(d);p=e.runWebGLProgram(m,[r,o],"float32")}const f=ot({inputs:{x:p},backend:e,attrs:{shape:d.outShape}});return e.disposeIntermediateTensorInfo(p),f}const PM={kernelName:El,backendName:"webgl",kernelFunc:LM};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class zM{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,s=t.strideWidth,r=t.padInfo.top,o=t.padInfo.left,a=t.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${t.batchSize}; b++) {
          for (int yR = 0; yR < ${t.outHeight}; yR++) {
            int xR = wR + yR * ${e} - ${r};

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${t.outWidth}; yC++) {
              int xC = wC + yC * ${s} - ${o};

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              if (${a}) {
                float dyValue = getDy(b, yR, yC, d2);
                float xValue = getX(b, xR, xC, d1);
                dotProd += (xValue * dyValue);
              } else {
                float dyValue = getDy(b, d2, yR, yC);
                float xValue = getX(b, d1, xR, xC);
                dotProd += (xValue * dyValue);
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}}class BM{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,s=t.filterWidth,r=t.strideHeight,o=t.strideWidth,a=t.dataFormat==="channelsLast",i=e-1-t.padInfo.top,l=s-1-t.padInfo.left,c=a?1:2,u=a?2:3,h=a?3:1;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${h}];

        ivec2 dyCorner = ivec2(coords[${c}], coords[${u}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${e}; wR++) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${e} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${o}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${s} - 1 - wC;

            for (int d2 = 0; d2 < ${t.outChannels}; d2++) {

              if (${a}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}}class MM{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideDepth,s=t.strideHeight,r=t.strideWidth,o=t.padInfo.front,a=t.padInfo.top,i=t.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${t.batchSize}; b++) {
          for (int yF = 0; yF < ${t.outDepth}; yF++) {
            int xF = wF + yF * ${e} - ${o};

            if (xF < 0 || xF >= ${t.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${t.outHeight}; yR++) {
              int xR = wR + yR * ${s} - ${a};

              if (xR < 0 || xR >= ${t.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${t.outWidth}; yC++) {
                int xC = wC + yC * ${r} - ${i};

                if (xC < 0 || xC >= ${t.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class VM{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterDepth,s=t.filterHeight,r=t.filterWidth,o=t.strideDepth,a=t.strideHeight,i=t.strideWidth,l=e-1-t.padInfo.front,c=s-1-t.padInfo.top,u=r-1-t.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${l}, ${c}, ${u});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${e}; wF++) {
          float dyF = float(dyFCorner + wF) / ${o}.0;

          if (dyF < 0.0 || dyF >= ${t.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${e} - 1 - wF;

          for (int wR = 0; wR < ${s}; wR++) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${s} - 1 - wR;

            for (int wC = 0; wC < ${r}; wC++) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${r} - 1 - wC;

              for (int d2 = 0; d2 < ${t.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WM(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,dy:o}=t,{strides:a,pad:i,dataFormat:l,dimRoundingMode:c,filterShape:u}=s,h=$s(l),d=Pe(r.shape,u,a,1,i,c,!1,h),p=new zM(d);return e.runWebGLProgram(p,[r,o],"float32")}const UM={kernelName:_h,backendName:"webgl",kernelFunc:WM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GM(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,filter:o}=t,{inputShape:a,strides:i,pad:l,dataFormat:c,dimRoundingMode:u}=s,h=$s(c),d=Pe(a,o.shape,i,1,l,u,!1,h),p=new BM(d);return e.runWebGLProgram(p,[r,o],"float32")}const HM={kernelName:Al,backendName:"webgl",kernelFunc:GM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jM(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,filter:o}=t,{strides:a,pad:i,dilations:l}=s,c=Us(r.shape,o.shape,a,l,i),u=new OM(c);return e.runWebGLProgram(u,[r,o],"float32")}const qM={kernelName:Dl,backendName:"webgl",kernelFunc:jM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KM(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,dy:o}=t,{strides:a,pad:i,filterShape:l}=s,c=Us(r.shape,l,a,1,i),u=new MM(c);return e.runWebGLProgram(u,[r,o],"float32")}const XM={kernelName:Lh,backendName:"webgl",kernelFunc:KM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YM(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,filter:o}=t,{pad:a,strides:i,inputShape:l}=s,c=Us(l,o.shape,i,1,a),u=new VM(c);return e.runWebGLProgram(u,[r,o],"float32")}const JM={kernelName:Ph,backendName:"webgl",kernelFunc:YM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZM=L1+`
  return cos(x);
`,QM=Lt({opSnippet:ZM}),tV={kernelName:Xo,backendName:"webgl",kernelFunc:QM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eV=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,nV=Lt({opSnippet:eV}),sV={kernelName:Yo,backendName:"webgl",kernelFunc:nV};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rV{constructor(t,e,s,r,o){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[a,i,l,c]=t,[u]=e,[h,d]=s;this.outputShape=[u,h,d,c];const p=r==="bilinear"?1:0,[f,m]=[`${i-1}.0`,`${l-1}.0`],[g,y,b]=h>1?[`${(i-1)/(h-1)}`,"(y2-y1) * height_ratio",`y1*${f} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${f}`],[$,x,w]=d>1?[`${(l-1)/(d-1)}`,"(x2-x1) * width_ratio",`x1*${m} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${m}`];this.userCode=`
      const float height_ratio = float(${g});
      const float width_ratio = float(${$});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${a}) {
          return;
        }

        float height_scale = ${y};
        float width_scale = ${x};

        float in_y = ${b};
        if( in_y < 0.0 || in_y > ${f} ) {
          setOutput(float(${o}));
          return;
        }
        float in_x = ${w};
        if( in_x < 0.0 || in_x > ${m} ) {
          setOutput(float(${o}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${p} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oV=n=>{const{inputs:t,backend:e,attrs:s}=n,{image:r,boxes:o,boxInd:a}=t,{cropSize:i,method:l,extrapolationValue:c}=s,u=new rV(r.shape,o.shape,i,l,c);return e.runWebGLProgram(u,[r,o,a],"float32")},aV={kernelName:zh,backendName:"webgl",kernelFunc:oV};class cg{constructor(t,e,s){this.variableNames=["x"],this.outputShape=t;const r=t.length,o=e?"0.0":`getX(${ug(r,"coords")})`,a=t[t.length-1];let i="",l="";e?(i=s?`end != ${a-1}`:"end != 0",l=s?"end + 1":"end - 1"):(i=s?`end + pow2 < ${a}`:"end >= pow2",l=s?"end + pow2":"end - pow2"),this.userCode=`
      uniform float index;
      void main() {
        ${ne(r)} coords = getOutputCoords();
        int end = ${hg(r,"coords")};
        float val = ${o};
        int pow2 = int(pow(2.0, index));
        if (${i}) {
          int idx = ${l};
          ${hg(r,"coords")} = idx;
          val += getX(${ug(r,"coords")});
        }
        setOutput(val);
      }
    `}getCustomSetupFunc(t){return(e,s)=>{this.index==null&&(this.index=e.getUniformLocation(s,"index")),e.gl.uniform1f(this.index,t)}}}function ug(n,t){if(n===1)return`${t}`;if(n===2)return`${t}.x, ${t}.y`;if(n===3)return`${t}.x, ${t}.y, ${t}.z`;if(n===4)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative sum for rank ${n} is not yet supported`)}function hg(n,t){if(n===1)return`${t}`;if(n===2)return`${t}.y`;if(n===3)return`${t}.z`;if(n===4)return`${t}.w`;throw Error(`Cumulative sum for rank ${n} is not yet supported`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iV(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o,exclusive:a,reverse:i}=s,l=r.shape.length,c=ye([o],l);let u=r;c!=null&&(u=on({inputs:{x:r},backend:e,attrs:{perm:c}}));const h=ve(1,l)[0];if(h!==l-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${r.shape.length-1} but got axis=${o}`);const d=u.shape[h];let p=dn({inputs:{x:u},backend:e});for(let f=0;f<=Math.ceil(Math.log2(d))-1;f++){const m=new cg(u.shape,!1,i),g=m.getCustomSetupFunc(f),y=p;p=e.runWebGLProgram(m,[p],p.dtype,g),e.disposeIntermediateTensorInfo(y)}if(a){const f=new cg(u.shape,a,i),m=p;p=e.runWebGLProgram(f,[p],p.dtype),e.disposeIntermediateTensorInfo(m)}if(c!=null){const f=no(c),m=on({inputs:{x:p},backend:e,attrs:{perm:f}});return e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(u),m}return p}const lV={kernelName:Rl,backendName:"webgl",kernelFunc:iV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cV(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,weights:o}=t,{size:a,binaryOutput:i}=s;if(r.shape.length===1){const l=e.readSync(r.dataId),c=e.readSync(o.dataId),u=S1(l,c,o.dtype,o.shape,a);return e.makeTensorInfo([a],o.dtype,u)}else if(r.shape.length===2){const l=e.bufferSync(r),c=e.bufferSync(o),u=B3(l,c,a,i);return e.makeTensorInfo(u.shape,o.dtype,u.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}const uV={kernelName:Bh,backendName:"webgl",kernelFunc:cV};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hV{constructor(t,e,s){this.variableNames=["x"],this.outputShape=[],this.outputShape=t,this.blockSize=e,this.dataFormat=s,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${e};
      int offset_h = imod(h, ${e});
      int in_w = w / ${e};
      int offset_w = imod(w, ${e});
      int offset_d = (offset_h * ${e} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dV(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{blockSize:o,dataFormat:a}=s;N(o>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${o}`);const i=r.shape[0],l=a==="NHWC"?r.shape[1]:r.shape[2],c=a==="NHWC"?r.shape[2]:r.shape[3],u=a==="NHWC"?r.shape[3]:r.shape[1],h=l*o,d=c*o,p=u/(o*o),f=a==="NHWC"?[i,h,d,p]:[i,p,h,d],m=new hV(f,o,a);return e.runWebGLProgram(m,[r],r.dtype)}const pV={kernelName:Mh,backendName:"webgl",kernelFunc:dV};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class K1{constructor(t,e=!1,s=null,r=!1,o=!1){this.variableNames=["x","W"],this.outputShape=t.outShape;const a=t.inHeight,i=t.inWidth,l=t.padInfo.top,c=t.padInfo.left,u=t.strideHeight,h=t.strideWidth,d=t.dilationHeight,p=t.dilationWidth,f=t.filterHeight,m=t.filterWidth,g=t.outChannels/t.inChannels;let y="",b="";s&&(r?y=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:o?y=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:y=`
          float activation(float x) {
            ${s}
          }
        `,b="result = activation(result);");const $=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${y}

      const ivec2 strides = ivec2(${u}, ${h});
      const ivec2 pads = ivec2(${l}, ${c});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${g};
        int q = d2 - d1 * ${g};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${f}; wR++) {
          int xR = xRCorner + wR * ${d};

          if (xR < 0 || xR >= ${a}) {
            continue;
          }

          for (int wC = 0; wC < ${m}; wC++) {
            int xC = xCCorner + wC * ${p};

            if (xC < 0 || xC >= ${i}) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${$}
        ${b}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class X1{constructor(t,e=!1,s=null,r=!1,o=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.outShape;const a=t.inHeight,i=t.inWidth,l=t.padInfo.top,c=t.padInfo.left,u=t.strideHeight,h=t.strideWidth,d=t.dilationHeight,p=t.dilationWidth,f=t.filterHeight,m=t.filterWidth,g=m;let y="int xR; int xC; int xCOffset;";for(let w=0;w<f;w++)for(let C=0;C<m;C++)y+=`
          vec4 xTexelR${w}C${C*2} = vec4(0.);
          vec4 wR${w}C${C} = vec4(0.);
          vec4 xR${w}C${C} = vec4(0.);`;for(let w=0;w<f;w++)for(let C=0;C<g;C++){const k=C*2;if(y+=`
          xR = xRCorner + ${w*d};
          xC = xCCorner + ${k*p};
        `,h===1){if(k<m&&(c%2===1?y+=`
                xCOffset = xC + 1;
                if(xR >= 0 && xR < ${a} && xCOffset >= 0 && xCOffset < ${i}) {
                  xTexelR${w}C${k} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if(xCOffset + 1 >= ${i}) {
                    xTexelR${w}C${k}.zw = vec2(0.);
                  }
                } else {
                  xTexelR${w}C${k} = vec4(0.);
                }

                xCOffset = xC + 1 - 2;
                if(xR >= 0 && xR < ${a} && xCOffset >= 0 && xCOffset < ${i}) {
                  vec4 previous = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if(xCOffset + 1 >= ${i}) {
                    previous.zw = vec2(0.);
                  }

                  xR${w}C${k} = vec4(previous.zw, xTexelR${w}C${k}.xy);
                } else {
                  xR${w}C${k} = vec4(0, 0, xTexelR${w}C${k}.xy);
                }
              `:y+=`
                if(xR >= 0 && xR < ${a} && xC >= 0 && xC < ${i}) {
                  xTexelR${w}C${k} = getX(batch, xR, xC, d1);
                } else {
                  xTexelR${w}C${k} = vec4(0.);
                }

                xR${w}C${k} = xTexelR${w}C${k};
              `,k+1<m)){const I=c%2===0?Tg(p):p;p%2===0&&c%2===1||p%2!==0&&c%2!==1?(y+=`
                  xCOffset = xC + ${c%2} + ${I};

                  if(xR >= 0 && xR < ${a} &&
                    xCOffset >= 0 && xCOffset < ${i}) {
                    xTexelR${w}C${k+2} = getX(batch, xR, xCOffset, d1);
                  }
                `,p>1&&(y+=`
                    xCOffset -= 2;
                    if(xR >= 0 && xR < ${a} &&
                      xCOffset >= 0 && xCOffset < ${i}) {
                      xTexelR${w}C${k} = getX(batch, xR, xCOffset, d1);
                    } else {
                      xTexelR${w}C${k} = vec4(0.);
                    }
                  `),y+=`
                  xR${w}C${k+1} = vec4(
                    xTexelR${w}C${k}.zw, xTexelR${w}C${k+2}.xy);
                `):y+=`
                  xCOffset = xC + ${I};

                  if(xR >= 0 && xR < ${a} &&
                    xCOffset >= 0 && xCOffset < ${i}) {
                    xTexelR${w}C${k+2} = getX(batch, xR, xCOffset, d1);
                  }

                  xR${w}C${k+1} = xTexelR${w}C${k+2};
                `}}else k<m&&(y+=`
              if(xR >= 0 && xR < ${a}) {
            `,c%2===1?(y+=`
                xCOffset = xC + 1 - ${h};
                if(xCOffset >= 0 && xCOffset < ${i}) {
                  xTexelR${w}C${k} = getX(batch, xR, xCOffset, d1);
                } else {
                  xTexelR${w}C${k} = vec4(0.);
                }

                if(xC + 1 >= 0 && xC + 1 < ${i}) {
                  xTexelR${w}C${k+2} = getX(batch, xR, xC + 1, d1);
                } else {
                  xTexelR${w}C${k+2} = vec4(0.);
                }

                xR${w}C${k} = vec4(
                  xTexelR${w}C${k}.zw, xTexelR${w}C${k+2}.zw);
              `,k+1<m&&(y+=`
                  vec4 final = vec4(0.);
                  xCOffset = xC + 1 + ${h};
                  if(xCOffset >= 0 && xCOffset < ${i}) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xR${w}C${k+1} = vec4(xTexelR${w}C${k+2}.xy, final.xy);
                `)):(y+=`
                if(xC >= 0 && xC < ${i}) {
                  xTexelR${w}C${k} = getX(batch, xR, xC, d1);
                } else {
                  xTexelR${w}C${k} = vec4(0.);
                }

                xCOffset = xC + ${h};
                if(xCOffset >= 0 && xCOffset < ${i}) {
                  xTexelR${w}C${k+2} = getX(batch, xR, xCOffset, d1);
                } else {
                  xTexelR${w}C${k+2} = vec4(0.);
                }

                xR${w}C${k} = vec4(
                  xTexelR${w}C${k}.xy, xTexelR${w}C${k+2}.xy);
              `,k+1<m&&(y+=`
                  xR${w}C${k+1} = vec4(
                    xTexelR${w}C${k}.zw, xTexelR${w}C${k+2}.zw);
                `)),y+="}");k<m&&(y+=`
            vec4 wTexelR${w}C${k} = getW(${w}, ${k}, d1, q);
            wR${w}C${k} = vec4(wTexelR${w}C${k}.xz, wTexelR${w}C${k}.xz);
          `,k+1<m&&(y+=`
              vec4 wTexelR${w}C${k+1} = getW(${w}, ${k+1}, d1, q);
              wR${w}C${k+1} =
                vec4(wTexelR${w}C${k+1}.xz, wTexelR${w}C${k+1}.xz);`))}for(let w=0;w<f;w++)for(let C=0;C<m;C++)y+=`dotProd += xR${w}C${C} * wR${w}C${C};`;let b="",$="";s&&(r?b=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:o?b=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:b=`vec4 activation(vec4 x) {
          ${s}
        }`,$="result = activation(result);");const x=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${b}

      const ivec2 strides = ivec2(${u}, ${h});
      const ivec2 pads = ivec2(${l}, ${c});

      void main() {

        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2;
        int q = 0;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        vec4 dotProd = vec4(0.);

        ${y}

        vec4 result = dotProd;
        ${x}
        ${$}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fV(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,filter:o}=t,{strides:a,pad:i,dilations:l,dimRoundingMode:c}=s;let u=l;u==null&&(u=[1,1]),N(He(a,u),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`);const h=Pe(r.shape,o.shape,a,u,i,c,!0);let d;return X().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels===1?d=new X1(h):d=new K1(h),e.runWebGLProgram(d,[r,o],"float32")}const mV={kernelName:Fl,backendName:"webgl",kernelFunc:fV};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class gV{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,s=t.strideWidth,r=t.padInfo.top,o=t.padInfo.left,a=t.outChannels/t.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${a} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${t.batchSize}; b++) {
          for (int yR = 0; yR < ${t.outHeight}; yR++) {
            int xR = wR + yR * ${e} - ${r};

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${t.outWidth}; yC++) {
              int xC = wC + yC * ${s} - ${o};

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class yV{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,s=t.filterWidth,r=t.strideHeight,o=t.strideWidth,a=e-1-t.padInfo.top,i=s-1-t.padInfo.left,l=t.outChannels/t.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${e}; wR++) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${e} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${o}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${s} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${l}; dm++) {
              int d2 = d1 * ${l} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bV(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,dy:o}=t,{strides:a,dilations:i,pad:l,dimRoundingMode:c,filterShape:u}=s,h=Pe(r.shape,u,a,i,l,c,!0),d=new gV(h);return e.runWebGLProgram(d,[r,o],"float32")}const xV={kernelName:Vh,backendName:"webgl",kernelFunc:bV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wV(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,filter:o}=t,{strides:a,dilations:i,pad:l,dimRoundingMode:c,inputShape:u}=s,h=Pe(u,o.shape,a,i,l,c,!0),d=new yV(h);return e.runWebGLProgram(d,[r,o],"float32")}const vV={kernelName:Wh,backendName:"webgl",kernelFunc:wV};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $V{constructor(t){this.variableNames=["X"],this.outputShape=[t,t],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kV(n){const{inputs:t,backend:e}=n,{x:s}=t,r=[...s.shape,...s.shape],o=H(s.shape),a=ot({inputs:{x:s},backend:e,attrs:{shape:[o]}}),i=new $V(o),l=e.runWebGLProgram(i,[a],a.dtype),c=ot({inputs:{x:l},backend:e,attrs:{shape:r}});return e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(l),c}const CV={kernelName:Pg,backendName:"webgl",kernelFunc:kV};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class NV{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const{inHeight:e,inWidth:s,padInfo:r,strideHeight:o,strideWidth:a,filterHeight:i,filterWidth:l,dilationHeight:c,dilationWidth:u}=t,{top:h,left:d}=r;this.userCode=`
      const ivec2 strides = ivec2(${o}, ${a});
      const ivec2 pads = ivec2(${h}, ${d});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${i}; h++) {
          int hIn = hBeg + h * ${c};

          if (hIn >= 0 && hIn < ${e}) {
            for (int w = 0; w < ${l}; w++) {
              int wIn = wBeg + w * ${u};

              if (wIn >= 0 && wIn < ${s}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IV(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,filter:o}=t,{strides:a,pad:i,dilations:l}=s,c=za(r.shape,o.shape,a,i,"NHWC",l);let u;const h=new NV(c);u=e.runWebGLProgram(h,[r,o],"float32");const d=ot({inputs:{x:u},backend:e,attrs:{shape:c.outShape}});return e.disposeIntermediateTensorInfo(u),d}const SV={kernelName:Ol,backendName:"webgl",kernelFunc:IV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TV="return (x >= 0.0) ? x : (exp(x) - 1.0);",EV=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,AV=Lt({opSnippet:TV,packedOpSnippet:EV}),DV={kernelName:Zo,backendName:"webgl",kernelFunc:AV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RV="return (b >= 1.0) ? a : a * (b + 1.0);",FV=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,OV=n=>{const{inputs:t,backend:e}=n,{dy:s,y:r}=t,o=X().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new ai(FV,s.shape,r.shape):new Yr(RV,s.shape,r.shape);return e.runWebGLProgram(o,[s,r],s.dtype)},_V={kernelName:Uh,backendName:"webgl",kernelFunc:OV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LV=`
  return vec4(equal(a, b));
`,PV="return float(a == b);",zV=qe({opSnippet:PV,packedOpSnippet:LV,dtype:"bool"}),BV={kernelName:_l,backendName:"webgl",kernelFunc:zV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MV=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${xp};
  float a1 = ${wp};
  float a2 = ${vp};
  float a3 = ${$p};
  float a4 = ${kp};
  float a5 = ${Cp};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,VV=Lt({opSnippet:MV}),WV={kernelName:Qo,backendName:"webgl",kernelFunc:VV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dg="return exp(x);",Y1=Lt({opSnippet:dg,packedOpSnippet:dg,cpuKernelImpl:W3}),UV={kernelName:ta,backendName:"webgl",kernelFunc:Y1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kh(n){const{inputs:t,attrs:e,backend:s}=n,{dim:r}=e,{input:o}=t,a=o.shape.length,i=o.shape.slice();let l=r;return r<0&&(N(-(a+1)<=r,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),l=a+r+1),i.splice(l,0,1),ot({inputs:{x:o},backend:s,attrs:{shape:i}})}const GV={kernelName:Ll,backendName:"webgl",kernelFunc:kh};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pg="return exp(x) - 1.0;",HV=Lt({opSnippet:pg,packedOpSnippet:pg,cpuKernelImpl:U3}),jV={kernelName:ea,backendName:"webgl",kernelFunc:HV};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class fg{constructor(t,e,s){this.variableNames=["real","imag"];const r=e[1];this.outputShape=e;const o=s?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=s?`${r}.0`:"1.0";let i;if(t==="real")i="return real * expR - imag * expI;";else if(t==="imag")i="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${t}.`);this.userCode=`
      const float exponentMultiplier = ${o};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${i}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${r});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${r}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${a};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J1(n,t,e){const s=e.texData.get(n.dataId),r=H(n.shape),o=n.shape[n.shape.length-1],a=r/o,i=ot({inputs:{x:n},backend:e,attrs:{shape:[a,o]}}),l=i.shape,c=new fg("real",l,t),u=new fg("imag",l,t),h=[{dataId:s.complexTensorInfos.real.dataId,dtype:s.complexTensorInfos.real.dtype,shape:l},{dataId:s.complexTensorInfos.imag.dataId,dtype:s.complexTensorInfos.imag.dtype,shape:l}],d=e.runWebGLProgram(c,h,"float32"),p=e.runWebGLProgram(u,h,"float32"),f=qs({inputs:{real:d,imag:p},backend:e});e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(p);const m=ot({inputs:{x:f},backend:e,attrs:{shape:n.shape}});return e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(f),m}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qV(n){const{inputs:t,backend:e}=n,{input:s}=t;return J1(s,!1,e)}const KV={kernelName:Gh,backendName:"webgl",kernelFunc:qV};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class XV{constructor(t,e){this.outputShape=[],this.variableNames=["x"],this.outputShape=t,this.userCode=`
      uniform float value;
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}getCustomSetupFunc(t){return(e,s)=>{this.valueLoc==null&&(this.valueLoc=e.getUniformLocationNoThrow(s,"value")),e.gl.uniform1f(this.valueLoc,t)}}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mf(n){const{backend:t,attrs:e}=n,{shape:s,value:r}=e;let{dtype:o}=e;if(o=o||Po(r),o==="string"){const a=Jr(o,H(s));return a.fill(r),t.makeTensorInfo(s,o,a)}else{const a=new XV(s,r),i=a.getCustomSetupFunc(r);return t.runWebGLProgram(a,[],o,i)}}const YV={kernelName:Hh,backendName:"webgl",kernelFunc:mf};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class JV{constructor(t){this.variableNames=["Image"],this.outputShape=[];const e=t[2];this.outputShape=t,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${e} - x;
          float outputValue;
          if(coordX >= 0 && coordX < ${e}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZV={kernelName:jh,backendName:"webgl",kernelFunc:({inputs:n,backend:t})=>{const{image:e}=n,s=t,r=new JV(e.shape);return s.runWebGLProgram(r,[e],e.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mg="return floor(x);",QV=Lt({opSnippet:mg,packedOpSnippet:mg,cpuKernelImpl:G3}),t4={kernelName:na,backendName:"webgl",kernelFunc:QV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const e4=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,n4=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,s4=qe({opSnippet:e4,packedOpSnippet:n4,dtype:"int32"}),r4={kernelName:sa,backendName:"webgl",kernelFunc:s4};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class o4{constructor(t){this.variableNames=["A"];const e=tn(),[s,r]=t;this.outputShape=t,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${s}.0);

        vec4 values = ${e.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class a4{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const e=tn(),[s,r]=t;this.outputShape=t,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${r}.0, ${s}.0);
            vec4 values = ${e.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${e.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const i4={kernelName:Lu,backendName:"webgl",kernelFunc:l4};let Dr;function l4(n){const{inputs:t,backend:e,attrs:s}=n;let{pixels:r}=t;const{numChannels:o}=s,a=typeof HTMLVideoElement<"u"&&r instanceof HTMLVideoElement,i=typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement,[l,c]=a?[r.videoWidth,r.videoHeight]:[r.width,r.height],u=[c,l],h=[c,l,o];(i||a)&&(Dr==null&&(Dr=document.createElement("canvas").getContext("2d")),Dr.canvas.width=l,Dr.canvas.height=c,Dr.drawImage(r,0,0,l,c),r=Dr.canvas);const d=e.makeTensorInfo(u,"int32");e.texData.get(d.dataId).usage=mn.PIXELS,e.gpgpu.uploadPixelDataToTexture(e.getTexture(d.dataId),r);const p=X().getBool("WEBGL_PACK")?new a4(h):new o4(h),f=e.runWebGLProgram(p,[d],"int32");return e.disposeData(d.dataId),f}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c4(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,filter:o,bias:a,preluActivationWeights:i}=t,{strides:l,pad:c,dataFormat:u,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=s,m=$s(u),g=Pe(r.shape,o.shape,l,h,c,d,!1,m);let y;const b=[];if(g.filterHeight===1&&g.filterWidth===1&&g.dilationHeight===1&&g.dilationWidth===1&&g.strideHeight===1&&g.strideWidth===1&&(g.padInfo.type==="SAME"||g.padInfo.type==="VALID"))y=j1({x:r,filter:o,convInfo:g,backend:e,bias:a,activation:p,preluActivationWeights:i,leakyreluAlpha:f});else if(X().getBool("WEBGL_CONV_IM2COL")&&r.shape[0]===1)y=q1({x:r,filter:o,convInfo:g,backend:e,bias:a,activation:p,preluActivationWeights:i,leakyreluAlpha:f});else{const x=a!=null,w=i!=null,C=p==="leakyrelu",k=p?eu(p,!1):null,I=new H1(g,x,k,w,C),S=[r,o];if(a&&S.push(a),i&&S.push(i),C){const E=e.makeTensorInfo([],"float32",Ws(f,"float32"));S.push(E),b.push(E)}y=e.runWebGLProgram(I,S,"float32")}const $=ot({inputs:{x:y},backend:e,attrs:{shape:g.outShape}});return b.push(y),b.forEach(x=>e.disposeIntermediateTensorInfo(x)),$}const u4={kernelName:Hi,backendName:"webgl",kernelFunc:c4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h4(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,filter:o,bias:a,preluActivationWeights:i}=t,{strides:l,pad:c,dilations:u,dimRoundingMode:h,activation:d,leakyreluAlpha:p}=s,f=[];let m=u;m==null&&(m=[1,1]),N(He(l,m),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${m}'`);const g=Pe(r.shape,o.shape,l,m,c,h,!0),y=X().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels===1,b=d?eu(d,y):null,$=[r,o],x=a!=null,w=i!=null,C=d==="leakyrelu";if(x&&$.push(a),w&&$.push(i),C){const S=e.makeTensorInfo([],"float32",Ws(p,"float32"));$.push(S),f.push(S)}let k;y?k=new X1(g,x,b,w,C):k=new K1(g,x,b,w,C);const I=e.runWebGLProgram(k,$,"float32");return f.forEach(S=>e.disposeIntermediateTensorInfo(S)),I}const d4={kernelName:ji,backendName:"webgl",kernelFunc:h4};class p4{constructor(t,e,s){this.sliceDim=t,this.strides=e,this.variableNames=["x","indices"],this.outputShape=s;const r=ne(e.length),o=ne(s.length),a=this.sliceDim>1?"strides[j]":"strides";this.userCode=`
        ${r} strides = ${r}(${this.strides});
         void main() {
          ${o} coords = getOutputCoords();
          int flattenIndex = 0;
          for (int j = 0; j < ${this.sliceDim}; j++) {
            int index = round(getIndices(coords[0], j));
            flattenIndex += index * ${a};
          }
          setOutput(getX(flattenIndex, coords[1]));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f4(n){const{inputs:t,backend:e}=n,{params:s,indices:r}=t,o=r.shape,a=o[o.length-1],[i,l,c,u]=kd(s,r),h=ot({inputs:{x:r},backend:e,attrs:{shape:[l,a]}}),d=ot({inputs:{x:s},backend:e,attrs:{shape:[H(s.shape)/c,c]}}),p=new p4(a,u,[l,c]),f=e.runWebGLProgram(p,[d,h],d.dtype),m=ot({inputs:{x:f},backend:e,attrs:{shape:i}});return e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(f),m}const m4={kernelName:qh,backendName:"webgl",kernelFunc:f4};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class g4{constructor(t,e){this.variableNames=["A","indices"],this.outputShape=e,this.rank=e.length;const s=ne(this.rank),r=y4(t);this.userCode=`
      void main() {
        ${s} resRC = getOutputCoords();
        setOutput(getA(${r}));
      }
    `}}function y4(n,t){const e=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let r=0;r<n.length;r++)r===2?s.push("int(getIndices(resRC.x, resRC.z))"):s.push(`${e[r]}`);return s.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b4(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,indices:o}=t,{axis:a,batchDims:i}=s,l=Et(a,r.shape)[0],c=Sp(r,o,l,i),u=H(o.shape),h=[],d=ot({inputs:{x:r},backend:e,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),p=ot({inputs:{x:o},backend:e,attrs:{shape:[c.batchSize,u/c.batchSize]}});h.push(d),h.push(p);const f=[c.batchSize,c.outerSize,u/c.batchSize,c.sliceSize];if(e.shouldExecuteOnCPU([r,o])||r.dtype==="string"){const b=e.bufferSync(p),$=e.bufferSync(d),x=H3($,b,f);return h.forEach(w=>e.disposeIntermediateTensorInfo(w)),e.makeTensorInfo(c.outputShape,x.dtype,x.values)}const m=new g4(d.shape,f),g=e.runWebGLProgram(m,[d,p],d.dtype);h.push(g);const y=ot({inputs:{x:g},backend:e,attrs:{shape:c.outputShape}});return h.forEach(b=>e.disposeIntermediateTensorInfo(b)),y}const x4={kernelName:zl,backendName:"webgl",kernelFunc:b4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const w4="return float(a > b);",v4=`
  return vec4(greaterThan(a, b));
`,$4=qe({opSnippet:w4,packedOpSnippet:v4,cpuKernelImpl:j3,dtype:"bool"}),k4={kernelName:Bl,backendName:"webgl",kernelFunc:$4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const C4="return float(a >= b);",N4=`
  return vec4(greaterThanEqual(a, b));
`,I4=qe({opSnippet:C4,packedOpSnippet:N4,dtype:"bool"}),S4={kernelName:ra,backendName:"webgl",kernelFunc:I4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T4(n){const{inputs:t,backend:e}=n,{input:s}=t;return J1(s,!0,e)}const E4={kernelName:Kh,backendName:"webgl",kernelFunc:T4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const A4="return float(!isnan(x) && !isinf(x));",D4=Lt({opSnippet:A4,dtype:"bool"}),R4={kernelName:aa,backendName:"webgl",kernelFunc:D4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const F4="return float(isinf(x));",O4=Lt({opSnippet:F4,dtype:"bool"}),_4={kernelName:ia,backendName:"webgl",kernelFunc:O4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const L4="return float(isnan(x));",P4=Lt({opSnippet:L4,dtype:"bool"}),z4={kernelName:la,backendName:"webgl",kernelFunc:P4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const B4="return float(a < b);",M4=`
  return vec4(lessThan(a, b));
`,V4=qe({opSnippet:B4,packedOpSnippet:M4,cpuKernelImpl:q3,dtype:"bool"}),W4={kernelName:Vl,backendName:"webgl",kernelFunc:V4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const U4="return float(a <= b);",G4=`
  return vec4(lessThanEqual(a, b));
`,H4=qe({opSnippet:U4,packedOpSnippet:G4,dtype:"bool"}),j4={kernelName:Wl,backendName:"webgl",kernelFunc:H4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q4(n){const{backend:t,attrs:e}=n,{start:s,stop:r,num:o}=e,a=K3(s,r,o);return t.makeTensorInfo([a.length],"float32",a)}const K4={kernelName:Yh,backendName:"webgl",kernelFunc:q4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const X4=`if (x < 0.0) return NAN;
  return log(x);`,Y4=`
  vec4 result = log(x);
  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));
  result.r = isNaN.r == 1.0 ? NAN : result.r;
  result.g = isNaN.g == 1.0 ? NAN : result.g;
  result.b = isNaN.b == 1.0 ? NAN : result.b;
  result.a = isNaN.a == 1.0 ? NAN : result.a;

  return result;
`,J4=Lt({opSnippet:X4,packedOpSnippet:Y4,cpuKernelImpl:X3}),Z4={kernelName:ca,backendName:"webgl",kernelFunc:J4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Q4="return log(1.0 + x);",tW=Lt({opSnippet:Q4}),eW={kernelName:ua,backendName:"webgl",kernelFunc:tW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nW="return float(a >= 1.0 && b >= 1.0);",sW=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,rW=qe({opSnippet:nW,packedOpSnippet:sW,dtype:"bool"}),oW={kernelName:Ul,backendName:"webgl",kernelFunc:rW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aW="return float(!(x >= 1.0));",iW=Lt({opSnippet:aW}),lW={kernelName:Gl,backendName:"webgl",kernelFunc:iW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cW="return float(a >= 1.0 || b >= 1.0);",uW=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,hW=qe({opSnippet:cW,packedOpSnippet:uW,dtype:"bool"}),dW={kernelName:Hl,backendName:"webgl",kernelFunc:hW};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class pW{constructor(t,e,s,r,o){this.variableNames=["x"],this.outputShape=[];const a=e,i=t[3]-1;this.outputShape=t;let l;const c=`float(${s}) + float(${r}) * sum`;o===.5?l=`inversesqrt(${c})`:o===1?l=`1.0/(${c})`:l=`exp(log(${c}) * float(-${o}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${a}; j <= ${a}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${i}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${l};
        setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class fW{constructor(t,e,s,r,o){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const a=e,i=t[3]-1;this.outputShape=t;let l;const c=`float(${s}) + float(${r}) * sum`;o===.5?l=`inversesqrt(${c})`:o===1?l=`1.0/(${c})`:l=`exp(log(${c}) * float(-${o}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${a};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${a}; j <= ${a}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${l};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mW=n=>{const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{depthRadius:o,bias:a,alpha:i,beta:l}=s,c=X().getBool("WEBGL_PACK_NORMALIZATION")?new fW(r.shape,o,a,i,l):new pW(r.shape,o,a,i,l);return e.runWebGLProgram(c,[r],r.dtype)},gW={kernelName:jl,backendName:"webgl",kernelFunc:mW};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yW{constructor(t,e,s,r,o){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=t,this.depth=t[3],this.depthRadius=e,this.bias=s,this.alpha=r,this.beta=o,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${e})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${e} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${r}) * norm + float(${s});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${r})
                * float(${o})
                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${o});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bW=n=>{const{inputs:t,backend:e,attrs:s}=n,{x:r,y:o,dy:a}=t,{depthRadius:i,bias:l,alpha:c,beta:u}=s,h=new yW(r.shape,i,l,c,u);return e.runWebGLProgram(h,[r,o,a],r.dtype)},xW={kernelName:Jh,backendName:"webgl",kernelFunc:bW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wW(n,t,e,s){const r=H(t),a=H(n.shape)/r,i=ot({inputs:{x:n},attrs:{shape:[a,r]},backend:s}),l=Ir(i,n.dtype,"max",s),c=ot({inputs:{x:l},attrs:{shape:e},backend:s});return s.disposeIntermediateTensorInfo(i),s.disposeIntermediateTensorInfo(l),c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z1(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{reductionIndices:o,keepDims:a}=s,i=r.shape.length,l=Et(o,r.shape);let c=l;const u=ye(c,i),h=u!=null,d=e.shouldExecuteOnCPU([r]);let p=r;if(h){if(d){const $=e.texData.get(p.dataId).values,x=new Array(i);for(let k=0;k<x.length;k++)x[k]=r.shape[u[k]];const w=df($,r.shape,r.dtype,u,x);p=e.makeTensorInfo(x,r.dtype);const C=e.texData.get(p.dataId);C.values=w}else p=nu(r,u,e);c=ve(c.length,i)}je("max",c,i);const[f,m]=ze(p.shape,c);let g=f;a&&(g=we(f,l));let y;if(d){const $=e.texData.get(p.dataId).values,x=Y3($,H(m),g,r.dtype);y=e.makeTensorInfo(g,r.dtype);const w=e.texData.get(y.dataId);w.values=x}else y=wW(p,m,g,e);return h&&e.disposeIntermediateTensorInfo(p),y}const vW={kernelName:ql,backendName:"webgl",kernelFunc:Z1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $W=D1+`
  return max(a, b);
`,kW=`
  vec4 result = vec4(max(a, b));
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+tu+`
  return result;
`,CW=qe({opSnippet:$W,packedOpSnippet:kW,cpuKernelImpl:J3}),NW={kernelName:ha,backendName:"webgl",kernelFunc:CW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IW(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t;ri(r,"maxPool");const{filterSize:o,strides:a,pad:i,dimRoundingMode:l}=s,c=1;N(He(a,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${c}'`);const u=_n(r.shape,o,a,c,i,l);if(u.filterWidth===1&&u.filterHeight===1&&Gt(u.inShape,u.outShape))return dn({inputs:{x:r},backend:e});const h=new _o(u,"max",!1);return e.runWebGLProgram(h,[r],r.dtype)}const SW={kernelName:Kl,backendName:"webgl",kernelFunc:IW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TW(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{filterSize:o,strides:a,pad:i,dataFormat:l,dimRoundingMode:c}=s,u=[1,1,1],h=vs(r.shape,o,a,u,i,c,l),d=new ff(h,"max",!1);return e.runWebGLProgram(d,[r],r.dtype)}const EW={kernelName:Xl,backendName:"webgl",kernelFunc:TW};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class AW{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideHeight,s=t.strideWidth,r=t.dilationHeight,o=t.effectiveFilterHeight,a=t.effectiveFilterWidth,i=o-1-t.padInfo.top,l=a-1-t.padInfo.left,c=o*a-1;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${o};
          wR += ${r}) {
          float dyR = float(dyRCorner + wR) / ${e}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${a}; wC++) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${c} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${a} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}}class DW{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideDepth,s=t.strideHeight,r=t.strideWidth,o=t.dilationDepth,a=t.dilationHeight,i=t.dilationWidth,l=t.effectiveFilterDepth,c=t.effectiveFilterHeight,u=t.effectiveFilterWidth,h=l-1-t.padInfo.front,d=c-1-t.padInfo.top,p=u-1-t.padInfo.left,f=l*c*u-1;this.userCode=`
      const ivec3 pads = ivec3(${h}, ${d}, ${p});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${l};
           wD += ${o}) {
          float dyD = float(dyDCorner + wD) / ${e}.0;

          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${c};
              wR += ${a}) {
            float dyR = float(dyRCorner + wR) / ${s}.0;

            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${u};
                wC += ${i}) {
              float dyC = float(dyCCorner + wC) / ${r}.0;

              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${f} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${c} * ${u} +
                  wR * ${u} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RW(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,input:o}=t,a=o,{filterSize:i,strides:l,pad:c,dimRoundingMode:u}=s,h=[1,1,1],d=vs(a.shape,i,l,h,c,u),p=new ff(d,"max",!0),f=e.runWebGLProgram(p,[a],a.dtype),m=new DW(d),g=e.runWebGLProgram(m,[r,f],a.dtype);return e.disposeIntermediateTensorInfo(f),g}const FW={kernelName:Qh,backendName:"webgl",kernelFunc:RW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OW(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,input:o,output:a}=t,i=o;ri([o,a],"maxPoolGrad");const{filterSize:l,strides:c,pad:u,dimRoundingMode:h}=s,d=_n(i.shape,l,c,1,u,h),p=!0,f=new _o(d,"max",p),m=e.runWebGLProgram(f,[i],i.dtype),g=new AW(d),y=e.runWebGLProgram(g,[r,m],i.dtype);return e.disposeIntermediateTensorInfo(m),y}const _W={kernelName:Zh,backendName:"webgl",kernelFunc:OW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LW(n,t,e,s){let r=new _o(e,"max",!1);const o=s.runWebGLProgram(r,[n],"float32");r=new _o(e,"max",!0,!0,t);const a=s.runWebGLProgram(r,[n],"float32");return[o,a]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PW={kernelName:td,backendName:"webgl",kernelFunc:({inputs:n,attrs:t,backend:e})=>{const{x:s}=n,{filterSize:r,strides:o,pad:a,includeBatchInIndex:i}=t,l=e;N(s.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${s.shape.length}.`);const c=[1,1];N(He(o,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${c}'`);const u=_n(s.shape,r,o,c,a),[h,d]=LW(s,i,u,l);return[h,d]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zW(n,t,e,s){const r=H(t),a=H(n.shape)/r,i=ot({inputs:{x:n},attrs:{shape:[a,r]},backend:s}),l=Ir(i,"float32","mean",s),c=ot({inputs:{x:l},attrs:{shape:e},backend:s});return s.disposeIntermediateTensorInfo(i),s.disposeIntermediateTensorInfo(l),c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BW={kernelName:Yl,backendName:"webgl",kernelFunc:({inputs:n,attrs:t,backend:e})=>{const{x:s}=n,{keepDims:r,axis:o}=t,a=e,i=s.shape.length,l=Et(o,s.shape);let c=l;const u=ye(c,i),h=u!=null,d=a.shouldExecuteOnCPU([s]),p=[];let f=s;if(h){if(d){const x=a.texData.get(f.dataId).values,w=new Array(i);for(let I=0;I<w.length;I++)w[I]=s.shape[u[I]];const C=df(x,s.shape,s.dtype,u,w);f=a.makeTensorInfo(w,s.dtype);const k=a.texData.get(f.dataId);k.values=C}else f=nu(s,u,a);p.push(f),c=ve(c.length,i)}je("sum",c,i);const[m,g]=ze(f.shape,c);let y=m;r&&(y=we(m,l));const b=zW(f,g,y,a);for(const $ of p)a.disposeIntermediateTensorInfo($);return b}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MW(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o,keepDims:a}=s,i=r.shape.length,l=Et(o,r.shape);let c=l;const u=ye(c,i);let h=r;u!=null&&(h=on({inputs:{x:r},backend:e,attrs:{perm:u}}),c=ve(c.length,r.shape.length)),je("min",c,i);const[d,p]=ze(h.shape,c),f=H(p),m=ot({inputs:{x:h},backend:e,attrs:{shape:[-1,f]}}),g=Ir(m,m.dtype,"min",e);let y;if(a){const b=we(d,l);y=ot({inputs:{x:g},backend:e,attrs:{shape:b}})}else y=ot({inputs:{x:g},backend:e,attrs:{shape:d}});return e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(g),u!=null&&e.disposeIntermediateTensorInfo(h),y}const VW={kernelName:Jl,backendName:"webgl",kernelFunc:MW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WW=D1+`
  return min(a, b);
`,UW=`
  vec4 result = vec4(min(a, b));
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+tu+`
  return result;
`,GW=qe({opSnippet:WW,packedOpSnippet:UW,cpuKernelImpl:Z3}),HW={kernelName:da,backendName:"webgl",kernelFunc:GW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jW{constructor(t,e,s){this.variableNames=["x"],this.outputShape=e.map((u,h)=>u[0]+t[h]+u[1]);const r=t.length,o=ne(r),a=e.map(u=>u[0]).join(","),i=e.map((u,h)=>u[0]+t[h]).join(","),l=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),c=s==="reflect"?0:1;if(r===1){this.userCode=`
        int start = ${a};
        int end = ${i};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${c};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${c};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${o} start = ${o}(${a});
      ${o} end = ${o}(${i});

      void main() {
        ${o} outC = getOutputCoords();
        for (int i = 0; i < ${r}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${c};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${c};
          }
        }
        ${o} coords = outC - start;
        setOutput(getX(${l}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class qW{constructor(t,e,s){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.map((f,m)=>f[0]+t[m]+f[1]);const r=t.length,o=ne(r),a=e.map(f=>f[0]).join(","),i=e.map((f,m)=>f[0]+t[m]).join(","),l=Qe("rc",r),c=Qe("source",r),u=`${l[r-1]} < ${this.outputShape[r-1]}`,h=r===1?"source":`vec2(${c.slice(-2).join()})`,d=s==="reflect"?0:1;let p="";if(r===1){const f=`
        ${o} source = rc;
        if (source < start) {
          source = start * 2 - source - ${d};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${d};
        }
        source -= start;
      `;p=`
        ${o} rc = outputLoc;
        ${f}
        result[0] = getChannel(getX(${c.join()}), ${h});
        ${l[r-1]} += 1;
        if(${u}) {
          ${f}
          result[1] = getChannel(getX(${c.join()}), ${h});
        }
      `}else{const f=`
        ${o} source = rc;
        ${o} lt = ${o}(lessThan(source, start));
        ${o} gte = ${o}(greaterThanEqual(source, end));
        ${o} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${d}) +
                gte * ((end - 1) * 2 - source + ${d});
        source -= start;
      `;p=`
        ${o} rc = outputLoc;
        ${f}
        result[0] = getChannel(getX(${c.join()}), ${h});
        ${l[r-1]} += 1;
        if(${u}) {
          ${f}
          result[1] = getChannel(getX(${c.join()}), ${h});
        }
        rc = outputLoc;
        ${l[r-2]} += 1;
        if(${l[r-2]} < ${this.outputShape[r-2]}) {
          ${f}
          result[2] = getChannel(getX(${c.join()}), ${h});
          ${l[r-1]} += 1;
          if(${u}) {
            ${f}
            result[3] = getChannel(getX(${c.join()}), ${h});
          }
        }
      `}this.userCode=`
      const ${o} start = ${o}(${a});
      const ${o} end = ${o}(${i});

      void main() {
        ${o} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${p}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KW=({inputs:n,backend:t,attrs:e})=>{const{x:s}=n,{paddings:r,mode:o}=e,a=X().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new qW(s.shape,r,o):new jW(s.shape,r,o);return t.runWebGLProgram(a,[s],s.dtype)},XW={kernelName:Zl,backendName:"webgl",kernelFunc:KW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YW=`if (b == 0.0) return NAN;
  return mod(a, b);`,JW=`
  vec4 result = mod(a, b);
  vec4 isNaN = vec4(equal(b, vec4(0.0)));
  `+tu+`
  return result;
`,ZW=qe({opSnippet:YW,packedOpSnippet:JW}),QW={kernelName:pa,backendName:"webgl",kernelFunc:ZW};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class tU{constructor(t,e,s){this.variableNames=["probs"],this.outputShape=[t,s],this.userCode=`
      uniform float seed;

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${e-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${e-1}));
      }
    `}getCustomSetupFunc(t){return(e,s)=>{this.seedLoc==null&&(this.seedLoc=e.getUniformLocation(s,"seed")),e.gl.uniform1f(this.seedLoc,t)}}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eU=`
if (a == b) {
  return 1.0;
};
return a / b;`,nU=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,Q1=qe({opSnippet:eU,packedOpSnippet:nU,checkOutOfBounds:!0}),sU={kernelName:Jo,backendName:"webgl",kernelFunc:Q1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gg="return a - b;",tw=qe({opSnippet:gg,packedOpSnippet:gg,supportsComplex:!0,cpuKernelImpl:az}),rU={kernelName:Ea,backendName:"webgl",kernelFunc:tw};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ew(n){const{inputs:t,backend:e,attrs:s}=n,{logits:r}=t,{dim:o}=s,a=Et([o],r.shape),i=Z1({inputs:{x:r},backend:e,attrs:{reductionIndices:a,keepDims:!1}}),l=we(i.shape,a),c=ot({inputs:{x:i},backend:e,attrs:{shape:l}}),u=tw({inputs:{a:r,b:c},backend:e}),h=Y1({inputs:{x:u},backend:e}),d=pf({inputs:{x:h},backend:e,attrs:{axis:a,keepDims:!1}}),p=ot({inputs:{x:d},backend:e,attrs:{shape:l}}),f=Q1({inputs:{a:h,b:p},backend:e});return e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(u),e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(p),f}const oU={kernelName:mc,backendName:"webgl",kernelFunc:ew};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aU(n){const{inputs:t,backend:e,attrs:s}=n,{logits:r}=t,{numSamples:o,seed:a,normalized:i}=s,l=i?r:ew({inputs:{logits:r},backend:e,attrs:{dim:r.shape.length-1}}),c=l.shape[0],u=l.shape[1],h=new tU(c,u,o),d=h.getCustomSetupFunc(a),p=e.runWebGLProgram(h,[l],"int32",d);return i||e.disposeIntermediateTensorInfo(l),p}const iU={kernelName:ed,backendName:"webgl",kernelFunc:aU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yg="return -x;";function lU(n){const{inputs:t,backend:e}=n,{x:s}=t;if(e.shouldExecuteOnCPU([s])){const o=e.texData.get(s.dataId),[a,i]=tz(o.values,s.shape,s.dtype);return e.makeTensorInfo(i,s.dtype,a)}let r;return X().getBool("WEBGL_PACK_UNARY_OPERATIONS")?r=new Br(s.shape,yg):r=new Fs(s.shape,yg),e.runWebGLProgram(r,[s],s.dtype)}const cU={kernelName:Ql,backendName:"webgl",kernelFunc:lU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uU=rp;function hU(n){ro("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:e,attrs:s}=n,{boxes:r,scores:o}=t,{maxOutputSize:a,iouThreshold:i,scoreThreshold:l}=s,c=e.readSync(r.dataId),u=e.readSync(o.dataId),{selectedIndices:h}=uU(c,u,a,i,l);return e.makeTensorInfo([h.length],"int32",new Int32Array(h))}const dU={kernelName:nd,backendName:"webgl",kernelFunc:hU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pU=op;function fU(n){ro("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:e,attrs:s}=n,{boxes:r,scores:o}=t,{maxOutputSize:a,iouThreshold:i,scoreThreshold:l,padToMaxOutputSize:c}=s,u=e.readSync(r.dataId),h=e.readSync(o.dataId),{selectedIndices:d,validOutputs:p}=pU(u,h,a,i,l,c);return[e.makeTensorInfo([d.length],"int32",new Int32Array(d)),e.makeTensorInfo([],"int32",new Int32Array([p]))]}const mU={kernelName:sd,backendName:"webgl",kernelFunc:fU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gU=ap;function yU(n){ro("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:e,attrs:s}=n,{boxes:r,scores:o}=t,{maxOutputSize:a,iouThreshold:i,scoreThreshold:l,softNmsSigma:c}=s,u=e.readSync(r.dataId),h=e.readSync(o.dataId),d=a,p=i,f=l,m=c,{selectedIndices:g,selectedScores:y}=gU(u,h,d,p,f,m);return[e.makeTensorInfo([g.length],"int32",new Int32Array(g)),e.makeTensorInfo([y.length],"float32",new Float32Array(y))]}const bU={kernelName:rd,backendName:"webgl",kernelFunc:yU};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xU{constructor(t,e,s,r){this.variableNames=["indices"],this.outputShape=[t,e],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${r}), float(${s}),
                      float(index == coords.y)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wU=n=>{const{inputs:t,backend:e,attrs:s}=n,{indices:r}=t,{depth:o,onValue:a,offValue:i}=s,l=H(r.shape),c=new xU(l,o,a,i),u=ot({inputs:{x:r},backend:e,attrs:{shape:[l]}}),h=e.runWebGLProgram(c,[u],r.dtype);e.disposeIntermediateTensorInfo(u);const d=[...r.shape,o],p=ot({inputs:{x:h},backend:e,attrs:{shape:d}});return e.disposeIntermediateTensorInfo(h),p},vU={kernelName:nc,backendName:"webgl",kernelFunc:wU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yl(n){const{inputs:t,backend:e}=n,{x:s}=t;if(s.dtype==="complex64"){const r=li({inputs:{input:s},backend:e}),o=yl({inputs:{x:r},backend:e}),a=su({inputs:{input:s},backend:e}),i=yl({inputs:{x:a},backend:e}),l=qs({inputs:{real:o,imag:i},backend:e});return e.disposeIntermediateTensorInfo(r),e.disposeIntermediateTensorInfo(o),e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(i),l}else return mf({attrs:{shape:s.shape,dtype:s.dtype,value:s.dtype==="string"?"":0},backend:e})}const $U={kernelName:xc,backendName:"webgl",kernelFunc:yl};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nw(n){const{inputs:t,backend:e}=n,{x:s}=t;if(s.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(s.dtype==="complex64"){const r=li({inputs:{input:s},backend:e}),o=nw({inputs:{x:r},backend:e}),a=su({inputs:{input:s},backend:e}),i=yl({inputs:{x:a},backend:e}),l=qs({inputs:{real:o,imag:i},backend:e});return e.disposeIntermediateTensorInfo(r),e.disposeIntermediateTensorInfo(o),e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(i),l}else return mf({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:e})}const kU={kernelName:ec,backendName:"webgl",kernelFunc:nw};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CU(n){const{inputs:t,backend:e,attrs:s}=n,{axis:r}=s;if(t.length===1)return kh({inputs:{input:t[0]},backend:e,attrs:{dim:r}});const o=t[0].shape,a=t[0].dtype;t.forEach(u=>{bl(o,u.shape,"All tensors passed to stack must have matching shapes"),N(a===u.dtype,()=>"All tensors passed to stack must have matching dtypes")});const i=[],l=t.map(u=>{const h=kh({inputs:{input:u},backend:e,attrs:{dim:r}});return i.push(h),h}),c=G1({inputs:l,backend:e,attrs:{axis:r}});return i.forEach(u=>e.disposeIntermediateTensorInfo(u)),c}const NU={kernelName:sc,backendName:"webgl",kernelFunc:CU};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class IU{constructor(t,e,s){this.variableNames=["x"],this.outputShape=e.map((c,u)=>c[0]+t[u]+c[1]);const r=t.length,o=ne(r),a=e.map(c=>c[0]).join(","),i=e.map((c,u)=>c[0]+t[u]).join(","),l=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);if(r===1){this.userCode=`
        int start = ${a};
        int end = ${i};
        uniform float value;

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${o} start = ${o}(${a});
      ${o} end = ${o}(${i});
      uniform float value;

      void main() {
        ${o} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${o} coords = outC - start;
          setOutput(getX(${l}));
        }
      }
    `}getCustomSetupFunc(t){return(e,s)=>{this.valueLoc==null&&(this.valueLoc=e.getUniformLocationNoThrow(s,"value")),e.gl.uniform1f(this.valueLoc,t)}}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class SU{constructor(t,e,s){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.map((m,g)=>m[0]+t[g]+m[1]);const r=t.length,o=ne(r),a=e.map(m=>m[0]).join(","),i=e.map((m,g)=>m[0]+t[g]).join(","),l=Qe("rc",r),c=Qe("source",r),u=`${l[r-1]} < ${this.outputShape[r-1]}`,h=r===1?"source":`vec2(${c.slice(-2).join()})`,d=[`${o} rc = outputLoc;`,`${l[r-1]} += 1;
       if(${u}) {
      `,r===1?"":`}
       rc = outputLoc;
       ${l[r-2]} += 1;
       if(${l[r-2]} < ${this.outputShape[r-2]}) {`,r===1?"":`  ${l[r-1]} += 1;
         if(${u}) {`],p=r===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let f="";for(let m=0,g=r===1?2:4;m<g;m++)f+=`
        ${d[m]}
        if (${p}) {
          result[${m}] = float(value);
        } else {
          ${o} source = rc - start;
          result[${m}] = getChannel(getX(${c.join()}), ${h});
        }
      `;f+=r===1?"} ":"}}",this.userCode=`
      const ${o} start = ${o}(${a});
      const ${o} end = ${o}(${i});
      uniform float value;

      void main() {
        ${o} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${f}
        setOutput(result);
      }
    `}getCustomSetupFunc(t){return(e,s)=>{this.valueLoc==null&&(this.valueLoc=e.getUniformLocationNoThrow(s,"value")),e.gl.uniform1f(this.valueLoc,t)}}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sw=n=>{const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{paddings:o,constantValue:a}=s,i=X().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new SU(r.shape,o,a):new IU(r.shape,o,a),l=i.getCustomSetupFunc(a);return e.runWebGLProgram(i,[r],r.dtype,l)},TU={kernelName:rc,backendName:"webgl",kernelFunc:sw};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EU=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,AU=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));
  `+tu+`
  return result;
`,DU=qe({opSnippet:EU,packedOpSnippet:AU}),RU={kernelName:ma,backendName:"webgl",kernelFunc:DU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FU(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o,keepDims:a}=s,i=r.shape.length,l=[],c=Et(o,r.shape);let u=c;const h=ye(u,i);let d=r;h!=null&&(d=on({inputs:{x:r},backend:e,attrs:{perm:h}}),u=ve(u.length,i),l.push(d)),je("prod",u,i);let p;if(e.shouldExecuteOnCPU([d])){const f=e.texData.get(d.dataId).values,{outVals:m,outShape:g,outDtype:y}=ez(d.shape,d.dtype,f,u);p=e.makeTensorInfo(g,y,m)}else{const[f,m]=ze(d.shape,u),g=H(m),y=ot({inputs:{x:d},backend:e,attrs:{shape:[-1,g]}}),b=bd(r.dtype),$=Ir(y,b,"prod",e);p=ot({inputs:{x:$},backend:e,attrs:{shape:f}}),l.push(y),l.push($)}if(a){l.push(p);const f=we(p.shape,c);p=ot({inputs:{x:p},backend:e,attrs:{shape:f}})}return l.forEach(f=>e.disposeIntermediateTensorInfo(f)),p}const OU={kernelName:od,backendName:"webgl",kernelFunc:FU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rw=n=>{const{backend:t,attrs:e}=n,{start:s,stop:r,step:o,dtype:a}=e,i=nz(s,r,o,a);return t.makeTensorInfo([i.length],a,i)},_U={kernelName:ad,backendName:"webgl",kernelFunc:rw};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LU="return 1.0 / x;",PU=Lt({opSnippet:LU}),zU={kernelName:ga,backendName:"webgl",kernelFunc:PU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BU=Jn+`
  return (x < 0.0) ? 0.0 : x;
`,MU=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,VU=Lt({opSnippet:BU,packedOpSnippet:MU}),WU={kernelName:ya,backendName:"webgl",kernelFunc:VU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UU=Jn+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,GU=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,HU=Lt({opSnippet:UU,packedOpSnippet:GU}),jU={kernelName:ba,backendName:"webgl",kernelFunc:HU};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class qU{constructor(t,e,s,r,o){this.variableNames=["A"],this.outputShape=[];const[a,i,l,c]=t;this.outputShape=[a,e,s,c];const u=[r&&e>1?i-1:i,r&&s>1?l-1:l],h=[r&&e>1?e-1:e,r&&s>1?s-1:s];let d;o?d="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":d="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${u[0]/h[0]},
          ${u[1]/h[1]});
      const vec2 inputShapeRC = vec2(${i}.0, ${l}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${d};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class KU{constructor(t,e,s,r,o){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,i,l,c]=t;this.outputShape=[a,e,s,c];const u=[r&&e>1?i-1:i,r&&s>1?l-1:l],h=[r&&e>1?e-1:e,r&&s>1?s-1:s];let d;o?d="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":d="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${u[0]/h[0]},
          ${u[1]/h[1]},
          ${u[1]/h[1]});
      const vec3 inputShapeRC = vec3(${i}.0, ${l}.0,
                                     ${l}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${d};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${c-1};
        bool hasNextRow = coords.z < ${s-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XU(n){const{inputs:t,backend:e,attrs:s}=n,{images:r}=t,{alignCorners:o,halfPixelCenters:a,size:i}=s,[l,c]=i,u=X().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new KU(r.shape,l,c,o,a):new qU(r.shape,l,c,o,a);return e.runWebGLProgram(u,[r],"float32")}const YU={kernelName:lc,backendName:"webgl",kernelFunc:XU};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class JU{constructor(t,e,s){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;const[,r,o]=e,[,a,i]=t,l=[s&&a>1?r-1:r,s&&i>1?o-1:o],c=[s&&a>1?a-1:a,s&&i>1?i-1:i],u=l[0]/c[0],h=l[1]/c[1],d=1/u,p=1/h,f=Math.ceil(d)*2+2,m=Math.ceil(p)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${u});
        const float widthScale = float(${h});

        const float invHeightScale = float(${d});
        const float invWidthScale = float(${p});

        const int winHeight = int(${f});
        const int winWidth = int(${m});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${o-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZU(n){const{inputs:t,backend:e,attrs:s}=n,{images:r,dy:o}=t,{alignCorners:a}=s,i=new JU(o.shape,r.shape,a);return e.runWebGLProgram(i,[o],o.dtype)}const QU={kernelName:cd,backendName:"webgl",kernelFunc:ZU};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class tG{constructor(t,e,s,r,o){this.variableNames=["A"],this.outputShape=[];const[a,i,l,c]=t;this.outputShape=[a,e,s,c];const u=[r&&e>1?i-1:i,r&&s>1?l-1:l],h=[r&&e>1?e-1:e,r&&s>1?s-1:s],d=r?"0.5":"0.0";let p;o?p="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":p="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${u[0]/h[0]},
          ${u[1]/h[1]});
      const vec2 inputShapeRC = vec2(${i}.0, ${l}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${p};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eG(n){const{inputs:t,backend:e,attrs:s}=n,{images:r}=t,{alignCorners:o,halfPixelCenters:a,size:i}=s,[l,c]=i,u=new tG(r.shape,l,c,o,a);return e.runWebGLProgram(u,[r],r.dtype)}const nG={kernelName:ic,backendName:"webgl",kernelFunc:eG};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sG{constructor(t,e,s){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;const[,r,o]=e,[,a,i]=t,l=[s&&a>1?r-1:r,s&&i>1?o-1:o],c=[s&&a>1?a-1:a,s&&i>1?i-1:i],u=l[0]/c[0],h=l[1]/c[1],d=1/u,p=1/h,f=Math.ceil(d)*2+2,m=Math.ceil(p)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${u});
        const float widthScale = float(${h});

        const float invHeightScale = float(${d});
        const float invWidthScale = float(${p});

        const int winHeight = int(${f});
        const int winWidth = int(${m});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float sourceFracRow =
              float(${l[0]}) *
                (float(dyR) / float(${c[0]}));

            float sourceFracCol =
                float(${l[1]}) *
                  (float(dyC) / float(${c[1]}));

            int sourceNearestRow = int(min(
                float(int(${r}) - 1),
                ${s} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${o}) - 1),
                ${s} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rG(n){const{inputs:t,backend:e,attrs:s}=n,{images:r,dy:o}=t,{alignCorners:a}=s,i=new sG(o.shape,r.shape,a);return e.runWebGLProgram(i,[o],o.dtype)}const oG={kernelName:ld,backendName:"webgl",kernelFunc:rG};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class aG{constructor(t,e){this.variableNames=["x"];const s=t.length;if(s>4)throw new Error(`WebGL backend: Reverse of rank-${s} tensor is not yet supported`);if(this.outputShape=t,s===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${t[0]} - coord - 1));
        }
      `;return}const r=i=>e.indexOf(i)!==-1&&t[i]!==1?`${t[i]} - coords[${i}] - 1`:`coords[${i}]`,o=t.map((i,l)=>r(l)).join(","),a=ne(s);this.userCode=`
      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${o}));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class iG{constructor(t,e){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const s=t.length;if(s>4)throw new Error(`WebGL backend: Reverse of rank-${s} tensor is not yet supported`);this.outputShape=t;const r=Qe("rc",s),o=`${r[s-1]} + 1 < ${this.outputShape[s-1]}`,a=`${r[s-2]} + 1 < ${this.outputShape[s-2]}`,i=ne(s);s===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${t[0]} - rc - 1),
            ${t[0]} - rc - 1);
          if(${o}){
              result.g = getChannel(getX(${t[0]} - (rc  + 1) - 1),
                ${t[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${i} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${l(r.slice())};
          if(${o}){
            result.g = ${c(r.slice())};
          }
          if(${a}) {
            result.b = ${u(r.slice())};
            if(${o}) {
              result.a = ${h(r.slice())};
            }
          }
          setOutput(result);
        }
    `;function l(f){return d(f)}function c(f){return f[s-1]="("+f[s-1]+" + 1)",d(f)}function u(f){return f[s-2]="("+f[s-2]+" + 1)",d(f)}function h(f){return f[s-1]="("+f[s-1]+" + 1)",f[s-2]="("+f[s-2]+" + 1)",d(f)}function d(f){const m=t.map((b,$)=>p($,f)),g=m.join(","),y=m.slice(-2).join(",");return`getChannel(getX(${g}), vec2(${y}))`}function p(f,m){return e.indexOf(f)!==-1&&t[f]!==1?`${t[f]} - ${m[f]} - 1`:`${m[f]}`}}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lG(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{dims:o}=s,a=r.shape.length,i=Et(o,r.shape);if(a===0)return dn({inputs:{x:r},backend:e});const l=X().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new iG(r.shape,i):new aG(r.shape,i);return e.runWebGLProgram(l,[r],r.dtype)}const cG={kernelName:cc,backendName:"webgl",kernelFunc:lG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class uG{constructor(t,e){this.variableNames=["Image"],this.outputShape=[];const s=t[1],r=t[2];this.outputShape=t;let o="";typeof e=="number"?o=`float outputValue = ${e.toFixed(2)};`:o=`
        vec3 fill = vec3(${e.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        uniform vec4 params;
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${o}
          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${s}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}getCustomSetupFunc(t,e,s,r){return(o,a)=>{this.paramsLoc==null&&(this.paramsLoc=o.getUniformLocationNoThrow(a,"params")),o.gl.uniform4f(this.paramsLoc,t,e,s,r)}}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hG={kernelName:yd,backendName:"webgl",kernelFunc:({inputs:n,attrs:t,backend:e})=>{const{image:s}=n,{radians:r,fillValue:o,center:a}=t,i=e,l=new uG(s.shape,o),[c,u]=gp(a,s.shape[1],s.shape[2]),h=l.getCustomSetupFunc(c,u,Math.sin(r),Math.cos(r));return i.runWebGLProgram(l,[s],s.dtype,h)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dG=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,pG=Lt({opSnippet:dG}),fG={kernelName:xa,backendName:"webgl",kernelFunc:pG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mG="return inversesqrt(x);",gG=Lt({opSnippet:mG,cpuKernelImpl:sz}),yG={kernelName:wa,backendName:"webgl",kernelFunc:gG};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ow{constructor(t,e,s,r,o,a,i=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;const l=ne(o.length),c=ne(a.length);let u="";s===1?u="i":s===2&&(u="i, j");const h=`getIndices(${u})`;let d="";r===1?d="i":r===2&&(d="i, coords[1]");const p=`getUpdates(${d})`,f=e>1?"strides[j]":"strides";this.userCode=`
        ${l} strides = ${l}(${o});

        void main() {
          ${c} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${t}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${e}; j++) {
              int index = round(${h});
              flattenedIndex += index * ${f};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${p};
              found = true;
            }
          }
          setOutput(mix(getDefaultValue(), sum, float(found)));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bG(n){const{inputs:t,backend:e,attrs:s}=n,{indices:r,updates:o}=t,{shape:a}=s,{sliceRank:i,numUpdates:l,sliceSize:c,strides:u,outputSize:h}=Pa(o,r,a),d=[h/c,c];if(h===0)return e.makeTensorInfo(a,r.dtype);const p=ot({inputs:{x:r},backend:e,attrs:{shape:[l,i]}}),f=ot({inputs:{x:o},backend:e,attrs:{shape:[l,c]}}),m=e.makeTensorInfo([],"float32",new Float32Array([0])),g=new ow(l,i,p.shape.length,f.shape.length,u,d),y=e.runWebGLProgram(g,[f,p,m],f.dtype),b=ot({inputs:{x:y},backend:e,attrs:{shape:a}});return e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(y),e.disposeIntermediateTensorInfo(m),b}const xG={kernelName:ud,backendName:"webgl",kernelFunc:bG};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wG{constructor(t,e,s){this.variableNames=["c","a","b"],this.outputShape=e;let r,o;if(s>4)throw Error(`Where for rank ${s} is not yet supported`);if(s===1)o="resRC",r="resRC";else{const i=["resRC.x","resRC.y","resRC.z","resRC.w"],l=[],c=[];for(let u=0;u<e.length;u++)c.push(`${i[u]}`),u<t&&l.push(`${i[u]}`);r=l.join(),o=c.join()}const a=ne(s);this.userCode=`
      void main() {
        ${a} resRC = getOutputCoords();
        float cVal = getC(${r});
        if (cVal >= 1.0) {
          setOutput(getA(${o}));
        } else {
          setOutput(getB(${o}));
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vG(n){const{inputs:t,backend:e}=n,{condition:s,t:r,e:o}=t,a=new wG(s.shape.length,r.shape,r.shape.length);return e.runWebGLProgram(a,[s,r,o],yn(r.dtype,o.dtype))}const $G={kernelName:uc,backendName:"webgl",kernelFunc:vG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kG=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${zc};
  float scale = ${Bc};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,CG=Lt({opSnippet:kG}),NG={kernelName:va,backendName:"webgl",kernelFunc:CG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IG="return 1.0 / (1.0 + exp(-1.0 * x));",SG=Lt({opSnippet:IG}),TG={kernelName:Na,backendName:"webgl",kernelFunc:SG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EG=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,AG=Lt({opSnippet:EG}),DG={kernelName:Ca,backendName:"webgl",kernelFunc:AG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RG=L1+`
  return sin(x);
`,FG=Lt({opSnippet:RG}),OG={kernelName:$a,backendName:"webgl",kernelFunc:FG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _G=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,LG=Lt({opSnippet:_G}),PG={kernelName:ka,backendName:"webgl",kernelFunc:LG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zG=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,BG=Lt({opSnippet:zG}),MG={kernelName:Ia,backendName:"webgl",kernelFunc:BG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VG=n=>{const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{blockShape:o,paddings:a}=s;N(r.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const i=o.reduce((y,b)=>y*b),l=[[0,0]];l.push(...a);for(let y=1+o.length;y<r.shape.length;++y)l.push([0,0]);const c=[],u=sw({inputs:{x:r},backend:e,attrs:{paddings:l,constantValue:0}}),h=Ha(u.shape,o,i,!1),d=ja(h.length,o.length,!1),p=qa(u.shape,o,i,!1),f=ot({inputs:{x:u},backend:e,attrs:{shape:h}}),m=on({inputs:{x:f},backend:e,attrs:{perm:d}}),g=ot({inputs:{x:m},backend:e,attrs:{shape:p}});return c.push(u),c.push(f),c.push(m),c.forEach(y=>e.disposeIntermediateTensorInfo(y)),g},WG={kernelName:pc,backendName:"webgl",kernelFunc:VG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UG(n){const{inputs:t,backend:e,attrs:s}=n,{sparseIndices:r,sparseValues:o,defaultValue:a}=t,{outputShape:i}=s,{sliceRank:l,numUpdates:c,strides:u,outputSize:h}=Pa(o,r,i),d=!1,p=new ow(c,l,r.shape.length,o.shape.length,u,[h,1],d),f=e.runWebGLProgram(p,[o,r,a],o.dtype),m=ot({inputs:{x:f},backend:e,attrs:{shape:i}});return e.disposeIntermediateTensorInfo(f),m}const GG={kernelName:dd,backendName:"webgl",kernelFunc:UG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HG(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{numOrSizeSplits:o,axis:a}=s,i=Et(a,r.shape)[0],l=Ip(r,o,i),c=r.shape.length,u=new Array(c).fill(0),h=r.shape.slice();return l.map(d=>{const p=[...h];p[i]=d;const f=ii({inputs:{x:r},backend:e,attrs:{begin:u,size:p}});return u[i]+=d,f})}const jG={kernelName:fc,backendName:"webgl",kernelFunc:HG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qG="return sqrt(x);",KG=Lt({opSnippet:qG}),XG={kernelName:Sa,backendName:"webgl",kernelFunc:KG};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YG="return x * x;",JG=Lt({opSnippet:YG}),ZG={kernelName:hd,backendName:"webgl",kernelFunc:JG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bg="return (a - b) * (a - b);",QG=qe({opSnippet:bg,packedOpSnippet:bg}),tH={kernelName:Ta,backendName:"webgl",kernelFunc:QG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eH({inputs:n,attrs:t,backend:e}){const{x:s}=n,r=Jn+`
    return x > 0.0 ? 1.0 : float(${t.alpha});
  `,o=new Fs(s.shape,r);return e.runWebGLProgram(o,[s],s.dtype)}const nH={kernelName:Fa,backendName:"webgl",kernelFunc:eH};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sH{constructor(t,e,s){this.variableNames=["x"],this.outputShape=s;const r=s.length,o=ne(s.length),a=ne(s.length);let i="";if(r===1)i="coords * strides + begin";else{let l=0;i=s.map((c,u)=>(l++,s.length===1?`coords * strides[${u}] + begin[${u}]`:`coords[${l-1}] * strides[${u}] + begin[${u}]`)).join(",")}this.userCode=`
      ${o} begin = ${o}(${t});
      ${o} strides = ${o}(${e});

      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${i}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rH(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{begin:o,end:a,strides:i,beginMask:l,endMask:c,ellipsisMask:u,newAxisMask:h,shrinkAxisMask:d}=s,{nonStrided:p,$begin:f,$strides:m,size:g,newShape:y,outShape:b}=Sd(r.shape,o,a,i,l,c,u,h,d),$=ot({inputs:{x:r},backend:e,attrs:{shape:y}});let x;if(p){const C=ii({inputs:{x:$},backend:e,attrs:{begin:f,size:g}});x=ot({inputs:{x:C},backend:e,attrs:{shape:b}}),e.disposeIntermediateTensorInfo(C)}else if(b.some(C=>C===0))x=e.makeTensorInfo(b,r.dtype,[]);else if(e.shouldExecuteOnCPU([$])){const I=e.texData.get($.dataId).values,S=Ft($.shape,$.dtype,I),E=oz(b,S,m,f);x=e.makeTensorInfo(b,$.dtype,E.values)}else{const k=new sH(f,m,b);x=e.runWebGLProgram(k,[$],$.dtype)}const w=ot({inputs:{x},backend:e,attrs:{shape:b}});return e.disposeIntermediateTensorInfo($),e.disposeIntermediateTensorInfo(x),w}const oH={kernelName:pd,backendName:"webgl",kernelFunc:rH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aH="return tan(x);",iH=Lt({opSnippet:aH}),lH={kernelName:Aa,backendName:"webgl",kernelFunc:iH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cH=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,uH=Lt({opSnippet:cH}),hH={kernelName:Da,backendName:"webgl",kernelFunc:uH};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class dH{constructor(t,e){this.variableNames=["A"];const s=new Array(t.length);for(let a=0;a<s.length;a++)s[a]=t[a]*e[a];this.outputShape=s,this.rank=s.length;const r=ne(this.rank),o=pH(t);this.userCode=`
      void main() {
        ${r} resRC = getOutputCoords();
        setOutput(getA(${o}));
      }
    `}}function pH(n){const t=n.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(t===1)return`imod(resRC, ${n[0]})`;const e=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],s=[];for(let r=0;r<n.length;r++)s.push(`imod(${e[r]}, ${n[r]})`);return s.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aw(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{reps:o}=s;if(r.dtype==="string"){const c=e.readSync(r.dataId).map(d=>Vr(d)),u=Ft(r.shape,r.dtype,c),h=iz(u,o);return e.makeTensorInfo(h.shape,h.dtype,h.values)}const a=new dH(r.shape,o);return e.runWebGLProgram(a,[r],r.dtype)}const fH={kernelName:Ra,backendName:"webgl",kernelFunc:aw};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mH(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{k:o,sorted:a}=s,i=e.readSync(r.dataId),[l,c]=lz(i,r.shape,r.dtype,o,a);return[e.makeTensorInfo(l.shape,l.dtype,l.values),e.makeTensorInfo(c.shape,c.dtype,c.values)]}const gH={kernelName:fd,backendName:"webgl",kernelFunc:mH};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yH{constructor(t,e,s,r,o,a){this.variableNames=["Image","Transforms"],this.outputShape=a;const i=s==="nearest"?1:2;let l;switch(r){case"constant":l=1;break;case"reflect":l=2;break;case"wrap":l=3;break;case"nearest":l=4;break;default:l=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${l} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${l} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${l} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${t} && 0 <= coordX && coordX < ${e}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${o});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${o});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${e}));
                float mapY = mapCoord(inY, float(${t}));

                if (${i} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bH(n){const{inputs:t,backend:e,attrs:s}=n,{image:r,transforms:o}=t,{interpolation:a,fillMode:i,fillValue:l,outputShape:c}=s,[u,h,d,p]=r.shape,[f,m]=c??[h,d],g=[u,f,m,p],y=new yH(h,d,a,i,l,g);return e.runWebGLProgram(y,[r,o],"float32")}const xH={kernelName:md,backendName:"webgl",kernelFunc:bH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wH(n){const{inputs:t,attrs:e,backend:s}=n,{axis:r}=e,{x:o}=t;ri(o,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const a=s.readSync(o.dataId),{outputValues:i,outputShape:l,indices:c}=cz(a,r,o.shape,o.dtype);return[s.makeTensorInfo(l,o.dtype,i),s.makeTensorInfo([c.length],"int32",c)]}const vH={kernelName:gd,backendName:"webgl",kernelFunc:wH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $H(n){const{inputs:t,backend:e,attrs:s}=n,{value:r}=t;let{axis:o}=s;o<0&&(o+=r.shape.length);const a=r,i=a.shape.length,l=r.shape[o],c=new Array(i-1);let u=0;for(let m=0;m<i;m++)m!==o&&(c[u++]=a.shape[m]);const h=[],d=new Array(i).fill(0),p=a.shape.slice();p[o]=1;const f=new Array(l);for(let m=0;m<f.length;m++){d[o]=m;const g=ii({inputs:{x:a},backend:e,attrs:{begin:d,size:p}}),y=ot({inputs:{x:g},backend:e,attrs:{shape:c}});f[m]=y,h.push(g)}return h.forEach(m=>e.disposeIntermediateTensorInfo(m)),f}const kH={kernelName:yc,backendName:"webgl",kernelFunc:$H};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class CH{constructor(t,e){this.variableNames=["x","segmentIds"];const s=t.windowSize,r=t.batchSize,o=t.inSize,a=t.numSegments,i=a*Math.ceil(o/s);this.outputShape=[r,i];const l="0.0",c="sumValue",u=Math.floor(s/4)*4,h=s%4,d=`
        sumValue += dot(values, segFilter);
    `;let p="";o%s>0&&(p=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return initializationValue;
        }
      `);let f="";o%s>0&&(f=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${l};

      float getValue(int batch, int inIdx) {
        ${p}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${f}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${a})) * float(${s}));
        int currentSeg = int(mod(float(outIdx), float(${a})));

        float sumValue = 0.0;

        for (int i = 0; i < ${u}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${d}
        }

        int inIdx = inOffset + ${u};
        if (${h===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${d}
        } else if (${h===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${d}
        } else if (${h===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${d}
        }
        setOutput(${c});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NH(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,segmentIds:o}=t,{numSegments:a}=s,i=r.shape.length,l=[];let c=0;const u=ye([c],i);let h=r;u!=null&&(h=on({inputs:{x:r},backend:e,attrs:{perm:u}}),l.push(h),c=ve(1,i)[0]);const d=pb(h.shape,c,a),p=H([h.shape[c]]),f=ot({inputs:{x:h},backend:e,attrs:{shape:[-1,p]}});l.push(f);const m=bd(r.dtype),g=(x,w,C,k,I)=>{const S=x.shape[0],E=x.shape[1],R=db(E,I),L={windowSize:R,inSize:E,batchSize:S,numSegments:I},O=new CH(L,w),z=e.compileAndRun(O,[x,C],k);if(l.push(z),z.shape[1]===I)return z;const M=rw({backend:e,attrs:{start:0,stop:I,step:1,dtype:"float32"}}),V=aw({inputs:{x:M},backend:e,attrs:{reps:[E/R]}});return l.push(M),l.push(V),g(z,w,V,k,I)},y=g(f,"unsortedSegmentSum",o,m,a),b=ot({inputs:{x:y},backend:e,attrs:{shape:d}});let $=b;if(u!=null){l.push(b);const x=no(u);$=on({inputs:{x:$},backend:e,attrs:{perm:x}})}return l.forEach(x=>e.disposeIntermediateTensorInfo(x)),$}const IH={kernelName:bc,backendName:"webgl",kernelFunc:NH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SH=[gW,xW,rB,aB,cB,dB,fB,yB,xB,vB,NB,SB,AB,FB,MB,LB,UB,qB,HB,JB,QB,eM,oM,dM,fM,wM,$M,IM,EM,Bz,FM,UM,HM,PM,XM,JM,qM,tV,sV,aV,lV,uV,pV,xV,vV,mV,CV,SV,DV,_V,BV,WV,UV,GV,jV,KV,YV,ZV,t4,r4,i4,u4,d4,m4,x4,k4,S4,zz,E4,RM,R4,_4,z4,Vz,W4,j4,K4,eW,Z4,oW,lW,dW,vW,EW,SW,FW,_W,PW,NW,BW,VW,HW,XW,QW,iU,jz,cU,dU,mU,bU,gM,vU,kU,NU,TU,RU,Uz,OU,_U,yM,sU,zU,jU,WU,Kz,YU,QU,nG,oG,cG,hG,fG,yG,xG,$G,NG,TG,DG,OG,PG,uM,oU,MG,WG,GG,jG,XG,ZG,tH,nH,oH,rU,eB,lH,hH,fH,gH,xH,nB,vH,kH,IH,$U];for(const n of SH)zg(n);/**
 * @license
 * Copyright 2019 Victor Dibia.
 * Handtrack.js - A library for prototyping realtime hand tracking using neural networks.
 * Licensed under the MIT License (the "License");
 * Code snippets from the tensorflow coco-ssd example are reused here - https://github.com/tensorflow/tfjs-models/tree/master/coco-ssd
 * =============================================================================
 */const TH="https://cdn.jsdelivr.net/npm/handtrackjs@latest/models/webmodel/",EH={1:"open",2:"closed",3:"pinch",4:"point",5:"face",6:"pointtip",7:"pinchtip"},AH={flipHorizontal:!1,outputStride:16,imageScaleFactor:1,maxNumBoxes:20,iouThreshold:.2,scoreThreshold:.6,modelType:"ssd320fpnlite",modelSize:"small",bboxLineWidth:"2",fontSize:17,basePath:TH,labelMap:EH,renderThresholds:null},DH={large:"base",medium:"fp16",small:"int8"},xg={open:"#374151",closed:"#B91C1C",pinch:"#F59E0B",point:"#10B981",face:"#3B82F6",pointtip:"#6366F1",pinchtip:"#EC4899"},wg={ssd320fpnlite:["StatefulPartitionedCall/Postprocessor/Slice","StatefulPartitionedCall/Postprocessor/ExpandDims_1"],ssd640fpnlite:["StatefulPartitionedCall/Postprocessor/Slice","StatefulPartitionedCall/Postprocessor/ExpandDims_1"],centernet512fpn:["Identity_4:0","Identity:0","Identity_2:0"]};async function RH(n){let t=Object.assign({},AH,n);const e=new _H(t);return await e.load(),e}function FH(n){return new Promise(function(t,e){n||t({status:!1,msg:"please provide a valid video element"}),n.width=n.width||640,n.height=n.width*(n.videoHeight/n.videoWidth),n.style.height="20px",navigator.mediaDevices.getUserMedia({audio:!1,video:{facingMode:"user"}}).then(s=>{window.localStream=s,n.srcObject=s,n.onloadedmetadata=()=>{n.height=n.width*(n.videoHeight/n.videoWidth),n.style.height=parseInt(n.style.width)*(n.videoHeight/n.videoWidth).toFixed(2)+"px",n.play(),t({status:!0,msg:"webcam successfully initiated."})}}).catch(function(s){t({status:!1,msg:s})})})}async function OH(){if(window.localStream)window.localStream.getTracks().forEach(n=>(n.stop(),!0));else return!1}class _H{constructor(t){this.modelPath=t.basePath+t.modelType+"/"+(DH[t.modelSize]||"base")+"/model.json ",this.modelParams=t}async load(){this.fps=0,this.model=await FA(this.modelPath);const t=xe([1,300,300,3],"int32"),e=await this.model.executeAsync(t,wg[this.modelParams.modelType]);e.map(async s=>await s.data()),e.map(async s=>s.dispose()),$t(t)}async detect(t){let e=Date.now();const[s,r]=LH(t),o=vg(this.modelParams.imageScaleFactor,s,this.modelParams.outputStride),a=vg(this.modelParams.imageScaleFactor,r,this.modelParams.outputStride),i=_(()=>{const c=Wv(t);return this.modelParams.flipHorizontal?c.reverse(1).resizeBilinear([o,a]).expandDims(0).toInt():c.resizeBilinear([o,a]).expandDims(0).toInt()}),l=this;return this.model.executeAsync(i,wg[this.modelParams.modelType]).then(function(c){i.dispose();let u=[];if(l.modelParams.modelType==="centernet512fpn"){const d=c[0].dataSync(),p=c[1].arraySync(),f=c[2].dataSync();$t(c),u=l.buildDetectObjectsCenternet(r,s,p[0],d,f),console.log(u)}else{const d=c[0].dataSync(),p=c[1].dataSync();$t(c);const[f,m]=PH(d,c[0].shape[1],c[0].shape[2]),g=Gv();_f("cpu");const y=_(()=>{const $=Ei(p,[c[1].shape[1],c[1].shape[3]]);return ar.nonMaxSuppression($,f,l.modelParams.maxNumBoxes,l.modelParams.iouThreshold,l.modelParams.scoreThreshold)}),b=y.dataSync();y.dispose(),_f(g),u=l.buildDetectedObjects(r,s,p,f,b,m)}let h=Date.now();return l.fps=Math.round(1e3/(h-e)),u})}buildDetectedObjects(t,e,s,r,o,a){const i=o.length,l=[];for(let c=0;c<i;c++){const u=[];for(let g=0;g<4;g++)u[g]=s[o[c]*4+g];const h=u[0]*e,d=u[1]*t,p=u[2]*e,f=u[3]*t;u[0]=d,u[1]=h,u[2]=f-d,u[3]=p-h;const m=Math.round(a[o[c]])+1;l.push({bbox:u,class:m,label:this.modelParams.labelMap[m],score:r[o[c]].toFixed(2)})}return l}buildDetectObjectsCenternet(t,e,s,r,o){const a=[];for(let i=0;i<r.length;i++){const l=s[i],c=l[0]*e,u=l[1]*t,h=l[2]*e,d=l[3]*t;l[0]=u,l[1]=c,l[2]=d-u,l[3]=h-c;const p=Math.round(o[i])+1;a.push({bbox:l,class:p,label:this.modelParams.labelMap[p],score:r[i].toFixed(2)})}return a.slice(0,10)}getFPS(){return this.fps}setModelParameters(t){this.modelParams=Object.assign({},this.modelParams,t)}getModelParameters(){return this.modelParams}roundRect(t,e,s,r,o,a,i,l){if(typeof l>"u"&&(l=!0),typeof a>"u"&&(a=5),typeof a=="number")a={tl:a,tr:a,br:a,bl:a};else{var c={tl:0,tr:0,br:0,bl:0};for(var u in c)a[u]=a[u]||c[u]}t.beginPath(),t.moveTo(e+a.tl,s),t.lineTo(e+r-a.tr,s),t.quadraticCurveTo(e+r,s,e+r,s+a.tr),t.lineTo(e+r,s+o-a.br),t.quadraticCurveTo(e+r,s+o,e+r-a.br,s+o),t.lineTo(e+a.bl,s+o),t.quadraticCurveTo(e,s+o,e,s+o-a.bl),t.lineTo(e,s+a.tl),t.quadraticCurveTo(e,s,e+a.tl,s),t.closePath(),i&&t.fill(),l&&t.stroke()}renderPredictions(t,e,s,r){s.clearRect(0,0,e.width,e.height),e.width=r.width,e.height=r.height,e.style.height=parseInt(e.style.width)*(r.height/r.width).toFixed(2)+"px",s.save(),this.modelParams.flipHorizontal&&(s.scale(-1,1),s.translate(-r.width,0)),s.drawImage(r,0,0,r.width,r.height),s.restore(),s.font="bold "+this.modelParams.fontSize+"px Arial";const o=this.modelParams.renderThresholds;for(let a=0;a<t.length;a++){const i=t[a];(!o||i.score>o[i.label])&&(s.beginPath(),s.fillStyle="rgba(255, 255, 255, 0.6)",s.fillRect(i.bbox[0]+1,i.bbox[1]+1,i.bbox[2]-1,this.modelParams.fontSize*1.5),s.lineWidth=this.modelParams.bboxLineWidth,this.roundRect(s,i.bbox[0],i.bbox[1],i.bbox[2],i.bbox[3],5,!1,!0),s.strokeStyle=xg[i.label],s.fillStyle=xg[i.label],s.stroke(),s.beginPath(),s.arc(i.bbox[0]+i.bbox[2]/2,i.bbox[1]+i.bbox[3]/2,2,0,2*Math.PI),s.fill(),s.stroke(),s.fillText(i.score+" | "+i.label,i.bbox[0]+5,i.bbox[1]+this.modelParams.fontSize*1.1))}s.fillStyle="rgba(255, 255, 255, 0.6)",this.roundRect(s,10,10,this.modelParams.fontSize*4.6,this.modelParams.fontSize+8,5,!0,!1),s.strokeStyle="#374151",s.fillStyle="#374151",s.font="bold "+this.modelParams.fontSize+"px Arial",s.fillText("FPS: "+this.fps,18,this.modelParams.fontSize+12)}dispose(){this.model&&this.model.dispose()}}function vg(n,t,e){const s=t*n-1;return s-s%e+1}function LH(n){return n instanceof pe?[n.shape[0],n.shape[1]]:[n.height,n.width]}function PH(n,t,e){const s=[],r=[];for(let o=0;o<t;o++){let a=Number.MIN_VALUE,i=-1;for(let l=0;l<e;l++)n[o*e+l]>a&&(a=n[o*e+l],i=l);s[o]=a,r[o]=i}return[s,r]}const zH={class:"mt-2"},BH={class:"mb-1 mt-2"},MH={class:"text-medium-emphasis"},VH={class:"mt-2"},WH={class:"text-h4 text-medium-emphasis mt-4"},UH={key:0,style:{"font-style":"italic","font-size":"1.2em"},class:"mt-3"},GH=["id"],HH=["innerHTML"],jH={key:1,class:"mt-6"},qH={key:0,class:"mb-4"},KH={key:1},XH={style:{"font-size":"0.9em"}},YH={class:"mt-4"},JH={class:"text-center",style:{"margin-top":"40px"}},ZH={key:0},QH={class:"text-center mt-2",id:"ratingPart"},tj={class:"text-medium-emphasis mt-6"},ej={key:1,class:"custom-bottom-sheet no-print"},nj={class:"sheet-content",style:{"background-color":"rgb(226, 226, 226)"}},sj={key:0,class:"sheet-ingredients"},rj={key:0},oj={key:1},aj={key:0,class:"mb-2"},ij={style:{"font-size":"1.7em","border-radius":"6px","background-color":"#ffffff",color:"#3d3d3d"},class:"px-2"},lj={key:0},cj={key:1},uj={style:{"background-color":"rgb(203, 203, 204)",display:"flex"}},hj={class:"ml-2",style:{width:"100px","flex-shrink":"0"}},dj={class:"mx-2",style:{flex:"1"}},$g="*",pj={__name:"MealMaker",setup(n){gf.extend(cw);const t=Cg(),e=Ng(),{authInfo:s,githubMode:r,lanAddress:o}=uw(e),a=Ig(),l=Ch().query.id,c=re(null),u=re(null),h=re(2),d=re([]),p=re(null),f=re(!1),m=re(!1),g=re(null),y=re(null),b=re(null),$=re([]),x=re(!0),w=re([]),C=re(!1),k=re([]),I=re(-1),S=re([]);Nh(async()=>{c.value=null,u.value=null,await e.getAuthInfo(),await Q(),await et(!0),c.value.planned&&!c.value.cooked&&b.value().then(async W=>{if(W){const St={cooked:!0};await Is.updateRecipe(s.value.userId,l,St)}});const q=localStorage.getItem("timers-"+l);if(q)try{const W=JSON.parse(q);W.forEach(St=>{St.isPaused=!0}),d.value=W.map(St=>({...St,timeoutId:null}))}catch(W){console.error("Timer konnte nicht geladen werden:",W)}}),hw(()=>{d.value.forEach(q=>clearTimeout(q.timeoutId)),clearTimeout(p.value)}),dw(d,q=>{const W=q.map(({timeoutId:St,...At})=>At);localStorage.setItem("timers-"+l,JSON.stringify(W))},{deep:!0}),window.addEventListener("message",q=>{var St;const W=q.data;if(!(!W||typeof W!="object")&&(W.type==="speech-commands:ready"&&console.log(`iFrame bereit (${((St=W.vocab)==null?void 0:St.length)||0} Wörter)`),W.type==="speech-commands:result")){const At=W.scores.find(Pt=>Pt.label==="one"),Mt=W.scores.find(Pt=>Pt.label==="eight");(At&&At.score>=.9||Mt&&Mt.score>=.9)&&bf.reduceExecutions("speech-commands",()=>{tt()},1e3)}});async function E(){const q={voting:0,planned:!0};await Is.updateRecipe(s.value.userId,l,q),await Q()}const R=ru(()=>!w||w.value.length===0?0:w.value.filter(q=>!q.ingredient&&q.duration).reduce((q,W)=>q+W.duration,0)),L=ru(()=>!w||w.value.length===0?[]:w.value.filter(q=>!!q.ingredient)),O=ru(()=>!w||w.value.length===0?[]:w.value.filter(q=>!q.ingredient));function z(){const q=[];c.value.ingredients.forEach(W=>{if(W.preparationRequired){let St=W.preparationLongText;const At=u.value.find(Mt=>W.name===Mt.name);if(At){let Mt="";Mt=At.amount?At.amount+(At.unit?" "+At.unit:"")+" ":"",St?St=St.replace(W.basicName,Mt+" "+W.basicName):St=Mt+" "+W.basicName+" vorbereiten."}q.push({name:St,ingredient:!0})}}),c.value.sections.forEach(W=>{W.ingredientsPreparations&&W.ingredientsPreparations.length>0&&W.ingredientsPreparations.forEach(St=>{let At=[],Mt=St.instruction;for(let Pt=0;Pt<W.usedIngredients.length;Pt++){let zt=W.usedIngredients[Pt];const Vt=u.value.find(De=>De.name===zt.ingredientNameList);let ke="";Vt&&!At.includes(Vt.name)&&(ke=Vt.amount?Vt.amount+(Vt.unit?" "+Vt.unit:"")+" ":"",At.push(Vt.name),Mt=Mt.replace(zt.ingredientNameText,ke+" "+zt.ingredientNameText))}q.push({name:Mt,originalName:St.instruction,sectionIndex:W.index-1,duration:St.duration})})}),w.value=q}function M(){I.value=-1,x.value=!0,et()}function V(q){return r.value?"https://mmhhhh.de/data/home/recipes/"+q.id+"/image.jpg":o.value+"api/"+s.value.userId+"/recipes/"+q.id+"/image"}function K(){window.close(),setTimeout(()=>{document.title="Cookio - Rezeptmanager",a.push("/recipes")},500)}async function G(){const q={preparations:[]};await Is.updateRecipe(s.value.userId,l,q),await Q(),await et(!0)}function j(q){dt(q),et(!0)}async function J(q){const W={rating:q};await Is.updateRecipe(s.value.userId,l,W),await et()}async function Z(){if(!r.value){const q={preparations:w.value};await Is.updateRecipe(s.value.userId,l,q),await et()}}function tt(q){q&&!q.target.closest(".stopwatch-button")&&(I.value++,et())}async function Q(){c.value=await Is.getRecipe(s.value.userId,l),c.value.ingredients=(await Is.getRecipeIngredients(s.value.userId,l)).data,c.value.sections=(await Is.getRecipeSections(s.value.userId,l)).data}async function et(q=!1){let W=JSON.parse(JSON.stringify(c.value.sections));dt(),q&&(c.value.preparations&&c.value.preparations.length>0?w.value=c.value.preparations:z()),k.value=[];let St=-1;if(d.value)for(let zt=d.value.length-1;zt>=0;zt--)(d.value[zt].remainingSeconds===0||!d.value[zt].timerStarted)&&(d.value=d.value.filter(Vt=>Vt.id!==d.value[zt].id||Vt.id===d.value[zt].id&&d.value[zt].timerStarted));const At=[];let Mt=null,Pt=0;for(let zt=0;zt<W.length;zt++){let Vt=W[zt],ke=Vt.description,De="",zn=ce(ke);if(Pt=St+zn.length,zn.forEach((wt,Je)=>{St++,k.value.push(wt);const Ut=w.value.find(Re=>Re.checked&&zt===Re.sectionIndex&&Re.originalName===wt);if(I.value>Pt||I.value>=St)De=De+'<span style="color: #9a9a9a;">'+wt+" </span>";else if(I.value+1===St){if(Ut)De=De+'<span style="color: #9a9a9a;">'+wt+" </span>",I.value++;else if(t.smAndDown.value?De=De+'<span style="background-color: #bfe7d2; font-size: 1.4em; box-decoration-break: clone;-webkit-box-decoration-break: clone;" class="pa-2">'+wt+" </span> ":De=De+'▶&nbsp;<span style="background-color: #bfe7d2; padding-top: 4px; padding-bottom: 4px">'+wt+" </span> ",Vt.timer&&Vt.timer.length>0)for(let Re=0;Re<Vt.timer.length;Re++)wt.includes(Vt.timer[Re].descriptionText)&&d.value.push({id:zt+"-"+Re,title:Vt.timer[Re].title,remainingSeconds:Vt.timer[Re].duration*60,timerStarted:!1,isPaused:!1,timeoutId:null,descriptionTextAfter:Vt.timer[Re].descriptionTextAfter})}else De=De+wt+" "}),ke=De,I.value+1>Pt&&W.length>zt+1&&(Mt=zt+1),Vt.timer&&Vt.timer.length>0)for(let wt=0;wt<Vt.timer.length;wt++){let Je=Vt.timer[wt];ke=ke.replace(Je.descriptionText,'<span class="pa-1 stopwatch-button" style="cursor: pointer; background-color: rgba(187,187,187,0.66); border: rgba(41,56,80,0.49) solid 3px; border-radius: 20px; color: #545454; font-size: 0.9em" data-id="'+wt+'" data-sectionid="'+zt+'"> ⏱ '+Je.descriptionText+"</span >")}m.value||Vt.ingredientsPreparations.forEach(wt=>{w.value.find(Ut=>Ut.checked&&zt===Ut.sectionIndex&&Ut.originalName===wt.instruction)&&(ke=ke.replace(wt.instruction,'<span style="text-decoration-line: line-through;text-decoration-style: solid;text-decoration-thickness: 2px;text-underline-offset: 4px;">'+wt.instruction+"</span>"))}),Vt.usedIngredients.forEach(wt=>{const Je=u.value.find(Re=>Re.name===wt.ingredientNameList);let Ut="";Je&&!At.includes(Je.name)&&(Ut=Je.amount?Je.amount+(Je.unit?" "+Je.unit:"")+" ":"",At.push(Je.name)),ke=ke.replace(wt.ingredientNameText,"<b>"+Ut+wt.ingredientNameText+"</b>")}),Vt.description=ke}I.value>Pt-1&&(x.value=!1),S.value=W,await a.push("/recipes/go?id="+l+"#section-"+(Mt||0)),document.title=c.value.title+" - Cookio"}function st(){document.getElementById("scFrame").contentWindow.postMessage({type:"speech-commands:control",action:"start"},$g),C.value=!0}function rt(){document.getElementById("scFrame").contentWindow.postMessage({type:"speech-commands:control",action:"stop"},$g),C.value=!1}function at(q){g.value(q)}function ht(){m.value=!m.value,et()}function dt(q){q&&(h.value=q);let W=c.value.portions?c.value.portions:2;u.value=[],c.value.ingredients.forEach(St=>{u.value.push({name:St.name,unit:St.unit,amount:Math.ceil(St.amount/W*h.value)})})}function yt(q){const W=q.target.closest(".stopwatch-button");if(W){const St=W.dataset.id,At=W.dataset.sectionid,Mt=parseInt(St,10),Pt=parseInt(At,10),zt=c.value.sections[Pt].timer[Mt];d.value.push({id:Pt+"-"+Mt,title:zt.title,remainingSeconds:zt.duration*60,timerStarted:!1,isPaused:!1,timeoutId:null,descriptionTextAfter:zt.descriptionTextAfter})}}const It=q=>{const W=gf.duration(q*1e3),St=String(W.minutes()).padStart(2,"0"),At=String(W.seconds()).padStart(2,"0");return`${St}:${At}`};function Bt(q){d.value=d.value.filter(W=>W.id!==q)}const Xt=q=>{q.isPaused||q.remainingSeconds<=0||d.value.find(W=>W.id===q.id)&&(q.remainingSeconds--,q.remainingSeconds<=0&&($.value.push(q),y.value($.value).then(()=>{$.value=[],d.value=d.value.filter(W=>W.remainingSeconds>0)})),q.remainingSeconds>0?q.timeoutId=setTimeout(()=>Xt(q),1e3):q.timeoutId=null)},Yt=q=>{clearTimeout(q.timeoutId),q.timerStarted=!0,q.isPaused=!1,q.timeoutId=setTimeout(()=>Xt(q),1e3)},jt=q=>{q.isPaused=!q.isPaused,!q.isPaused&&q.remainingSeconds>0&&(q.timeoutId=setTimeout(()=>Xt(q),1e3))},qt=q=>{q.remainingSeconds=q.remainingSeconds+60},Jt=q=>{const W=q.remainingSeconds-60;q.remainingSeconds=Math.max(W,0)};function ce(q,W=[]){const St=["ca.","etc.","ggf.","bspw.","bzw.","vgl.","Dr.","Prof.","Nr.","Stk.","Abs.","Art.","Sek.","Std.","Min.","z. B.","u. a.","i. d. R.","z. T.","sog."],At=Ut=>Ut.toLowerCase().replace(/[.\s]/g,""),Mt=new Set([...St,...W].map(At)),Pt=Ut=>Ut>="0"&&Ut<="9",zt=Ut=>/\s/.test(Ut),Vt=Ut=>/[)"'\]\}»”]/.test(Ut),ke=q.length,De=[];let zn="",wt=0;function Je(Ut){const Re=Math.max(0,Ut-15),Sr=At(q.slice(Re,Ut));for(const Bn of Mt)if(Sr.endsWith(Bn))return!0;if(q[Ut]==="."){let Bn=Ut+1;for(;Bn<ke&&zt(q[Bn]);)Bn++;if(Bn+1<ke&&/[A-Za-zÄÖÜäöü]/.test(q[Bn])&&q[Bn+1]===".")return!0}return!1}for(;wt<ke;){const Ut=q[wt];if(zn+=Ut,Ut==="."||Ut==="!"||Ut==="?"){const Re=q[wt-1]||"",Sr=q[wt+1]||"";if(!(Ut==="."&&Pt(Re)&&Pt(Sr))&&!Je(wt)){let $n=wt+1;for(;$n<ke&&(Vt(q[$n])||q[$n]==="*");)zn+=q[$n],$n++;const ci=zn.trim();for(ci&&De.push(ci),zn="";$n<ke&&zt(q[$n]);)$n++;wt=$n;continue}}wt++}return zn.trim()&&De.push(zn.trim()),De}const Ye=re(null),me=pw(null),Ae=re(!1),en={flipHorizontal:!0,maxNumBoxes:2,scoreThreshold:.6,iouThreshold:.5};async function hs(){if(!await FH(Ye.value))throw new Error("Kamerazugriff verweigert.");await new Promise(W=>{if(Ye.value.readyState>=2)return W();Ye.value.onloadeddata=()=>W()})}async function fn(){me.value=await RH(en)}async function vn(){if(!Ae.value)return;const q=await me.value.detect(Ye.value);q.length>0&&q.filter(W=>W.label==="pinch"&&W.score>.8).length>0&&(bf.reduceExecutions("recognition-pinch",()=>{I.value++,et()},1e3),console.log("preds",q)),await new Promise(W=>setTimeout(W,200)),Ae.value&&vn()}async function Zn(){if(!Ae.value)try{await hs(),me.value||await fn(),Ae.value=!0,vn()}catch(q){console.error(q)}}function Pn(){Ae.value&&(Ae.value=!1,OH(Ye.value))}return fw(()=>{Pn()}),(q,W)=>{const St=ue("v-app-bar-nav-icon"),At=ue("v-icon"),Mt=ue("v-list-item-title"),Pt=ue("v-list-item"),zt=ue("v-divider"),Vt=ue("v-chip"),ke=ue("v-list"),De=ue("v-menu"),zn=ue("v-app-bar"),wt=ue("v-btn"),Je=ue("v-img"),Ut=ue("v-checkbox"),Re=ue("v-rating"),Sr=ue("v-container"),Bn=ue("v-table"),$n=ue("v-col"),ci=ue("v-row");return Dt(),Zt("div",null,[ct(zn,{collapse:"",elevation:0,color:"#6969695A",class:"no-print"},{prepend:vt(()=>[ct(De,null,{activator:vt(({props:pt})=>[ct(St,mw(gw(pt)),null,16)]),default:vt(()=>[ct(ke,{class:"mt-2"},{default:vt(()=>[ct(Pt,{onClick:ht},{default:vt(()=>[ct(Mt,null,{default:vt(()=>[ct(At,{icon:"mdi-knife",size:"20"}),Ce(" Schnibbelmodus "+an(m.value?"beenden":""),1)]),_:1})]),_:1}),C.value?de("",!0):(Dt(),Vn(Pt,{key:0,onClick:W[0]||(W[0]=pt=>st())},{default:vt(()=>[ct(Mt,null,{default:vt(()=>[ct(At,{icon:"mdi-microphone-message",size:"20"}),W[11]||(W[11]=Ce(" Sprachsteuerung aktivieren",-1))]),_:1})]),_:1})),C.value?(Dt(),Vn(Pt,{key:1,onClick:W[1]||(W[1]=pt=>rt())},{default:vt(()=>[ct(Mt,null,{default:vt(()=>[ct(At,{icon:"mdi-microphone-message-off",size:"20"}),W[12]||(W[12]=Ce(" Sprachsteuerung beenden",-1))]),_:1})]),_:1})):de("",!0),Ae.value?de("",!0):(Dt(),Vn(Pt,{key:2,onClick:W[2]||(W[2]=pt=>Zn())},{default:vt(()=>[ct(Mt,null,{default:vt(()=>[ct(At,{icon:"mdi-hand-okay",size:"20"}),W[13]||(W[13]=Ce(" Gestensteuerung aktivieren",-1))]),_:1})]),_:1})),Ae.value?(Dt(),Vn(Pt,{key:3,onClick:W[3]||(W[3]=pt=>Pn())},{default:vt(()=>[ct(Mt,null,{default:vt(()=>[ct(At,{icon:"mdi-hand-okay",size:"20"}),W[14]||(W[14]=Ce(" Gestensteuerung beenden",-1))]),_:1})]),_:1})):de("",!0),ct(Pt,{onClick:W[4]||(W[4]=pt=>at(Ns(l)))},{default:vt(()=>[ct(Mt,null,{default:vt(()=>[ct(At,{icon:"mdi-truck",size:"20"}),W[15]||(W[15]=Ce(" Zutaten einkaufen",-1))]),_:1})]),_:1}),Ns(r)?de("",!0):(Dt(),Vn(Pt,{key:4,onClick:W[5]||(W[5]=pt=>E(c.value)),disabled:c.value.planned},{default:vt(()=>[ct(Mt,null,{default:vt(()=>[ct(At,{icon:"mdi-bowl-mix",size:"20"}),W[16]||(W[16]=Ce(" Einplanen",-1))]),_:1})]),_:1},8,["disabled"])),ct(Pt,{onClick:M,disabled:I.value===-1},{default:vt(()=>[ct(Mt,null,{default:vt(()=>[ct(At,{icon:"mdi-backup-restore",size:"20"}),W[17]||(W[17]=Ce(" Fortschritt zurücksetzen",-1))]),_:1})]),_:1},8,["disabled"]),ct(zt),ct(Pt,null,{default:vt(()=>[Tt("div",zH,[ct(At,{icon:"mdi-account-group",size:"20"}),W[18]||(W[18]=Ce(" Portionen ",-1))]),Tt("div",BH,[(Dt(),Zt(Ys,null,Js([1,2,3,4,5,6],pt=>Tt("span",{key:pt,class:"ml-1"},[ct(Vt,{color:pt===h.value?"indigo":null,"prepend-icon":"mdi-account",onClick:Mn=>j(pt)},{default:vt(()=>[Ce(an(pt),1)]),_:2},1032,["color","onClick"])])),64))])]),_:1})]),_:1})]),_:1})]),_:1}),c.value?(Dt(),Vn(Sr,{key:0,class:"pt-0"},{default:vt(()=>[Tt("div",null,[Tt("div",MH,[ct(wt,{variant:"plain","prepend-icon":"mdi-arrow-left",onClick:K},{default:vt(()=>[...W[19]||(W[19]=[Ce("Zurück",-1)])]),_:1})])]),Tt("div",VH,[!c.value.imageInProgress&&c.value.imageUploaded?(Dt(),Vn(Je,{key:0,height:"200",src:V(c.value),color:"grey",cover:""},null,8,["src"])):de("",!0),Tt("div",WH,an(c.value.title),1)]),m.value?de("",!0):(Dt(),Zt("div",{key:0,class:"mt-6",onClick:tt},[c.value.preheat?(Dt(),Zt("div",UH,an(c.value.preheat),1)):de("",!0),(Dt(!0),Zt(Ys,null,Js(S.value,(pt,Mn)=>(Dt(),Zt("div",{key:pt.index},[Tt("div",null,[Tt("h2",{style:{color:"dimgray"},class:"pt-8",id:"section-"+Mn},an(pt.index)+" "+an(pt.sectionTitle),9,GH)]),Tt("div",{style:{"font-size":"1.2em"},class:"mt-1",innerHTML:pt.description,onClick:yt,id:"sectionPart"},null,8,HH)]))),128))])),m.value?(Dt(),Zt("div",jH,[W[22]||(W[22]=Tt("h2",null,"Vorbereitungen",-1)),Ns(r)?de("",!0):(Dt(),Zt("div",qH,[ct(wt,{onClick:G,variant:"plain",rounded:"",style:{"font-size":"0.7em"}},{default:vt(()=>[...W[20]||(W[20]=[Ce("Zurücksetzen",-1)])]),_:1})])),W[23]||(W[23]=Tt("h3",null,"Zutatenvorbereitungen",-1)),Ns(L).length===0?(Dt(),Zt("div",KH," Keine Vorbereitungen nötig. ")):de("",!0),(Dt(!0),Zt(Ys,null,Js(Ns(L),pt=>(Dt(),Zt("div",{class:"mt-1",key:pt.name},[ct(Ut,{modelValue:pt.checked,"onUpdate:modelValue":Mn=>pt.checked=Mn,"hide-details":"auto",density:"comfortable",label:pt.name,onChange:Z},null,8,["modelValue","onUpdate:modelValue","label"])]))),128)),W[24]||(W[24]=Tt("h3",{class:"mt-3"},"Rezeptvorbereitungen",-1)),Tt("span",XH,"Dauer: "+an(Ns(R))+" Min.",1),(Dt(!0),Zt(Ys,null,Js(Ns(O),pt=>(Dt(),Zt("div",{class:"mt-1",key:pt.name},[ct(Ut,{modelValue:pt.checked,"onUpdate:modelValue":Mn=>pt.checked=Mn,"hide-details":"auto",density:"comfortable",label:pt.name,onChange:Z},null,8,["modelValue","onUpdate:modelValue","label"])]))),128)),Tt("div",YH,[ct(wt,{onClick:ht,color:"primary",variant:"outlined",rounded:""},{default:vt(()=>[...W[21]||(W[21]=[Ce("Schnibbelmodus beenden",-1)])]),_:1})])])):de("",!0),Tt("div",JH,[Ns(r)?de("",!0):(Dt(),Zt("div",ZH,[W[25]||(W[25]=Tt("span",{style:{"font-size":"1.6em"}},"Wie gut hat dir dieses Essen geschmeckt?",-1)),Tt("div",QH,[ct(Re,{"onUpdate:modelValue":[J,W[6]||(W[6]=pt=>c.value.rating=pt)],hover:"",length:"5",size:"30",modelValue:c.value.rating,"active-color":"primary"},null,8,["modelValue"])])])),Tt("div",tj,[ct(wt,{variant:"text","prepend-icon":"mdi-arrow-left",style:{"font-size":"1.1em"},onClick:K},{default:vt(()=>[...W[26]||(W[26]=[Ce("Zurück zur Übersicht",-1)])]),_:1})])]),W[27]||(W[27]=Tt("div",{style:{height:"600px"}},null,-1))]),_:1})):de("",!0),u.value?(Dt(),Zt("div",ej,[Tt("div",nj,[f.value?(Dt(),Zt("div",sj,[ct(Sr,{"max-width":"400"},{default:vt(()=>[ct(Bn,null,{default:vt(()=>[Tt("tbody",null,[(Dt(!0),Zt(Ys,null,Js(u.value,pt=>(Dt(),Zt("tr",{key:pt.name},[Tt("td",null,[pt.amount?(Dt(),Zt("span",rj,an(pt.amount),1)):de("",!0),W[28]||(W[28]=Ce()),pt.unit?(Dt(),Zt("span",oj,an(pt.unit),1)):de("",!0)]),Tt("td",null,an(pt.name),1)]))),128))])]),_:1})]),_:1})])):de("",!0),Tt("div",null,[d.value&&d.value.length>0?(Dt(),Zt("div",aj,[Tt("div",null,[ct(wt,{variant:"text",elevation:"0",disabled:"","prepend-icon":"mdi-timer-play-outline"},{default:vt(()=>[...W[29]||(W[29]=[Ce("Stoppuhren",-1)])]),_:1})]),(Dt(!0),Zt(Ys,null,Js(d.value,pt=>(Dt(),Zt("div",{key:pt.title,class:"my-1"},[ct(zt,{class:"mb-1"}),ct(ci,{align:"center"},{default:vt(()=>[ct(wt,{icon:"mdi-close",onClick:Mn=>Bt(pt.id),variant:"text"},null,8,["onClick"]),ct($n,{class:"text-left",style:{"font-size":"1.2em","font-weight":"400","line-height":"1.1 !important"}},{default:vt(()=>[Ce(an(pt.title),1)]),_:2},1024),ct($n,{class:"d-flex align-center justify-end"},{default:vt(()=>[ct(wt,{onClick:Mn=>Jt(pt),icon:"mdi-minus-circle-outline",class:"mr-2",elevation:"0"},null,8,["onClick"]),ct(wt,{onClick:Mn=>qt(pt),icon:"mdi-plus-circle-outline",class:"mr-2",elevation:"0"},null,8,["onClick"]),Tt("span",ij,an(It(pt.remainingSeconds)),1),pt.timerStarted?de("",!0):(Dt(),Vn(wt,{key:0,onClick:Mn=>Yt(pt),icon:"mdi-play-circle-outline",class:"ml-2",color:"rgb(152, 198, 226)",elevation:"0"},null,8,["onClick"])),pt.timerStarted?(Dt(),Vn(wt,{key:1,onClick:Mn=>jt(pt),class:"ml-2",color:"rgb(152, 198, 226)",elevation:"0",icon:""},{default:vt(()=>[pt.isPaused?(Dt(),Zt("span",lj,[ct(At,{icon:"mdi-play-circle-outline"})])):de("",!0),pt.isPaused?de("",!0):(Dt(),Zt("span",cj,[ct(At,{icon:"mdi-pause-circle-outline"})]))]),_:2},1032,["onClick"])):de("",!0)]),_:2},1024)]),_:2},1024)]))),128))])):de("",!0),Tt("div",uj,[Tt("span",hj,[ct(wt,{style:{width:"100%"},"min-height":"60",class:"my-2",variant:"elevated",onClick:W[7]||(W[7]=pt=>f.value=!f.value),elevation:"0","prepend-icon":"mdi-food-apple-outline"})]),Tt("span",dj,[ct(wt,{color:"rgb(191, 231, 210)",style:{width:"100%"},"min-height":"60",class:"my-2",variant:"elevated",disabled:!x.value,onClick:tt,elevation:"0","prepend-icon":"mdi-skip-forward"},{default:vt(()=>[...W[30]||(W[30]=[Ce("Nächster Schritt",-1)])]),_:1},8,["disabled"])])])])])])):de("",!0),W[31]||(W[31]=Tt("div",{style:{display:"none"}},[Tt("iframe",{id:"scFrame",src:"/tfjs.html",allow:"microphone"})],-1)),ct(bw,{onResult:W[8]||(W[8]=pt=>g.value=pt)}),ct(Nw,{onResult:W[9]||(W[9]=pt=>y.value=pt)}),ct(xw,{onResult:W[10]||(W[10]=pt=>b.value=pt),title:"Bitte bestätigen",message:"Das Rezept wurde eingeplant. Soll es auf 'Zubereitet' gesetzt werden?"}),Tt("video",{ref_key:"videoEl",ref:Ye,autoplay:"",playsinline:"",muted:"",style:{display:"none"}},null,512)])}}},fj=kg(pj,[["__scopeId","data-v-d2a144d7"]]),$j={__name:"index",setup(n){const t=Ch(),e=yw();re(!1);const s=t.query.id;return Nh(async()=>{s||e.push("/recipes")}),(r,o)=>(Dt(),Vn(fj))}};export{$j as default};
